{"ast":null,"code":"//导入商品简介组件\nimport Customer_Product from './customer_product.vue';\nimport util from \"@/components/customer/util\";\nexport default {\n  components: {\n    Customer_Product\n  },\n  data() {\n    return {\n      id: parseInt(this.$route.params.id),\n      list: [],\n      //品牌过滤\n      filterBrand: '',\n      //颜色过滤\n      filterColor: '',\n      //排序依据，可选值：\n      //cost-desc价格降序\n      //cost-asc价格升序\n      //sales销量\n      order: '',\n      bestar: true,\n      shop_stars: 0\n    };\n  },\n  computed: {\n    brands() {\n      //return this.$store.getters.brands;\n      console.log(\"bb22\");\n      const brands = this.list.map(item => item.fields.product_brand);\n      console.log(\"bbbbb22\");\n      console.log(brands);\n      return util.getFilterArray(brands);\n    },\n    colors() {\n      const colors = this.list.map(item => item.fields.product_color);\n      return util.getFilterArray(colors);\n    },\n    filteredAndOrderedList() {\n      //拷贝原数组\n      let list = [...this.list];\n      //品牌过滤\n      if (this.filterBrand !== '') {\n        list = list.filter(item => item.fields.product_brand === this.filterBrand);\n      }\n      //颜色过滤\n      if (this.filterColor !== '') {\n        list = list.filter(item => item.fields.product_color === this.filterColor);\n      }\n      //排序\n      if (this.order !== '') {\n        if (this.order === 'sales') {\n          list = list.sort((a, b) => b.fields.product_sales - a.fields.product_sales);\n        } else if (this.order === 'cost-desc') {\n          list = list.sort((a, b) => b.fields.product_cost - a.fields.product_cost);\n        } else if (this.order === 'cost-asc') {\n          list = list.sort((a, b) => a.fields.product_cost - b.fields.product_cost);\n        }\n      }\n      return list;\n    }\n  },\n  methods: {\n    async getProductsList() {\n      //从Vuex获取商品列表信息\n      //return this.$store.state.productList;\n      await this.axios.get('show_products/').then(response => {\n        console.log(response.data.list);\n        this.list = response.data.list.filter(i => i.fields.product_business === this.id);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //品牌筛选\n    handleFilterBrand(brand) {\n      //点击品牌过滤，再次点击取消\n      if (this.filterBrand === brand) {\n        this.filterBrand = '';\n      } else {\n        this.filterBrand = brand;\n      }\n    },\n    //颜色筛选\n    handleFilterColor(color) {\n      //点击颜色过滤，再次点击取消\n      if (this.filterColor === color) {\n        this.filterColor = '';\n      } else {\n        this.filterColor = color;\n      }\n    },\n    handleOrderDefault() {\n      this.order = '';\n    },\n    handleOrderSales() {\n      this.order = 'sales';\n    },\n    handleOrderCost() {\n      //当点击升序时将箭头更新↓,降序设置为↑\n      if (this.order === 'cost-desc') {\n        this.order = 'cost-asc';\n      } else {\n        this.order = 'cost-desc';\n      }\n    },\n    async changeStarss() {\n      if (this.bestar) {\n        this.shop_stars -= 1;\n      } else {\n        this.shop_stars += 1;\n      }\n      this.bestar = !this.bestar;\n      await this.axios.get('toggle_user_star_to_shop/', {\n        params: {\n          user_id: this.$store.state.userId,\n          business_id: this.id\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  },\n  async created() {\n    //初始化时通过Vuex actions获取商品列表信息\n    console.log(\"22\");\n    await this.getProductsList();\n    console.log(this.list);\n    console.log(this.list.map(item => item.fields.product_brand));\n    console.log(this.list[0].pk);\n    await this.handleOrderSales();\n    await this.axios.get('get_user_star_to_shop/', {\n      params: {\n        user_id: this.$store.state.userId,\n        business_id: this.id\n      }\n    }).then(response => {\n      console.log(response);\n      //this.list = response.data.list\n      if (response.data.star === 'star') {\n        this.bestar = true;\n      } else {\n        this.bestar = false;\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    await this.axios.get('get_shop_stars/', {\n      params: {\n        business_id: this.id\n      }\n    }).then(response => {\n      console.log(response);\n      this.shop_stars = response.data.stars;\n      console.log(this.shop_stars);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n};","map":{"version":3,"mappings":"AA8DA;AACA;AACA;AACA;EACAA;IAAAC;EAAA;EAEAC;IACA;MACAC;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACA;MACA;MACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACAC;MACA;MACAA;MACAA;MACA;IAEA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;QACAV;MACA;MACA;MACA;QACAA;MACA;MACA;MACA;QACA;UACAA;QACA;UACAA;QACA;UACAA;QACA;MACA;MACA;IACA;EACA;EACAW;IACA;MACA;MACA;MACA,uCACAC;QACAJ;QACA;MACA,GACAK;QACAL;MACA;IACA;IAEA;IACAM;MACA;MACA;QACA;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;QACA;MACA;IACA;IACA;MACA;QACA;MACA;QACA;MACA;MACA;MAEA,kDACA;QAAAC;UAAAC;UAAAC;QAAA;MAAA,GACAT;QACAJ;MAEA,GACAK;QACAL;MACA;IACA;EAEA;EAOA;IACA;IACAA;IACA;IACAA;IACAA;IACAA;IACA;IAEA,+CACA;MAAAW;QAAAC;QAAAC;MAAA;IAAA,GACAT;MACAJ;MACA;MACA;QACA;MACA;QACA;MACA;IAEA,GACAK;MACAL;IACA;IACA,wCACA;MAAAW;QAAAE;MAAA;IAAA,GACAT;MACAJ;MACA;MACAA;IACA,GACAK;MACAL;IACA;EAEA;AAEA","names":["components","Customer_Product","data","id","list","filterBrand","filterColor","order","bestar","shop_stars","computed","brands","console","colors","filteredAndOrderedList","methods","then","catch","handleFilterBrand","handleFilterColor","handleOrderDefault","handleOrderSales","handleOrderCost","params","user_id","business_id"],"sourceRoot":"src/components/customer","sources":["product_to_business.vue"],"sourcesContent":["<template>\r\n  <div v-show=\"list.length\">\r\n\r\n    <div class=\"list-control\">\r\n      <div class=\"list-control-filter\">\r\n        <span>品牌:</span>\r\n        <span class=\"list-control-filter-item\"\r\n              :class=\"{on: item === filterBrand}\"\r\n              v-for=\"item in brands\" :key=\"item.index\"\r\n              @click=\"handleFilterBrand(item)\" >{{item}}</span>\r\n      </div>\r\n      <div class=\"list-control-filter\">\r\n        <span>颜色:</span>\r\n        <span class=\"list-control-filter-item\"\r\n              :class=\"{on: item === filterColor}\"\r\n              v-for=\"item in colors\" :key=\"item.index\"\r\n              @click=\"handleFilterColor(item)\">{{item}}</span>\r\n      </div>\r\n\r\n      <div class=\"list-control-order\">\r\n        <span>排序:</span>\r\n        <span class=\"list-control-order-item\"\r\n              :class=\"{on: order === ''}\"\r\n              @click=\"handleOrderDefault\">默认</span>\r\n        <span class=\"list-control-order-item\"\r\n              :class=\"{on: order === 'sales'}\"\r\n              @click=\"handleOrderSales\">\r\n                    销量\r\n                    <template v-if=\"order === 'sales'\">↓</template>\r\n                </span>\r\n        <span class=\"list-control-order-item\"\r\n              :class=\"{on: order.indexOf('cost') > -1}\"\r\n              @click=\"handleOrderCost\">\r\n                    价格\r\n                    <template v-if=\"order === 'cost-desc'\">↓</template>\r\n                    <template v-if=\"order === 'cost-asc'\">↑</template>\r\n                </span>\r\n      </div>\r\n\r\n      <div>\r\n        <span class=\"fillstar\" v-if=\"bestar\" @click=\"changeStarss\">\r\n            <font-awesome-icon :icon=\"['fas', 'star']\" class=\"icon righticon\" ></font-awesome-icon>\r\n        </span>\r\n        <span class=\"star\" v-if=\"!bestar\" @click=\"changeStarss\">\r\n            <font-awesome-icon :icon=\"['fas', 'star']\" class=\"icon righticon\" ></font-awesome-icon>\r\n\r\n        </span>\r\n\r\n        <span class=\"word\">{{shop_stars}}</span>\r\n    </div>\r\n    </div>\r\n    <div class=\"productsList\">\r\n      <Customer_Product v-for=\"item in filteredAndOrderedList\" :info=\"item\" :key=\"item.fields.id\"></Customer_Product>\r\n    </div>\r\n    <div class=\"product-not-found\"\r\n         v-show=\"!filteredAndOrderedList.length\">暂无相关商品</div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//导入商品简介组件\r\nimport Customer_Product from './customer_product.vue';\r\nimport util from \"@/components/customer/util\";\r\nexport default {\r\n  components: {Customer_Product},\r\n\r\n  data(){\r\n    return {\r\n      id: parseInt(this.$route.params.id),\r\n      list:[],\r\n      //品牌过滤\r\n      filterBrand: '',\r\n      //颜色过滤\r\n      filterColor: '',\r\n      //排序依据，可选值：\r\n      //cost-desc价格降序\r\n      //cost-asc价格升序\r\n      //sales销量\r\n      order: '',\r\n      bestar:true,\r\n      shop_stars:0,\r\n    }\r\n  },\r\n  computed:{\r\n    brands(){\r\n      //return this.$store.getters.brands;\r\n      console.log(\"bb22\");\r\n      const brands = this.list.map(item => item.fields.product_brand);\r\n      console.log(\"bbbbb22\");\r\n      console.log(brands);\r\n      return util.getFilterArray(brands);\r\n\r\n    },\r\n    colors(){\r\n      const colors = this.list.map(item => item.fields.product_color);\r\n      return util.getFilterArray(colors);\r\n    },\r\n    filteredAndOrderedList(){\r\n      //拷贝原数组\r\n      let list = [...this.list];\r\n      //品牌过滤\r\n      if(this.filterBrand !== ''){\r\n        list = list.filter(item => item.fields.product_brand === this.filterBrand);\r\n      }\r\n      //颜色过滤\r\n      if(this.filterColor !== ''){\r\n        list = list.filter(item => item.fields.product_color === this.filterColor);\r\n      }\r\n      //排序\r\n      if(this.order !== ''){\r\n        if(this.order === 'sales'){\r\n          list = list.sort((a, b) => b.fields.product_sales - a.fields.product_sales);\r\n        }else if(this.order === 'cost-desc'){\r\n          list = list.sort((a, b) => b.fields.product_cost - a.fields.product_cost);\r\n        }else if(this.order === 'cost-asc'){\r\n          list = list.sort((a, b) => a.fields.product_cost - b.fields.product_cost);\r\n        }\r\n      }\r\n      return list;\r\n    }\r\n  },\r\n  methods: {\r\n    async getProductsList(){\r\n      //从Vuex获取商品列表信息\r\n      //return this.$store.state.productList;\r\n      await this.axios.get('show_products/')\r\n        .then((response) => {\r\n            console.log(response.data.list);\r\n            this.list = response.data.list.filter(i => i.fields.product_business === this.id)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    },\r\n\r\n    //品牌筛选\r\n    handleFilterBrand(brand){\r\n      //点击品牌过滤，再次点击取消\r\n      if (this.filterBrand === brand) {\r\n        this.filterBrand = '';\r\n      }else{\r\n        this.filterBrand = brand;\r\n      }\r\n    },\r\n    //颜色筛选\r\n    handleFilterColor(color){\r\n      //点击颜色过滤，再次点击取消\r\n      if (this.filterColor === color) {\r\n        this.filterColor = '';\r\n      }else{\r\n        this.filterColor = color;\r\n      }\r\n    },\r\n    handleOrderDefault(){\r\n      this.order = '';\r\n    },\r\n    handleOrderSales(){\r\n      this.order = 'sales';\r\n    },\r\n    handleOrderCost(){\r\n      //当点击升序时将箭头更新↓,降序设置为↑\r\n      if(this.order === 'cost-desc'){\r\n        this.order = 'cost-asc';\r\n      }else{\r\n        this.order = 'cost-desc';\r\n      }\r\n    },\r\n    async changeStarss(){\r\n      if(this.bestar){\r\n        this.shop_stars-=1;\r\n      }else{\r\n        this.shop_stars+=1;\r\n      }\r\n      this.bestar=!this.bestar;\r\n\r\n      await this.axios.get('toggle_user_star_to_shop/',\r\n            {params:{user_id: this.$store.state.userId, business_id: this.id}})\r\n        .then((response) => {\r\n            console.log(response);\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    },\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n  async created(){\r\n    //初始化时通过Vuex actions获取商品列表信息\r\n    console.log(\"22\");\r\n    await this.getProductsList();\r\n    console.log(this.list);\r\n    console.log(this.list.map(item => item.fields.product_brand));\r\n    console.log(this.list[0].pk);\r\n    await this.handleOrderSales();\r\n\r\n  await this.axios.get('get_user_star_to_shop/',\r\n            {params:{user_id: this.$store.state.userId, business_id: this.id}})\r\n        .then((response) => {\r\n            console.log(response);\r\n            //this.list = response.data.list\r\n          if(response.data.star==='star'){\r\n            this.bestar=true\r\n          }else{\r\n            this.bestar=false\r\n          }\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n  await this.axios.get('get_shop_stars/',\r\n            {params:{ business_id: this.id}})\r\n        .then((response) => {\r\n            console.log(response);\r\n           this.shop_stars=response.data.stars;\r\nconsole.log(this.shop_stars);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.list-control{\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  margin: 16px;\r\n  padding: 16px;\r\n  box-shadow: 0 1px 1px rgba(0,0,0,.2);\r\n}\r\n.list-control-filter{\r\n  margin-bottom: 16px;\r\n}\r\n.container {\r\n\r\n  width: 500px;\r\n\r\n  margin: 50px auto;\r\n\r\n  overflow: hidden;\r\n\r\n  border: 1px solid #ccc;\r\n\r\n}\r\n.bar1 {background: #A3D0C3; }\r\n.bar1 input {\r\n  border: 2px solid #7BA7AB;\r\n  border-radius: 5px;\r\n  background: #F9F0DA;\r\n  color: #9E9C9C;\r\n}\r\n.bar1 button {\r\n  top: 0;\r\n  right: 0;\r\n  background: #7BA7AB;\r\n  border-radius: 0 5px 5px 0;\r\n}\r\n.bar1 button:before {\r\n  font-family: FontAwesome,serif;\r\n  font-size: 16px;\r\n  color: #F9F0DA;\r\n}\r\n.list-control-filter-item,\r\n.list-control-order-item {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  border: 1px solid #e9eaec;\r\n  border-radius: 4px;\r\n  margin-right: 6px;\r\n  padding: 2px 6px;\r\n}\r\n.list-control-filter-item.on,\r\n.list-control-order-item.on{\r\n  background: #f2352e;\r\n  border: 1px solid #f2352e;\r\n  color: #fff;\r\n}\r\n.product-not-found{\r\n  text-align: center;\r\n  padding: 32px;\r\n}\r\n.like {\r\n  width: 1000px;\r\n\r\n  margin: 50px auto;\r\n\r\n  overflow: hidden;\r\n\r\n  border: 1px solid #ccc;\r\n}\r\n.likeItem {\r\n  display:inline-block; width:200px; height:200px;\r\n}\r\n\r\n.fillstar{\r\ncolor: #ffd500;\r\n\r\n        font-size: 32px;\r\n}\r\n.word{\r\n   font-size: 32px;\r\n}\r\n.star{\r\ncolor: gray;\r\n\r\n        font-size: 32px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}