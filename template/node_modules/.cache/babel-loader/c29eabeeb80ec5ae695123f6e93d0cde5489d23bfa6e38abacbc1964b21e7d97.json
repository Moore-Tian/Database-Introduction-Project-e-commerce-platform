{"ast":null,"code":"import { getHomePanels, getWeekAnalysis } from \"@/api/goods\";\nimport LineChart from \"@/components/business/LineChart\";\nvar lineChartData = {\n  purchases: [100, 120, 161, 134, 105, 160, 165],\n  sales: [120, 82, 91, 154, 162, 140, 145],\n  expenses: [110, 70, 150, 50, 46, 80, 111],\n  profits: [99, 55, 110, 67, 88, 44, 76]\n}; //todo\n\nvar DEFAULT_PANELS = [{\n  icon: \"mdi-dolly\",\n  color: \"pink\",\n  title: \"商品\",\n  text: \"4(件)\"\n}, {\n  icon: \"mdi-cart-arrow-up\",\n  color: \"cyan\",\n  title: \"总销售额\",\n  text: \"1100.00（元）\"\n}, {\n  icon: \"mdi-cash-refund\",\n  color: \"red\",\n  title: \"支出\",\n  text: \"568.20（元）\"\n}, {\n  icon: \"mdi-currency-cny\",\n  color: \"amber\",\n  title: \"利润\",\n  text: \"-368.20（元）\"\n}];\nvar now = new Date(); //当前日期\nvar nowDayOfWeek = now.getDay() == 0 ? 7 : now.getDay(); //今天本周的第几天\nvar nowDay = now.getDate(); //当前日\nvar nowMonth = now.getMonth(); //当前月\nvar nowYear = now.getFullYear(); //当前年\n\n//获得本周的开端日期\nfunction getWeekStartDate(offset, weekday) {\n  let weekStartDate = new Date(nowYear, nowMonth, nowDay - nowDayOfWeek + weekday + 7 * offset);\n  return weekStartDate;\n}\nfunction formatDate(date) {\n  let myyear = date.getFullYear();\n  let mymonth = date.getMonth() + 1;\n  let myweekday = date.getDate();\n  if (mymonth < 10) {\n    mymonth = \"0\" + mymonth;\n  }\n  if (myweekday < 10) {\n    myweekday = \"0\" + myweekday;\n  }\n  return myyear + \"\" + mymonth + \"\" + myweekday;\n}\nfunction sum(arr) {\n  return arr.reduce(function (total, value) {\n    return total + value;\n  });\n}\n//导入商品简介组件\n\nimport htmlToPdf from '@/components/business/echartstopdf';\nimport { RegionSelects } from 'v-region';\nimport util from \"@/components/customer/util\";\nimport { read, utils } from 'xlsx';\n//import business_Product from \"@/components/business/business_product\";\nexport default {\n  name: \"business_saledata\",\n  components: {\n    LineChart,\n    RegionSelects\n  },\n  data: () => ({\n    Title: \"导出本周数据\",\n    json_fields: {\n      \"采购额\": 'purchases',\n      \"销售额\": 'sales',\n      \"支出\": 'expenses',\n      \"利润\": 'profit'\n    },\n    DetailsForm: [{\n      purchases: lineChartData.purchases[0],\n      sales: lineChartData.sales[0],\n      expenses: lineChartData.expenses[0],\n      profit: lineChartData.profits[0]\n    }, {\n      purchases: lineChartData.purchases[1],\n      sales: lineChartData.sales[1],\n      expenses: lineChartData.expenses[1],\n      profit: lineChartData.profits[1]\n    }],\n    business_name: \"商家lll\",\n    lineChartData,\n    indicators: DEFAULT_PANELS,\n    offset: 0,\n    lineChartIndicators: [\"采购额\", \"销售额\", \"支出\", \"利润\"],\n    dimension: [\"周一\\n\" + formatDate(getWeekStartDate(0, 1)), \"周二\\n\" + formatDate(getWeekStartDate(0, 2)), \"周三\\n\" + formatDate(getWeekStartDate(0, 3)), \"周四\\n\" + formatDate(getWeekStartDate(0, 4)), \"周五\\n\" + formatDate(getWeekStartDate(0, 5)), \"周六\\n\" + formatDate(getWeekStartDate(0, 6)), \"周日\\n\" + formatDate(getWeekStartDate(0, 7))],\n    chartLoaded: false,\n    business_orders: [],\n    orderProducts: [],\n    nowProduct: [],\n    business_stocks: [],\n    week_orders: [],\n    week_stocks: [],\n    week: [],\n    list: [],\n    chooseRegion: {\n      province: '',\n      //1\n      city: '',\n      //2\n      area: '',\n      //3\n      town: ''\n    },\n    regionState: 0,\n    ccolors: {\n      '白色': '#ffffff',\n      '黑色': '#100f0f',\n      '灰色': '#a39f9f',\n      '金色': '#dac272',\n      '蓝色': '#233472',\n      '红色': '#f2352e'\n    },\n    //品牌过滤\n    filterBrand: '',\n    //颜色过滤\n    filterColor: '',\n    order: '',\n    choosedProduct: []\n  }),\n  methods: {\n    // todo\n    readExcel(e) {\n      // 读取表格文件\n      let that = this;\n      const files = e.target.files;\n      if (files.length <= 0) {\n        return false;\n      } else if (!/\\.(xls|xlsx)$/.test(files[0].name.toLowerCase())) {\n        this.$message({\n          message: \"上传格式不正确，请上传xls或者xlsx格式\",\n          type: \"warning\"\n        });\n        return false;\n      } else {\n        // 更新获取文件名\n        that.upload_file = files[0].name;\n      }\n      const fileReader = new FileReader();\n      fileReader.onload = ev => {\n        try {\n          const data = ev.target.result;\n          const workbook = read(data, {\n            type: \"binary\"\n          });\n          const wsname = workbook.SheetNames[0]; //取第一张表\n          const ws = utils.sheet_to_json(workbook.Sheets[wsname]); //生成json表格内容\n          //ws就是读取的数据（不包含标题行即表头，表头会作为对象的下标）\n\n          //this.submit_form();\n\n          console.log(ws);\n        } catch (e) {\n          console.log(e);\n          return false;\n        }\n      };\n      console.log(\"rrrttt\");\n      fileReader.readAsBinaryString(files[0]);\n    },\n    printOut() {\n      htmlToPdf.downloadPDF(document.querySelector('#xxx'), '统计报表');\n    },\n    leftPage() {\n      this.offset -= 1;\n      this.newDimension();\n    },\n    rightPage() {\n      this.offset += 1;\n      this.newDimension();\n    },\n    async newDimension() {\n      console.log(\"zzzb\");\n      for (var i = 1; i < 8; i++) {\n        this.week[i] = getWeekStartDate(this.offset, i);\n      }\n      this.dimension = [\"周一\\n\" + formatDate(getWeekStartDate(this.offset, 1)), \"周二\\n\" + formatDate(getWeekStartDate(this.offset, 2)), \"周三\\n\" + formatDate(getWeekStartDate(this.offset, 3)), \"周四\\n\" + formatDate(getWeekStartDate(this.offset, 4)), \"周五\\n\" + formatDate(getWeekStartDate(this.offset, 5)), \"周六\\n\" + formatDate(getWeekStartDate(this.offset, 6)), \"周日\\n\" + formatDate(getWeekStartDate(this.offset, 7))];\n      await this.newWeekChartData();\n    },\n    newWeekChartData() {\n      let s = getWeekStartDate(this.offset, 1);\n      let e = getWeekStartDate(this.offset, 8);\n      this.week_orders = this.business_orders.filter(item => {\n        var i = item.fields.order_createtime;\n        if (i < s) return false;\n        if (i >= e) return false;\n        return true;\n      });\n      var tmpSales = [0, 0, 0, 0, 0, 0, 0];\n      var tmpProfits = [0, 0, 0, 0, 0, 0, 0];\n      console.log(this.week);\n      this.week_orders.forEach(item => {\n        for (var i = 2; i < 8; i++) {\n          if (this.week[i] > item.fields.order_createtime) {\n            tmpSales[i - 2] += item.fields.sumnum;\n            tmpProfits[i - 2] += item.fields.sumcost;\n            console.log(item.fields.order_createtime);\n            console.log(this.week[i]);\n            console.log(i);\n            console.log(tmpSales);\n            break;\n          }\n          if (i == 7) {\n            tmpSales[6] += item.fields.sumnum;\n            tmpProfits[6] += item.fields.sumcost;\n          }\n        }\n      });\n      lineChartData.sales = tmpSales;\n      lineChartData.profits = tmpProfits;\n      this.week_stocks = this.business_stocks.filter(item => {\n        var i = item.fields.stock_createtime;\n        if (i < s) return false;\n        if (i >= e) return false;\n        return true;\n      });\n      console.log(s);\n      console.log(e);\n      console.log(this.week_stocks);\n      var tmpPurchases = [0, 0, 0, 0, 0, 0, 0];\n      var tmpExpenses = [0, 0, 0, 0, 0, 0, 0];\n      this.week_stocks.forEach(item => {\n        for (var i = 2; i < 8; i++) {\n          if (this.week[i] > item.fields.stock_createtime) {\n            tmpPurchases[i - 2] += item.fields.stocksumnum;\n            tmpExpenses[i - 2] += item.fields.stocksumcost;\n            break;\n          }\n          if (i == 7) {\n            tmpPurchases[6] += item.fields.stocksumnum;\n            tmpExpenses[6] += item.fields.stocksumcost;\n          }\n        }\n      });\n      lineChartData.purchases = tmpPurchases;\n      lineChartData.expenses = tmpExpenses;\n      this.indicators[0].text = sum(lineChartData.purchases) + \"（件）\";\n      this.indicators[1].text = sum(lineChartData.sales) + \"（件）\";\n      this.indicators[2].text = sum(lineChartData.expenses).toFixed(2) + \"（元）\";\n      this.indicators[3].text = sum(lineChartData.profits).toFixed(2) + \"（元）\";\n      this.DetailsForm = [{\n        purchases: lineChartData.purchases[0],\n        sales: lineChartData.sales[0],\n        expenses: lineChartData.expenses[0],\n        profit: lineChartData.profits[0]\n      }, {\n        purchases: lineChartData.purchases[1],\n        sales: lineChartData.sales[1],\n        expenses: lineChartData.expenses[1],\n        profit: lineChartData.profits[1]\n      }, {\n        purchases: lineChartData.purchases[2],\n        sales: lineChartData.sales[2],\n        expenses: lineChartData.expenses[2],\n        profit: lineChartData.profits[2]\n      }, {\n        purchases: lineChartData.purchases[3],\n        sales: lineChartData.sales[3],\n        expenses: lineChartData.expenses[3],\n        profit: lineChartData.profits[3]\n      }, {\n        purchases: lineChartData.purchases[4],\n        sales: lineChartData.sales[4],\n        expenses: lineChartData.expenses[4],\n        profit: lineChartData.profits[4]\n      }, {\n        purchases: lineChartData.purchases[5],\n        sales: lineChartData.sales[5],\n        expenses: lineChartData.expenses[5],\n        profit: lineChartData.profits[5]\n      }, {\n        purchases: lineChartData.purchases[6],\n        sales: lineChartData.sales[6],\n        expenses: lineChartData.expenses[6],\n        profit: lineChartData.profits[6]\n      }];\n    },\n    async selectLogs() {\n      if (!this.chooseRegion.province) {\n        this.regionState = 0;\n      } else if (!this.chooseRegion.city) {\n        this.regionState = 1;\n      } else if (!this.chooseRegion.area) {\n        this.regionState = 2;\n      } else {\n        this.regionState = 3;\n      }\n      console.log(this.regionState);\n      console.log(this.chooseRegion);\n      await this.initBusinessOrders();\n      await this.initBusinessStocks();\n      await this.newDimension();\n    },\n    async getProductsList() {\n      //从Vuex获取商品列表信息\n      //return this.$store.state.productList;\n      await this.axios.get('show_products/').then(response => {\n        console.log(response.data.list);\n        var tmp = response.data.list.filter(i => i.fields.product_business === this.$store.state.userId);\n        this.list = response.data.list.filter(i => i.fields.product_business === this.$store.state.userId);\n        this.choosedProduct = response.data.list.filter(i => i.fields.product_business === this.$store.state.userId);\n        tmp.forEach(item => {\n          this.nowProduct[item.pk] = item;\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async initBusinessOrders() {\n      await this.axios.get('show_business_orderProduct/', {\n        params: {\n          business_id: this.$store.state.userId\n        }\n      }).then(response => {\n        console.log(response);\n        this.orderProducts = response.data.orderProducts;\n        this.business_orders = response.data.orders;\n        this.nowProduct.forEach(item => {\n          var sum = 0.0;\n          var num = 0;\n          this.orderProducts.forEach(tt => {\n            if (tt.fields.product_id == item.pk) {\n              sum += (tt.fields.num - 0.0) * tt.fields.order_product_cost;\n              num += tt.fields.num;\n            }\n          });\n          item.fields['sumcost'] = sum; //每一个商品的销售额\n          item.fields['sumnum'] = num; //每一个商品的销售量\n        });\n\n        this.business_orders.forEach(item => {\n          item.fields['order_createtime'] = new Date(item.fields['order_createtime']);\n          item.fields['region'] = {\n            province: item.fields.customer_province,\n            city: item.fields.customer_city,\n            area: item.fields.customer_area,\n            town: ''\n          };\n          var sum = 0.0;\n          var num = 0;\n          var regionRight = 0;\n          if (this.regionState === 1) {\n            if (item.fields['region'].province !== this.chooseRegion.province) {\n              regionRight = 1;\n            }\n          } else if (this.regionState === 2) {\n            if (item.fields['region'].province !== this.chooseRegion.province) {\n              regionRight = 1;\n            } else if (item.fields['region'].city !== this.chooseRegion.city) {\n              regionRight = 1;\n            }\n          } else if (this.regionState === 3) {\n            if (item.fields['region'].province !== this.chooseRegion.province) {\n              regionRight = 1;\n            } else if (item.fields['region'].city !== this.chooseRegion.city) {\n              regionRight = 1;\n            } else if (item.fields['region'].area !== this.chooseRegion.area) {\n              regionRight = 1;\n            }\n          }\n          if (regionRight === 0) {\n            this.orderProducts.forEach(tt => {\n              if (tt.fields.order_id == item.pk) {\n                if (this.choosedProduct.find(m => m.pk === tt.fields.product_id)) {\n                  sum += (tt.fields.num - 0.0) * parseFloat(tt.fields.order_product_cost);\n                  num += tt.fields.num;\n                  console.log(num);\n                  console.log(sum);\n                }\n              }\n            });\n          }\n          item.fields['sumcost'] = sum; //每一个订单的销售额\n          item.fields['sumnum'] = num; //每一个订单的销售量\n        });\n\n        console.log(this.business_orders);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async initBusinessStocks() {\n      await this.axios.get('fetch_stock/', {\n        params: {\n          business_id: this.$store.state.userId\n        }\n      }).then(response => {\n        console.log(response);\n        this.business_stocks = response.data.stock_orders;\n        this.nowProduct.forEach(item => {\n          var stocksum = 0.0;\n          var stocknum = 0;\n          this.business_stocks.forEach(tt => {\n            if (tt.fields.product_id == item.pk) {\n              stocksum += (tt.fields.stock_num - 0.0) * tt.fields.stock_cost;\n              stocknum += tt.fields.stock_num;\n            }\n          });\n          item.fields['stocksumcost'] = stocksum; //每一个商品的支出\n          item.fields['stocksumnum'] = stocknum; //每一个商品的采购数量\n        });\n\n        this.business_stocks.forEach(item => {\n          item.fields['stock_createtime'] = new Date(item.fields['stock_createtime']);\n          item.fields['region'] = {\n            province: item.fields.customer_province,\n            city: item.fields.customer_city,\n            area: item.fields.customer_area,\n            town: ''\n          };\n          var regionRight = 0;\n          if (this.regionState === 1) {\n            if (item.fields['region'].province !== this.chooseRegion.province) {\n              regionRight = 1;\n            }\n          } else if (this.regionState === 2) {\n            if (item.fields['region'].province !== this.chooseRegion.province) {\n              regionRight = 1;\n            } else if (item.fields['region'].city !== this.chooseRegion.city) {\n              regionRight = 1;\n            }\n          } else if (this.regionState === 3) {\n            if (item.fields['region'].province !== this.chooseRegion.province) {\n              regionRight = 1;\n            } else if (item.fields['region'].city !== this.chooseRegion.city) {\n              regionRight = 1;\n            } else if (item.fields['region'].area !== this.chooseRegion.area) {\n              regionRight = 1;\n            }\n          }\n          if (regionRight === 0) {\n            if (this.choosedProduct.find(m => m.pk === item.fields.product_id)) {\n              item.fields['stocksumcost'] = (item.fields.stock_num - 0.0) * item.fields.stock_cost; //每一个订单的支出\n              item.fields['stocksumnum'] = item.fields.stock_num; //每一个订单的采购数量\n            } else {\n              item.fields['stocksumcost'] = 0.0; //每一个订单的支出\n              item.fields['stocksumnum'] = 0; //每一个订单的采购数量\n            }\n          } else {\n            item.fields['stocksumcost'] = 0.0; //每一个订单的支出\n            item.fields['stocksumnum'] = 0; //每一个订单的采购数量\n          }\n        });\n\n        console.log(this.business_stocks);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async fixedChoosed() {\n      let list = [...this.list];\n      //品牌过滤\n      if (this.filterBrand !== '') {\n        list = list.filter(item => item.fields.product_brand === this.filterBrand);\n      }\n      //颜色过滤\n      if (this.filterColor !== '') {\n        list = list.filter(item => item.fields.product_color === this.filterColor);\n      }\n      //排序\n      if (this.order !== '') {\n        if (this.order === 'sales') {\n          list = list.sort((a, b) => b.fields.product_sales - a.fields.product_sales);\n        } else if (this.order === 'cost-desc') {\n          list = list.sort((a, b) => b.fields.product_cost - a.fields.product_cost);\n        } else if (this.order === 'cost-asc') {\n          list = list.sort((a, b) => a.fields.product_cost - b.fields.product_cost);\n        }\n      }\n      this.choosedProduct = [...list];\n      await this.initBusinessOrders();\n      await this.initBusinessStocks();\n      await this.newDimension();\n    },\n    async ttt(id) {\n      this.choosedProduct = this.list.filter(item => item.pk === id);\n      await this.initBusinessOrders();\n      await this.initBusinessStocks();\n      await this.newDimension();\n    },\n    //品牌筛选\n    async handleFilterBrand(brand) {\n      //点击品牌过滤，再次点击取消\n      if (this.filterBrand === brand) {\n        this.filterBrand = '';\n      } else {\n        this.filterBrand = brand;\n      }\n      await this.fixedChoosed();\n    },\n    //颜色筛选\n    async handleFilterColor(color) {\n      //点击颜色过滤，再次点击取消\n      if (this.filterColor === color) {\n        this.filterColor = '';\n      } else {\n        this.filterColor = color;\n      }\n      await this.fixedChoosed();\n    },\n    async handleOrderDefault() {\n      this.order = '';\n      await this.fixedChoosed();\n    },\n    async handleOrderSales() {\n      this.order = 'sales';\n      await this.fixedChoosed();\n    },\n    handleOrderCost() {\n      //当点击升序时将箭头更新↓,降序设置为↑\n      if (this.order === 'cost-desc') {\n        this.order = 'cost-asc';\n      } else {\n        this.order = 'cost-desc';\n      }\n    }\n  },\n  async created() {\n    await this.getProductsList();\n    await this.initBusinessOrders();\n    await this.initBusinessStocks();\n    await this.newDimension();\n  },\n  computed: {\n    brands() {\n      const brands = this.list.map(item => item.fields.product_brand);\n      return util.getFilterArray(brands);\n    },\n    colors() {\n      const colors = this.list.map(item => item.fields.product_color);\n      return util.getFilterArray(colors);\n    },\n    filteredAndOrderedList() {\n      //拷贝原数组\n      let list = [...this.list];\n      //品牌过滤\n      if (this.filterBrand !== '') {\n        list = list.filter(item => item.fields.product_brand === this.filterBrand);\n      }\n      //颜色过滤\n      if (this.filterColor !== '') {\n        list = list.filter(item => item.fields.product_color === this.filterColor);\n      }\n      //排序\n      if (this.order !== '') {\n        if (this.order === 'sales') {\n          list = list.sort((a, b) => b.fields.product_sales - a.fields.product_sales);\n        } else if (this.order === 'cost-desc') {\n          list = list.sort((a, b) => b.fields.product_cost - a.fields.product_cost);\n        } else if (this.order === 'cost-asc') {\n          list = list.sort((a, b) => a.fields.product_cost - b.fields.product_cost);\n        }\n      }\n      console.log(\"kkk\");\n      console.log(this.list);\n      console.log(list);\n      return list;\n    }\n  },\n  mounted() {\n    getHomePanels().then(homePanels => {\n      this.indicators = homePanels;\n    }).catch(err => {\n      console.warn(err);\n    });\n    getWeekAnalysis().then(result => {\n      this.lineChartIndicators = result.indicators;\n      this.dimension = result.dimension;\n      this.lineChartData = {\n        purchases: result.data[0],\n        sales: result.data[1],\n        expenses: result.data[2],\n        profits: result.data[3]\n      };\n      this.$nextTick(() => {\n        this.chartLoaded = true;\n      });\n    }).catch(err => {\n      console.warn(err);\n      this.chartLoaded = true;\n    });\n  }\n};","map":{"version":3,"mappings":"AA+LA;AACA;AAEA;EACAA;EACAC;EACAC;EACAC;AACA;;AAEA,sBACA;EAAAC;EAAAC;EAAAC;EAAAC;AAAA,GACA;EACAH;EACAC;EACAC;EACAC;AACA,GACA;EACAH;EACAC;EACAC;EACAC;AACA,GACA;EACAH;EACAC;EACAC;EACAC;AACA,EACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;EAEA;EACA;AACA;AAGA;EACA;EACA;EACA;EACA;IACAC;EACA;EACA;IACAC;EACA;EACA;AACA;AAEA;EACA;IACA;EACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;EACAC;EACAC;IACAC;IAAAC;EACA;EACAC;IACAC;IAEAC;MACA;MACA;MACA;MACA;IACA;IACAC,cACA;MACAjB;MACAC;MACAC;MACAgB;IACA,GACA;MACAlB;MACAC;MACAC;MACAgB;IACA,EACA;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,yDACA,6CACA,6CACA,6CACA,6CACA,6CACA;IACAC;IAEAC;IACAC;IACAC;IAEAC;IAEAC;IACAC;IACAC;IAGAC;IACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;IACA;IACAC;IAEAC;MAEA;MACA;MACA;MACA;MACA;MACA;IAEA;IAEA;IACAC;IACA;IACAC;IACAC;IAEAC;EAEA;EAEAC;IACA;IACAC;MACA;MACA;MACA;MAGA;QACA;MACA;QACA;UACAC;UACAC;QACA;QACA;MACA;QACA;QACAC;MACA;MAIA;MACAC;QACA;UACA;UAEA;YACAF;UACA;UAEA;UACA;UACA;;UAEA;;UAEAG;QAEA;UAEAA;UACA;QACA;MACA;MACAA;MACAD;IACA;IACAE;MACAC;IACA;IACAC;MACA;MACA;IAGA;IACAC;MACA;MACA;IACA;IACA;MACAJ;MACA;QACA;MAEA;MAEA,yEACA,uDACA,uDACA,uDACA,uDACA,uDACA;MAEA;IAEA;IAGAK;MACA;MACA;MAEA;QACA;QACA;QACA;QACA;MACA;MAEA;MACA;MAEAL;MAEA;QAEA;UACA;YACAM;YACAC;YAEAP;YACAA;YACAA;YACAA;YAEA;UACA;UACA;YACAM;YACAC;UACA;QACA;MAGA;MACAtC;MACAA;MAGA;QACA;QACA;QACA;QACA;MACA;MACA+B;MACAA;MACAA;MAEA;MACA;MAEA;QAEA;UACA;YACAQ;YACAC;YAEA;UAEA;UACA;YACAD;YACAC;UACA;QACA;MAGA;MACAxC;MACAA;MAGA;MACA;MACA;MACA;MAEA,oBACA;QACApB;QACAC;QACAC;QACAgB;MACA,GACA;QACAlB;QACAC;QACAC;QACAgB;MACA,GACA;QACAlB;QACAC;QACAC;QACAgB;MACA,GACA;QACAlB;QACAC;QACAC;QACAgB;MACA,GACA;QACAlB;QACAC;QACAC;QACAgB;MACA,GACA;QACAlB;QACAC;QACAC;QACAgB;MACA,GACA;QACAlB;QACAC;QACAC;QACAgB;MACA,EAEA;IAEA;IAEA;MAEA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;MAEAiC;MACAA;MAEA;MACA;MAEA;IACA;IAEA;MACA;MACA;MACA,uCACAU;QACAV;QACA;QACA;QACA;QACAW;UACA;QAEA;MAAA,GACAC;QACAZ;MACA;IACA;IAGA;MACA;QAAAa;UAAAC;QAAA;MAAA,GACAJ;QACAV;QACA;QAEA;QACA;UAGA;UACA;UACA;YACA;cACAe;cACAC;YACA;UACA;UACAC;UACAA;QAGA;;QAIA;UACAA;UACAA;YACAjC;YACAC;YACAC;YACAC;UACA;UACA;UACA;UAEA;UACA;YACA;cACA+B;YAAA;UAEA;YACA;cACAA;YACA;cACAA;YACA;UACA;YACA;cACAA;YACA;cACAA;YACA;cACAA;YACA;UAEA;UACA;YACA;cAEA;gBACA;kBACAH;kBACAC;kBACAhB;kBACAA;gBACA;cACA;YACA;UAAA;UACAiB;UACAA;QAEA;;QACAjB;MACA,GACAY;QACAZ;MACA;IAEA;IAGA;MACA;QAAAa;UAAAC;QAAA;MAAA,GACAJ;QACAV;QAGA;QACA;UAGA;UACA;UACA;YAEA;cACAmB;cACAC;YACA;UACA;UACAH;UACAA;QAGA;;QAIA;UACAA;UACAA;YACAjC;YACAC;YACAC;YACAC;UACA;UAEA;UACA;YACA;cACA+B;YAAA;UAEA;YACA;cACAA;YACA;cACAA;YACA;UACA;YACA;cACAA;YACA;cACAA;YACA;cACAA;YACA;UAEA;UACA;YAEA;cACAD;cACAA;YACA;cACAA;cACAA;YACA;UAAA;YACAA;YACAA;UACA;QACA;;QACAjB;MACA,GACAY;QACAZ;MACA;IAEA;IAEA;MACA;MACA;MACA;QACAlB;MACA;MACA;MACA;QACAA;MACA;MACA;MACA;QACA;UACAA;QACA;UACAA;QACA;UACAA;QACA;MACA;MACA;MACA;MACA;MAEA;IACA;IAEA;MAEA;MACA;MACA;MAEA;IACA;IAIA;IACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;IACA;IACA;MACA;MACA;IACA;IACA;MACA;MACA;IACA;IACAuC;MACA;MACA;QACA;MACA;QACA;MACA;IACA;EAEA;EACA;IACA;IACA;IACA;IAEA;EAIA;EACAC;IACAC;MAEA;MAEA;IAEA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;QACA3C;MACA;MACA;MACA;QACAA;MACA;MACA;MACA;QACA;UACAA;QACA;UACAA;QACA;UACAA;QACA;MACA;MACAkB;MACAA;MACAA;MAEA;IACA;EACA;EACA0B;IACAC,gBACAjB;MACA;IACA,GACAE;MACAZ;IACA;IACA4B,kBACAlB;MACA;MACA;MACA;QACA7D;QACAC;QACAC;QACAC;MACA;MACA;QACA;MACA;IACA,GACA4D;MACAZ;MACA;IACA;EACA;AAGA","names":["purchases","sales","expenses","profits","icon","color","title","text","mymonth","myweekday","name","components","LineChart","RegionSelects","data","Title","json_fields","DetailsForm","profit","business_name","lineChartData","indicators","offset","lineChartIndicators","dimension","chartLoaded","business_orders","orderProducts","nowProduct","business_stocks","week_orders","week_stocks","week","list","chooseRegion","province","city","area","town","regionState","ccolors","filterBrand","filterColor","order","choosedProduct","methods","readExcel","message","type","that","fileReader","console","printOut","htmlToPdf","leftPage","rightPage","newWeekChartData","tmpSales","tmpProfits","tmpPurchases","tmpExpenses","then","tmp","catch","params","business_id","sum","num","item","regionRight","stocksum","stocknum","handleOrderCost","computed","brands","colors","filteredAndOrderedList","mounted","getHomePanels","getWeekAnalysis"],"sourceRoot":"src/view/business","sources":["business_saledata.vue"],"sourcesContent":["<template>\n  <div class=\"height-100pc mx-3 goods-home\">\n    <v-row justify=\"center\" class=\"my-3\">\n      <template v-for=\"(item, itemIndex) in indicators\">\n        <v-col :key=\"itemIndex\" cols=\"12\" md=\"3\">\n          <v-hover v-slot=\"{ hover }\">\n            <v-card\n                class=\"item-card\"\n                :elevation=\"hover ? 12 : 2\"\n                :class=\"{ 'on-hover': hover }\"\n            >\n              <v-row class=\"mx-3 \">\n                <v-col md=\"6\" class=\"align-center\">\n                  <v-icon :color=\"item.color\" size=\"100\">{{\n                      item.icon\n                    }}\n                  </v-icon>\n                </v-col>\n                <v-col md=\"6\" class=\"align-center justify-center flex-column \">\n                  <div class=\"text-h5 text-center\">{{ item.title }}</div>\n                  <div class=\"text-h7 text-center\">{{ item.text }}</div>\n                </v-col>\n              </v-row>\n            </v-card>\n          </v-hover>\n        </v-col>\n      </template>\n    </v-row>\n\n    <v-btn\n              class=\"ma-2\"\n              color=\"pink\"\n              @click=\"printOut\"\n          >导出pdf\n    </v-btn>\n    <!-- todo -->\n              <template>\n              <download-excel\n              class=\"export-excel-wrapper\"\n              :data=\"DetailsForm\"\n              :fields=\"json_fields\"\n              :header=\"Title\"\n              name=\"导出销量.xls\"\n            >\n              <!-- 上面可以自定义自己的样式，还可以引用其他组件button -->\n              <el-button type=\"success\">导出excel</el-button>\n              </download-excel>\n              </template>\n    <!--删除删除 TODO\n\n    <div class=\"container\">\n      {{ upload_file || \"导入\" }}\n      <input\n        type=\"file\"\n        accept=\".xls,.xlsx\"\n        class=\"upload_file\"\n        @change=\"readExcel($event)\"\n      />\n    </div>-->\n    <!-- todo -->\n    <br><br>\n    <div>\n      <region-selects\n\n\n                                v-model=\"chooseRegion\"\n                                :town=\"false\"\n\n\n                                @change=\"selectLogs\"\n                                clearable\n                              />\n    </div>\n\n   <div>\n      <v-card class=\"mt-9\" v-if=\"chartLoaded\">\n        <v-row>\n          <v-btn\n              class=\"ma-2\"\n              color=\"pink\"\n              @click=\"leftPage\"\n          >\n            <v-icon color=\"white\">mdi-arrow-left</v-icon>\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n              class=\"ma-2\"\n              color=\"pink\"\n              @click=\"rightPage\"\n          >\n            <v-icon color=\"white\">mdi-arrow-right</v-icon>\n          </v-btn>\n        </v-row>\n        <v-row class=\"ml-3\">\n          周业务量\n        </v-row>\n        <line-chart id=\"xxx\"\n            width=\"98%\"\n            :chart-data=\"lineChartData\"\n            :indicators=\"lineChartIndicators\"\n            :dimension=\"dimension\"\n        ></line-chart>\n      </v-card>\n    </div>\n\n\n    <div v-show=\"list.length\">\n\n    <div class=\"list-control\">\n      <div class=\"list-control-filter\">\n        <span>品牌:</span>\n        <span class=\"list-control-filter-item\"\n              :class=\"{on: item === filterBrand}\"\n              v-for=\"item in brands\" :key=\"item.index\"\n              @click=\"handleFilterBrand(item)\" >{{item}}</span>\n      </div>\n      <div class=\"list-control-filter\">\n        <span>颜色:</span>\n        <span class=\"list-control-filter-item\"\n              :class=\"{on: item === filterColor}\"\n              v-for=\"item in colors\" :key=\"item.index\"\n              @click=\"handleFilterColor(item)\">{{item}}</span>\n      </div>\n\n      <div class=\"list-control-order\">\n        <span>排序:</span>\n        <span class=\"list-control-order-item\"\n              :class=\"{on: order === ''}\"\n              @click=\"handleOrderDefault\">默认</span>\n        <span class=\"list-control-order-item\"\n              :class=\"{on: order === 'sales'}\"\n              @click=\"handleOrderSales\">\n                    销量\n                    <template v-if=\"order === 'sales'\">↓</template>\n                </span>\n        <span class=\"list-control-order-item\"\n              :class=\"{on: order.indexOf('cost') > -1}\"\n              @click=\"handleOrderCost\">\n                    价格\n                    <template v-if=\"order === 'cost-desc'\">↓</template>\n                    <template v-if=\"order === 'cost-asc'\">↑</template>\n                </span>\n      </div>\n    </div>\n    <div class=\"productsList\">\n      <!--<business_Product v-for=\"item in filteredAndOrderedList\" :info=\"item\" :key=\"item.fields.id\"></business_Product>\n-->\n      <div class=\"product\" v-for=\"item in filteredAndOrderedList\" :key=\"item.fields.id\">\n      <img :src=\"`http://127.0.0.1:8000/media/${item.fields.product_image}`\" alt=\"\" height=\"200px\">\n      <h4>{{item.fields.product_name}}</h4>\n        <v-btn\n\n            @click=\"ttt(item.pk)\"\n          >\n            {{筛选显示}}\n          </v-btn>\n      <h4>销量{{item.fields.product_sales}}</h4>\n      <div class=\"product-color\"\n           :style=\"{background: ccolors[item.fields.product_color]}\"></div>\n      <div class=\"product-cost\">￥ {{item.fields.product_cost}}</div>\n      <!-- 阻止冒泡，否则点击按钮的同时也会触发a标签进入详情页 -->\n\n\n  </div>\n\n    </div>\n\n\n\n    <div class=\"product-not-found\"\n         v-show=\"!filteredAndOrderedList.length\">暂无相关商品</div>\n\n\n\n  </div>\n\n    <!-- 提示语，之后移至商家暂未通过审核处\n    <div>\n      <template>\n        <v-footer padless color=\"blue\">\n          <v-col class=\"text-center white--text\">\n            欢迎{{business_name}}，您可以通过左侧导航栏查看更多不同页面。\n          </v-col>\n        </v-footer>\n      </template>\n    </div>\n    -->\n  </div>\n</template>\n\n<script>\nimport {getHomePanels, getWeekAnalysis} from \"@/api/goods\";\nimport LineChart from \"@/components/business/LineChart\";\n\nvar lineChartData = {\n  purchases: [100, 120, 161, 134, 105, 160, 165],\n  sales: [120, 82, 91, 154, 162, 140, 145],\n  expenses: [110, 70, 150, 50, 46, 80, 111],\n  profits: [99, 55, 110, 67, 88, 44, 76],\n}; //todo\n\nvar DEFAULT_PANELS = [\n  {icon: \"mdi-dolly\", color: \"pink\", title: \"商品\", text: \"4(件)\"},\n  {\n    icon: \"mdi-cart-arrow-up\",\n    color: \"cyan\",\n    title: \"总销售额\",\n    text: \"1100.00（元）\",\n  },\n  {\n    icon: \"mdi-cash-refund\",\n    color: \"red\",\n    title: \"支出\",\n    text: \"568.20（元）\",\n  },\n  {\n    icon: \"mdi-currency-cny\",\n    color: \"amber\",\n    title: \"利润\",\n    text: \"-368.20（元）\",\n  },\n];\n\nvar now = new Date(); //当前日期\nvar nowDayOfWeek = (now.getDay()==0)?7:now.getDay(); //今天本周的第几天\nvar nowDay = now.getDate(); //当前日\nvar nowMonth = now.getMonth(); //当前月\nvar nowYear = now.getFullYear(); //当前年\n\n//获得本周的开端日期\nfunction getWeekStartDate(offset,weekday) {\n\nlet weekStartDate = new Date(nowYear, nowMonth, nowDay - nowDayOfWeek +weekday+ 7*offset);\nreturn weekStartDate;\n}\n\n\nfunction formatDate(date) {\nlet myyear = date.getFullYear();\nlet mymonth = date.getMonth() + 1;\nlet myweekday = date.getDate();\nif (mymonth < 10) {\nmymonth = \"0\" + mymonth;\n}\nif (myweekday < 10) {\nmyweekday = \"0\" + myweekday;\n}\nreturn (myyear + \"\" + mymonth + \"\" + myweekday);\n}\n\nfunction sum(arr) {\n        return arr.reduce(function (total, value) {\n          return total + value;\n        });\n      }\n//导入商品简介组件\n\nimport htmlToPdf from '@/components/business/echartstopdf';\nimport { RegionSelects } from 'v-region'\nimport util from \"@/components/customer/util\";\n\nimport { read, utils } from 'xlsx'\n//import business_Product from \"@/components/business/business_product\";\nexport default {\n  name: \"business_saledata\",\n  components: {\n    LineChart,RegionSelects\n  },\n  data: () => ({\n    Title:\"导出本周数据\",\n\n    json_fields: {\n        \"采购额\":'purchases',\n        \"销售额\":'sales',\n        \"支出\":'expenses',\n        \"利润\":'profit',\n      },\n    DetailsForm: [\n        {\n          purchases:lineChartData.purchases[0],\n          sales:lineChartData.sales[0],\n          expenses:lineChartData.expenses[0],\n          profit:lineChartData.profits[0]\n        },\n        {\n          purchases:lineChartData.purchases[1],\n          sales:lineChartData.sales[1],\n          expenses:lineChartData.expenses[1],\n          profit:lineChartData.profits[1]\n        },\n    ],\n    business_name :\"商家lll\",\n    lineChartData,\n    indicators: DEFAULT_PANELS,\n    offset:0,\n    lineChartIndicators: [\"采购额\", \"销售额\", \"支出\", \"利润\"],\n    dimension: [\"周一\\n\"+formatDate(getWeekStartDate(0,1)),\n      \"周二\\n\"+formatDate(getWeekStartDate(0,2)),\n      \"周三\\n\"+formatDate(getWeekStartDate(0,3)),\n      \"周四\\n\"+formatDate(getWeekStartDate(0,4)),\n      \"周五\\n\"+formatDate(getWeekStartDate(0,5)),\n      \"周六\\n\"+formatDate(getWeekStartDate(0,6)),\n      \"周日\\n\"+formatDate(getWeekStartDate(0,7)),],\n    chartLoaded: false,\n\n    business_orders:[],\n    orderProducts:[],\n    nowProduct:[],\n\n    business_stocks:[],\n\n    week_orders:[],\n    week_stocks:[],\n    week:[],\n\n\n    list:[],\n    chooseRegion:{\n        province: '',//1\n        city: '',//2\n        area: '',//3\n        town:''\n      },\n    regionState:0,\n\nccolors: {\n\n        '白色': '#ffffff',\n        '黑色': '#100f0f',\n        '灰色': '#a39f9f',\n        '金色': '#dac272',\n        '蓝色': '#233472',\n        '红色': '#f2352e'\n\n      },\n\n    //品牌过滤\n      filterBrand: '',\n      //颜色过滤\n      filterColor: '',\n      order: '',\n\n    choosedProduct:[]\n\n  }),\n\n   methods:{\n    // todo\n    readExcel(e) {\n      // 读取表格文件\n      let that = this;\n      const files = e.target.files;\n\n\n      if (files.length <= 0) {\n        return false;\n      } else if (!/\\.(xls|xlsx)$/.test(files[0].name.toLowerCase())) {\n        this.$message({\n          message: \"上传格式不正确，请上传xls或者xlsx格式\",\n          type: \"warning\"\n        });\n        return false;\n      } else {\n        // 更新获取文件名\n        that.upload_file = files[0].name;\n      }\n\n\n\n      const fileReader = new FileReader();\n      fileReader.onload = ev => {\n        try {\n          const data = ev.target.result;\n\n          const workbook = read(data, {\n            type: \"binary\"\n          });\n\n          const wsname = workbook.SheetNames[0]; //取第一张表\n          const ws = utils.sheet_to_json(workbook.Sheets[wsname]); //生成json表格内容\n          //ws就是读取的数据（不包含标题行即表头，表头会作为对象的下标）\n\n          //this.submit_form();\n\n\t\t\t\t\tconsole.log(ws);\n\n        } catch (e) {\n\n          console.log(e);\n          return false;\n        }\n      };\n      console.log(\"rrrttt\")\n      fileReader.readAsBinaryString(files[0]);\n    },\n    printOut () {\n        htmlToPdf.downloadPDF(document.querySelector('#xxx'), '统计报表')\n      },\n    leftPage(){\n      this.offset-=1\n      this.newDimension()\n\n\n    },\n     rightPage(){\n      this.offset+=1\n       this.newDimension()\n    },\n     async newDimension(){\n      console.log(\"zzzb\")\n      for(var i = 1;i<8;i++){\n       this.week[i]=getWeekStartDate(this.offset,i)\n\n      }\n\n      this.dimension= [\"周一\\n\"+formatDate(getWeekStartDate(this.offset,1)),\n      \"周二\\n\"+formatDate(getWeekStartDate(this.offset,2)),\n      \"周三\\n\"+formatDate(getWeekStartDate(this.offset,3)),\n      \"周四\\n\"+formatDate(getWeekStartDate(this.offset,4)),\n      \"周五\\n\"+formatDate(getWeekStartDate(this.offset,5)),\n      \"周六\\n\"+formatDate(getWeekStartDate(this.offset,6)),\n      \"周日\\n\"+formatDate(getWeekStartDate(this.offset,7)),]\n\n       await this.newWeekChartData()\n\n     },\n\n\n     newWeekChartData(){\n       let s = getWeekStartDate(this.offset,1)\n       let e = getWeekStartDate(this.offset,8)\n\n       this.week_orders=this.business_orders.filter((item) => {\n         var i=item.fields.order_createtime\n         if(i<s) return false\n         if(i>=e) return false\n         return true\n       });\n\n       var tmpSales=[0,0,0,0,0,0,0]\n       var tmpProfits=[0,0,0,0,0,0,0]\n\n       console.log(this.week)\n\n       this.week_orders.forEach((item) => {\n\n         for(var i = 2;i<8;i++){\n           if(this.week[i]>item.fields.order_createtime){\n             tmpSales[i-2]+=item.fields.sumnum\n             tmpProfits[i-2]+=item.fields.sumcost\n\n             console.log(item.fields.order_createtime)\n             console.log(this.week[i])\n             console.log(i)\n             console.log(tmpSales)\n\n             break\n           }\n           if(i==7){\n             tmpSales[6]+=item.fields.sumnum\n             tmpProfits[6]+=item.fields.sumcost\n           }\n          }\n\n\n       });\n       lineChartData.sales=tmpSales\n       lineChartData.profits=tmpProfits\n\n\n       this.week_stocks=this.business_stocks.filter((item) => {\n         var i=item.fields.stock_createtime\n         if(i<s) return false\n         if(i>=e) return false\n         return true\n       });\n       console.log(s)\n       console.log(e)\n       console.log(this.week_stocks)\n\n       var tmpPurchases=[0,0,0,0,0,0,0]\n       var tmpExpenses=[0,0,0,0,0,0,0]\n\n       this.week_stocks.forEach((item) => {\n\n         for(var i = 2;i<8;i++){\n           if(this.week[i]>item.fields.stock_createtime){\n             tmpPurchases[i-2]+=item.fields.stocksumnum\n             tmpExpenses[i-2]+=item.fields.stocksumcost\n\n             break\n\n           }\n           if(i==7){\n             tmpPurchases[6]+=item.fields.stocksumnum\n         tmpExpenses[6]+=item.fields.stocksumcost\n           }\n          }\n\n\n       });\n       lineChartData.purchases=tmpPurchases\n       lineChartData.expenses=tmpExpenses\n\n\n       this.indicators[0].text = sum(lineChartData.purchases)+\"（件）\"\n       this.indicators[1].text = sum(lineChartData.sales)+\"（件）\"\n       this.indicators[2].text = sum(lineChartData.expenses).toFixed(2)+\"（元）\"\n       this.indicators[3].text = sum(lineChartData.profits).toFixed(2)+\"（元）\"\n\n       this.DetailsForm= [\n        {\n          purchases:lineChartData.purchases[0],\n          sales:lineChartData.sales[0],\n          expenses:lineChartData.expenses[0],\n          profit:lineChartData.profits[0]\n        },\n        {\n          purchases:lineChartData.purchases[1],\n          sales:lineChartData.sales[1],\n          expenses:lineChartData.expenses[1],\n          profit:lineChartData.profits[1]\n        },\n           {\n          purchases:lineChartData.purchases[2],\n          sales:lineChartData.sales[2],\n          expenses:lineChartData.expenses[2],\n          profit:lineChartData.profits[2]\n        },\n           {\n          purchases:lineChartData.purchases[3],\n          sales:lineChartData.sales[3],\n          expenses:lineChartData.expenses[3],\n          profit:lineChartData.profits[3]\n        },\n           {\n          purchases:lineChartData.purchases[4],\n          sales:lineChartData.sales[4],\n          expenses:lineChartData.expenses[4],\n          profit:lineChartData.profits[4]\n        },\n           {\n          purchases:lineChartData.purchases[5],\n          sales:lineChartData.sales[5],\n          expenses:lineChartData.expenses[5],\n          profit:lineChartData.profits[5]\n        },\n           {\n          purchases:lineChartData.purchases[6],\n          sales:lineChartData.sales[6],\n          expenses:lineChartData.expenses[6],\n          profit:lineChartData.profits[6]\n        },\n\n    ]\n\n     },\n\n     async selectLogs(){\n\n      if(!this.chooseRegion.province) {\n        this.regionState = 0\n      }else if(!this.chooseRegion.city){\n        this.regionState=1\n      }else if(!this.chooseRegion.area){\n        this.regionState=2\n      }else {\n        this.regionState=3\n      }\n\n      console.log(this.regionState)\n       console.log(this.chooseRegion)\n\n      await this.initBusinessOrders()\n    await this.initBusinessStocks()\n\n    await this.newDimension()\n    },\n\n     async getProductsList(){\n      //从Vuex获取商品列表信息\n      //return this.$store.state.productList;\n      await this.axios.get('show_products/')\n        .then((response) => {\n            console.log(response.data.list);\n            var tmp = response.data.list.filter(i => i.fields.product_business === this.$store.state.userId)\n          this.list=response.data.list.filter(i => i.fields.product_business === this.$store.state.userId)\n          this.choosedProduct=response.data.list.filter(i => i.fields.product_business === this.$store.state.userId)\n           tmp.forEach(item => {\n          this.nowProduct[item.pk] = item;\n\n        });})\n        .catch(function (error) {\n            console.log(error);\n        });\n    },\n\n\n  async initBusinessOrders(){\n      await this.axios.get('show_business_orderProduct/',{params:{business_id: this.$store.state.userId}})\n        .then((response) => {\n            console.log(response);\n            this.orderProducts = response.data.orderProducts;\n\n            this.business_orders = response.data.orders;\n            this.nowProduct.forEach(item => {\n\n\n                    var sum=0.0\n                    var num=0\n                    this.orderProducts.forEach(tt => {\n                      if(tt.fields.product_id==item.pk){\n                        sum+=(tt.fields.num-0.0)*(tt.fields.order_product_cost)\n                        num+=tt.fields.num\n                      }\n                    });\n                    item.fields['sumcost']=sum;//每一个商品的销售额\n                    item.fields['sumnum']=num;//每一个商品的销售量\n\n\n            });\n\n\n\n            this.business_orders.forEach(item => {\n                    item.fields['order_createtime']=new Date(item.fields['order_createtime'])\n                    item.fields['region']={\n                      province:item.fields.customer_province,\n                      city:item.fields.customer_city,\n                      area:item.fields.customer_area,\n                      town:''\n                    };\n                    var sum=0.0\n                    var num=0\n\n                    var regionRight =0\n              if(this.regionState===1){\n                if(item.fields['region'].province!==this.chooseRegion.province){\n                  regionRight=1}\n\n              }else if(this.regionState===2){\n                if(item.fields['region'].province!==this.chooseRegion.province){\n                  regionRight=1\n                }else if(item.fields['region'].city!==this.chooseRegion.city){\n                  regionRight=1\n                }\n              }else if(this.regionState===3){\n                if(item.fields['region'].province!==this.chooseRegion.province){\n                  regionRight=1\n                }else if(item.fields['region'].city!==this.chooseRegion.city){\n                  regionRight=1\n                }else if(item.fields['region'].area!==this.chooseRegion.area){\n                  regionRight=1\n                }\n\n              }\n              if(regionRight===0){\n                    this.orderProducts.forEach(tt => {\n\n                      if(tt.fields.order_id==item.pk){\n                        if(this.choosedProduct.find(m => m.pk===tt.fields.product_id)) {\n                          sum += (tt.fields.num - 0.0) * (parseFloat(tt.fields.order_product_cost))\n                          num += tt.fields.num\n                          console.log(num);\n                          console.log(sum);\n                        }\n                      }\n                    });}\n                    item.fields['sumcost']=sum;//每一个订单的销售额\n                    item.fields['sumnum']=num;//每一个订单的销售量\n\n                });\n            console.log(this.business_orders);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    },\n\n\n     async initBusinessStocks(){\n      await this.axios.get('fetch_stock/',{params:{business_id: this.$store.state.userId}})\n        .then((response) => {\n            console.log(response);\n\n\n            this.business_stocks = response.data.stock_orders;\n            this.nowProduct.forEach(item => {\n\n\n                    var stocksum=0.0\n                    var stocknum=0\n                    this.business_stocks.forEach(tt => {\n\n                      if(tt.fields.product_id==item.pk){\n                        stocksum+=(tt.fields.stock_num-0.0)*(tt.fields.stock_cost)\n                        stocknum+=tt.fields.stock_num\n                      }\n                    });\n                    item.fields['stocksumcost']=stocksum;//每一个商品的支出\n                    item.fields['stocksumnum']=stocknum;//每一个商品的采购数量\n\n\n            });\n\n\n\n            this.business_stocks.forEach(item => {\n                    item.fields['stock_createtime']=new Date(item.fields['stock_createtime'])\n                    item.fields['region']={\n                      province:item.fields.customer_province,\n                      city:item.fields.customer_city,\n                      area:item.fields.customer_area,\n                      town:''\n                    };\n\n                    var regionRight =0\n              if(this.regionState===1){\n                if(item.fields['region'].province!==this.chooseRegion.province){\n                  regionRight=1}\n\n              }else if(this.regionState===2){\n                if(item.fields['region'].province!==this.chooseRegion.province){\n                  regionRight=1\n                }else if(item.fields['region'].city!==this.chooseRegion.city){\n                  regionRight=1\n                }\n              }else if(this.regionState===3){\n                if(item.fields['region'].province!==this.chooseRegion.province){\n                  regionRight=1\n                }else if(item.fields['region'].city!==this.chooseRegion.city){\n                  regionRight=1\n                }else if(item.fields['region'].area!==this.chooseRegion.area){\n                  regionRight=1\n                }\n\n              }\n              if(regionRight===0){\n\n                    if(this.choosedProduct.find(m => m.pk===item.fields.product_id)) {\n                      item.fields['stocksumcost'] = (item.fields.stock_num - 0.0) * (item.fields.stock_cost);//每一个订单的支出\n                      item.fields['stocksumnum'] = item.fields.stock_num;//每一个订单的采购数量\n                    }else{\n                      item.fields['stocksumcost'] = 0.0;//每一个订单的支出\n                      item.fields['stocksumnum'] = 0;//每一个订单的采购数量\n                    }}else{\n                      item.fields['stocksumcost'] = 0.0;//每一个订单的支出\n                      item.fields['stocksumnum'] = 0;//每一个订单的采购数量\n                    }\n                });\n            console.log(this.business_stocks);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    },\n\n     async fixedChoosed(){\n      let list = [...this.list];\n      //品牌过滤\n      if(this.filterBrand !== ''){\n        list = list.filter(item => item.fields.product_brand === this.filterBrand);\n      }\n      //颜色过滤\n      if(this.filterColor !== ''){\n        list = list.filter(item => item.fields.product_color === this.filterColor);\n      }\n      //排序\n      if(this.order !== ''){\n        if(this.order === 'sales'){\n          list = list.sort((a, b) => b.fields.product_sales - a.fields.product_sales);\n        }else if(this.order === 'cost-desc'){\n          list = list.sort((a, b) => b.fields.product_cost - a.fields.product_cost);\n        }else if(this.order === 'cost-asc'){\n          list = list.sort((a, b) => a.fields.product_cost - b.fields.product_cost);\n        }\n      }\n      this.choosedProduct=[...list]\n       await this.initBusinessOrders()\n    await this.initBusinessStocks()\n\n    await this.newDimension()\n     },\n\n     async ttt(id){\n\n      this.choosedProduct=this.list.filter(item => item.pk === id);\n      await this.initBusinessOrders()\n    await this.initBusinessStocks()\n\n    await this.newDimension()\n     },\n\n\n\n     //品牌筛选\n    async handleFilterBrand(brand){\n      //点击品牌过滤，再次点击取消\n      if (this.filterBrand === brand) {\n        this.filterBrand = '';\n      }else{\n        this.filterBrand = brand;\n      }\n      await this.fixedChoosed()\n    },\n    //颜色筛选\n    async handleFilterColor(color){\n      //点击颜色过滤，再次点击取消\n      if (this.filterColor === color) {\n        this.filterColor = '';\n      }else{\n        this.filterColor = color;\n      }\n      await this.fixedChoosed()\n    },\n    async handleOrderDefault(){\n      this.order = '';\n      await this.fixedChoosed()\n    },\n    async handleOrderSales(){\n      this.order = 'sales';\n      await this.fixedChoosed()\n    },\n    handleOrderCost(){\n      //当点击升序时将箭头更新↓,降序设置为↑\n      if(this.order === 'cost-desc'){\n        this.order = 'cost-asc';\n      }else{\n        this.order = 'cost-desc';\n      }\n    },\n\n  },\n  async created(){\n    await this.getProductsList()\n    await this.initBusinessOrders()\n    await this.initBusinessStocks()\n\n    await this.newDimension()\n\n\n\n  },\n  computed:{\n    brands(){\n\n      const brands = this.list.map(item => item.fields.product_brand);\n\n      return util.getFilterArray(brands);\n\n    },\n    colors(){\n      const colors = this.list.map(item => item.fields.product_color);\n      return util.getFilterArray(colors);\n    },\n    filteredAndOrderedList(){\n      //拷贝原数组\n      let list = [...this.list];\n      //品牌过滤\n      if(this.filterBrand !== ''){\n        list = list.filter(item => item.fields.product_brand === this.filterBrand);\n      }\n      //颜色过滤\n      if(this.filterColor !== ''){\n        list = list.filter(item => item.fields.product_color === this.filterColor);\n      }\n      //排序\n      if(this.order !== ''){\n        if(this.order === 'sales'){\n          list = list.sort((a, b) => b.fields.product_sales - a.fields.product_sales);\n        }else if(this.order === 'cost-desc'){\n          list = list.sort((a, b) => b.fields.product_cost - a.fields.product_cost);\n        }else if(this.order === 'cost-asc'){\n          list = list.sort((a, b) => a.fields.product_cost - b.fields.product_cost);\n        }\n      }\n      console.log(\"kkk\")\n      console.log(this.list)\n      console.log(list)\n\n      return list;\n    }\n  },\n   mounted() {\n    getHomePanels()\n        .then((homePanels) => {\n          this.indicators = homePanels;\n        })\n        .catch((err) => {\n          console.warn(err);\n        });\n    getWeekAnalysis()\n        .then((result) => {\n          this.lineChartIndicators = result.indicators;\n          this.dimension = result.dimension;\n          this.lineChartData = {\n            purchases: result.data[0],\n            sales: result.data[1],\n            expenses: result.data[2],\n            profits: result.data[3],\n          };\n          this.$nextTick(() => {\n            this.chartLoaded = true;\n          });\n        })\n        .catch((err) => {\n          console.warn(err);\n          this.chartLoaded = true;\n        });\n  },\n\n\n};\n</script>\n\n<style scoped>\n.item-card {\n  transition: opacity 0.4s ease-in-out;\n}\n\n.item-card:not(.on-hover) {\n  opacity: 0.8; /* 提升不在悬停状态时的透明度 */\n}\n\n.line-chart {\n  background: #fff;\n}\n\n.list-control {\n  background: #fff;\n  border-radius: 8px;\n  margin: 16px;\n  padding: 16px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.list-control-filter {\n  margin-bottom: 16px;\n}\n\n.container {\n  width: 500px;\n  margin: 50px auto;\n  overflow: hidden;\n  border: 1px solid #f8bbd0; /* 浅粉色边框 */\n  border-radius: 8px;\n}\n\n.bar1 {\n  background: #fce4ec; /* 浅粉色背景 */\n}\n\n.bar1 input {\n  border: 2px solid #ec407a; /* 粉色边框 */\n  border-radius: 5px;\n  background: #f8bbd0; /* 浅粉色背景 */\n  color: #9e9c9c;\n}\n\n.bar1 button {\n  top: 0;\n  right: 0;\n  background: #ec407a; /* 粉色背景 */\n  border-radius: 0 5px 5px 0;\n}\n\n.bar1 button:before {\n  font-family: FontAwesome, serif;\n  font-size: 16px;\n  color: #f9f0da;\n}\n\n.list-control-filter-item,\n.list-control-order-item {\n  cursor: pointer;\n  display: inline-block;\n  border: 1px solid #e9eaec;\n  border-radius: 4px;\n  margin-right: 6px;\n  padding: 4px 8px; /* 增加一些内边距 */\n  background: #f8bbd0; /* 浅粉色背景 */\n  transition: all 0.3s ease;\n}\n\n.list-control-filter-item.on,\n.list-control-order-item.on {\n  background: #ec407a; /* 粉色主题 */\n  border: 1px solid #ec407a; /* 粉色边框 */\n  color: #fff;\n}\n\n.product-not-found {\n  text-align: center;\n  padding: 32px;\n}\n\n.like {\n  width: 1000px;\n  margin: 50px auto;\n  overflow: hidden;\n  border: 1px solid #f8bbd0; /* 浅粉色边框 */\n  border-radius: 8px;\n}\n\n.likeItem {\n  display: inline-block;\n  width: 200px;\n  height: 200px;\n  margin: 10px; /* 增加一些间距 */\n}\n\n.product {\n  width: 330px;\n  float: left;\n}\n\n.product-main {\n  display: block;\n  margin: 16px;\n  padding: 16px;\n  border: 1px solid #f8bbd0; /* 浅粉色边框 */\n  border-radius: 8px;\n  overflow: hidden;\n  background: #fff;\n  text-align: center;\n  position: relative;\n  transition: transform 0.3s ease;\n}\n\n.product-main:hover {\n  transform: scale(1.05); /* 悬停时放大效果 */\n}\n\n.product-main img {\n  width: 100%;\n}\n\nh4 {\n  color: #222;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.product-main:hover h4 {\n  color: #ec407a; /* 粉色主题 */\n}\n\n.product-color {\n  display: block;\n  width: 16px;\n  height: 16px;\n  border: 1px solid #ec407a; /* 粉色边框 */\n  border-radius: 50%;\n  margin: 6px auto;\n}\n\n.product-cost {\n  color: #ec407a; /* 粉色主题 */\n  margin-top: 6px;\n}\n\n.product-add-cart {\n  display: none;\n  padding: 4px 8px;\n  background: #ec407a; /* 粉色背景 */\n  color: #fff;\n  font-size: 12px;\n  border-radius: 3px;\n  cursor: pointer;\n  position: absolute;\n  top: 5px;\n  right: 5px;\n}\n\n.product-main:hover .product-add-cart {\n  display: inline-block;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}