{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport business_Product from \"@/components/business/business_product\";\nimport { read, utils } from \"xlsx\";\nexport default {\n  name: \"business_commodity\",\n  components: {\n    business_Product\n  },\n  data() {\n    return {\n      excelParseData: [],\n      itemsPerPageArray: [4, 8, 12],\n      search: '',\n      page: 1,\n      itemsPerPage: 4,\n      productsList: [],\n      items: [{\n        name: \"手机\",\n        库存: 10000,\n        金额: \"5000元\"\n      }]\n    };\n  },\n  computed: {\n    numberOfPages() {\n      return Math.ceil(this.productsList.length / this.itemsPerPage);\n    }\n  },\n  methods: {\n    nextPage() {\n      if (this.page + 1 <= this.numberOfPages) this.page += 1;\n    },\n    formerPage() {\n      if (this.page - 1 >= 1) this.page -= 1;\n    },\n    updateItemsPerPage(number) {\n      this.itemsPerPage = number;\n    },\n    async getProductsList() {\n      //从Vuex获取商品列表信息\n      //return this.$store.state.productList;\n      await this.axios.get('show_products/').then(response => {\n        console.log(response.data.list);\n        this.productsList = response.data.list.filter(i => i.fields.product_business === this.$store.state.userId);\n        console.log(this.productsList);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async addCommodity() {\n      let m = [];\n      await this.axios.get('fetch_userInfo', {\n        params: {\n          user_id: this.$store.state.userId\n        }\n      }).then(response => {\n        console.log(response);\n        m = response;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      if (m.data.user_mobile === \"\") {\n        console.log(\"null\");\n        window.alert(\"请完善联系方式\");\n        this.$router.push({\n          path: '/business/information'\n        });\n        return;\n      }\n      if (m.data.user_province === \"\" || m.data.user_city === \"\" || m.data.user_area === \"\") {\n        window.alert(\"请完善地址\");\n        this.$router.push({\n          path: '/business/information'\n        });\n        return;\n      }\n      if (m.data.user_address === \"\") {\n        window.alert(\"请完善详细地址\");\n        this.$router.push({\n          path: '/business/information'\n        });\n        return;\n      }\n      this.$router.push({\n        path: '/business/commodity/add_commodity'\n      });\n    },\n    addExcelStock() {\n      console.log(this.excelParseData);\n      if (!this.upload_file) {\n        window.alert(\"导入文件为空\");\n      } else {\n        this.excelParseData.forEach(async item => {\n          await this.axios.get('add_product_stock/', {\n            params: {\n              product_id: item.product_id,\n              stock: item.stock_num,\n              cost: item.stock_cost\n            }\n          }).then(response => {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        });\n        this.upload_file = null;\n        this.excelParseData = [];\n        window.alert(\"库存添加成功\");\n      }\n    },\n    readExcel(e) {\n      // 读取表格文件\n      this.excelParseData = [];\n      this.upload_file = null;\n      let that = this;\n      const files = e.target.files;\n      if (files.length <= 0) {\n        return false;\n      } else if (!/\\.(xls|xlsx)$/.test(files[0].name.toLowerCase())) {\n        this.$message({\n          message: \"上传格式不正确，请上传xls或者xlsx格式\",\n          type: \"warning\"\n        });\n        return false;\n      } else {\n        // 更新获取文件名\n        that.upload_file = files[0].name;\n      }\n      const fileReader = new FileReader();\n      fileReader.onload = ev => {\n        try {\n          const data = ev.target.result;\n          const workbook = read(data, {\n            type: \"binary\"\n          });\n          const wsname = workbook.SheetNames[0]; //取第一张表\n          const ws = utils.sheet_to_json(workbook.Sheets[wsname]); //生成json表格内容\n          //ws就是读取的数据（不包含标题行即表头，表头会作为对象的下标）\n\n          //this.submit_form();\n\n          console.log(ws);\n          this.excelParseData = ws;\n          console.log(this.excelParseData);\n        } catch (e) {\n          console.log(e);\n          return false;\n        }\n      };\n      console.log(\"rrrttt\");\n      fileReader.readAsBinaryString(files[0]);\n    }\n  },\n  async created() {\n    await this.getProductsList();\n    console.log(\"this\");\n    console.log(JSON.stringify(this.productsList));\n  }\n};","map":{"version":3,"mappings":";AA2HA;AACA;AAEA;EACAA;EACAC;IAEAC;EACA;EACAC;IACA;MACAC;MAEAC;MACAC;MACAC;MACAC;MAGAC;MACAC,QACA;QACAV;QACAW;QACAC;MACA;IAEA;EACA;EACAC;IACAC;MACA;IACA;EAGA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACA;MACA;MACA;MACA,uCACAC;QACAC;QACA;QACAA;MACA,GACAC;QACAD;MACA;IACA;IAEA;MAEA;MACA;QAAAE;UAAAC;QAAA;MAAA,GACAJ;QACAC;QACAI;MAGA,GACAH;QACAD;MAEA;MAGA;QACAA;QACAK;QACA;UAAAC;QAAA;QACA;MACA;MAEA;QACAD;QACA;UAAAC;QAAA;QACA;MACA;MAGA;QACAD;QACA;UAAAC;QAAA;QACA;MACA;MACA;QAAAA;MAAA;IACA;IACAC;MACAP;MACA;QACAK;MACA;QACA;UACA,2CACA;YAAAH;cAAAM;cAAAC;cAAAC;YAAA;UAAA,GACAX;YACAC;UAEA,GACAC;YACAD;UAEA;QACA;QACA;QACA;QAEAK;MACA;IACA;IAGAM;MACA;MACA;MACA;MACA;MACA;MAGA;QACA;MACA;QACA;UACAC;UACAC;QACA;QACA;MACA;QACA;QACAC;MACA;MAIA;MACAC;QACA;UACA;UAEA;YACAF;UACA;UAEA;UACA;UACA;;UAEA;;UAEAb;UACA;UACAA;QAEA;UAEAA;UACA;QACA;MACA;MACAA;MACAe;IACA;EACA;EACA;IAEA;IACAf;IACAA;EAGA;AACA","names":["name","components","business_Product","data","excelParseData","itemsPerPageArray","search","page","itemsPerPage","productsList","items","库存","金额","computed","numberOfPages","methods","nextPage","formerPage","updateItemsPerPage","then","console","catch","params","user_id","m","window","path","addExcelStock","product_id","stock","cost","readExcel","message","type","that","fileReader"],"sourceRoot":"src/view/business","sources":["business_commodity.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container fluid>\n      <v-data-iterator\n          :items=\"productsList\"\n          :items-per-page.sync=\"itemsPerPage\"\n          :page=\"page\"\n          :search=\"search\"\n          hide-default-footer\n      >\n        <template v-slot:header>\n          <v-toolbar\n              dark\n              color=\"pink lighten-3\"\n              class=\"mb-1\"\n          >\n            <v-spacer></v-spacer>\n            <v-toolbar-title>\n              <h4>上架商品</h4>\n            </v-toolbar-title>\n            <v-spacer></v-spacer>\n          </v-toolbar>\n        </template>\n\n        <template v-slot:default=\"props\">\n          <v-row>\n            <v-col\n                v-for=\"item in props.items\"\n                :key=\"item.fields.product_name\"\n            >\n\n              <business_Product  :info=\"item\" :key=\"item.fields.id\"></business_Product>\n\n            </v-col>\n          </v-row>\n        </template>\n\n        <template v-slot:footer>\n          <v-row class=\"mt-2\" align=\"center\" justify=\"center\">\n            <span class=\"grey--text\">Items per page</span>\n            <v-menu offset-y>\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                    dark\n                    text\n                    color=\"primary\"\n                    class=\"ml-2\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                >\n                  {{ itemsPerPage }}\n                  <v-icon>mdi-chevron-down</v-icon>\n                </v-btn>\n              </template>\n              <v-list>\n                <v-list-item\n                    v-for=\"(number, index) in itemsPerPageArray\"\n                    :key=\"index\"\n                    @click=\"updateItemsPerPage(number)\"\n                >\n                  <v-list-item-title>{{ number }}</v-list-item-title>\n                </v-list-item>\n              </v-list>\n            </v-menu>\n\n            <v-spacer></v-spacer>\n\n            <span\n                class=\"mr-4\n            grey--text\"\n            >\n            Page {{ page }} of {{ numberOfPages }}\n          </span>\n            <v-btn\n                fab\n                dark\n                color=\"pink lighten-3\"\n                class=\"mr-1\"\n                @click=\"formerPage\"\n            >\n              <v-icon>mdi-chevron-left</v-icon>\n            </v-btn>\n            <v-btn\n                fab\n                dark\n                color=\"pink lighten-3\"\n                class=\"ml-1\"\n                @click=\"nextPage\"\n            >\n              <v-icon>mdi-chevron-right</v-icon>\n            </v-btn>\n          </v-row>\n        </template>\n      </v-data-iterator>\n    </v-container>\n    <div class=\"container\">\n      {{ upload_file || \"导入\" }}\n      <input\n        type=\"file\"\n        accept=\".xls,.xlsx\"\n        class=\"upload_file\"\n        @change=\"readExcel($event)\"\n      />\n      <el-button\n        type=\"success\"\n        style=\"background-color: #FF69B4; border-color: #FF69B4;\"\n        @click=\"addExcelStock\"\n      >\n        导入excel库存\n      </el-button>\n    </div>\n    <v-btn\n      class=\"ma-2\"\n      color=\"pink lighten-3\"\n      @click=\"addCommodity\"\n    >\n      添加商品\n    </v-btn>\n\n  </div>\n</template>\n\n<script>\nimport business_Product from \"@/components/business/business_product\";\nimport {read, utils} from \"xlsx\";\n\nexport default {\n  name: \"business_commodity\",\n  components:{\n\n    business_Product\n  },\n  data () {\n    return {\n      excelParseData:[],\n\n      itemsPerPageArray: [4, 8, 12],\n      search: '',\n      page: 1,\n      itemsPerPage: 4,\n\n\n      productsList:[],\n      items:[\n        {\n          name: \"手机\",\n          库存: 10000,\n          金额: \"5000元\",\n        },\n      ],\n    }\n  },\n  computed: {\n    numberOfPages () {\n      return Math.ceil(this.productsList.length / this.itemsPerPage)\n    },\n\n\n  },\n  methods: {\n    nextPage () {\n      if (this.page + 1 <= this.numberOfPages) this.page += 1\n    },\n    formerPage () {\n      if (this.page - 1 >= 1) this.page -= 1\n    },\n    updateItemsPerPage (number) {\n      this.itemsPerPage = number\n    },\n    async getProductsList(){\n      //从Vuex获取商品列表信息\n      //return this.$store.state.productList;\n      await this.axios.get('show_products/')\n        .then((response) => {\n            console.log(response.data.list);\n            this.productsList = response.data.list.filter(i => i.fields.product_business === this.$store.state.userId)\n            console.log(this.productsList);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    },\n\n    async addCommodity() {\n\n              let m=[]\n              await this.axios.get('fetch_userInfo',{params:{user_id: this.$store.state.userId}})\n              .then((response) => {\n                  console.log(response);\n                  m=response\n\n\n              })\n              .catch(function (error) {\n                  console.log(error);\n\n              });\n\n\n              if(m.data.user_mobile===\"\"){\n                console.log(\"null\")\n                window.alert(\"请完善联系方式\")\n                this.$router.push({path: '/business/information'})\n                return\n              }\n\n              if((m.data.user_province===\"\")||(m.data.user_city===\"\")||(m.data.user_area===\"\")){\n                window.alert(\"请完善地址\")\n                this.$router.push({path: '/business/information'})\n                return\n              }\n\n\n              if(m.data.user_address===\"\"){\n                window.alert(\"请完善详细地址\")\n                this.$router.push({path: '/business/information'})\n                return\n              }\n      this.$router.push({path: '/business/commodity/add_commodity'})\n    },\n    addExcelStock(){\n      console.log(this.excelParseData)\n      if(!this.upload_file){\n        window.alert(\"导入文件为空\")\n      }else{\n        this.excelParseData.forEach(async (item) =>{\n          await this.axios.get('add_product_stock/',\n          {params:{product_id: item.product_id,stock:item.stock_num,cost:item.stock_cost}})\n        .then((response) => {\n            console.log(response);\n\n        })\n        .catch(function (error) {\n            console.log(error);\n\n        })\n        })\n        this.upload_file=null\n        this.excelParseData=[]\n\n      window.alert(\"库存添加成功\")\n      }\n    },\n\n\n    readExcel(e) {\n      // 读取表格文件\n      this.excelParseData=[]\n      this.upload_file=null\n      let that = this;\n      const files = e.target.files;\n\n\n      if (files.length <= 0) {\n        return false;\n      } else if (!/\\.(xls|xlsx)$/.test(files[0].name.toLowerCase())) {\n        this.$message({\n          message: \"上传格式不正确，请上传xls或者xlsx格式\",\n          type: \"warning\"\n        });\n        return false;\n      } else {\n        // 更新获取文件名\n        that.upload_file = files[0].name;\n      }\n\n\n\n      const fileReader = new FileReader();\n      fileReader.onload = ev => {\n        try {\n          const data = ev.target.result;\n\n          const workbook = read(data, {\n            type: \"binary\"\n          });\n\n          const wsname = workbook.SheetNames[0]; //取第一张表\n          const ws = utils.sheet_to_json(workbook.Sheets[wsname]); //生成json表格内容\n          //ws就是读取的数据（不包含标题行即表头，表头会作为对象的下标）\n\n          //this.submit_form();\n\n\t\t\t\t\tconsole.log(ws);\n          this.excelParseData=ws\n          console.log(this.excelParseData);\n\n        } catch (e) {\n\n          console.log(e);\n          return false;\n        }\n      };\n      console.log(\"rrrttt\")\n      fileReader.readAsBinaryString(files[0]);\n    },\n  },\n  async created(){\n\n    await this.getProductsList()\n    console.log(\"this\")\n    console.log(JSON.stringify(this.productsList))\n\n\n  }\n}\n</script>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}