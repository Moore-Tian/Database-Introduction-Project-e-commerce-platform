{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//导入本地数据\n//import product_data from './product.js';\n\nexport default {\n  data() {\n    return {\n      //获取路由中的参数\n      id: parseInt(this.$route.params.id),\n      product: null,\n      product_goods: 0,\n      begood: true,\n      bestar: true,\n      shop_stars: 0,\n      isOn: true\n    };\n  },\n  methods: {\n    async removePro() {\n      await this.axios.get('delete_product/', {\n        params: {\n          product_id: this.id\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async getProductLikes() {\n      await this.axios.get('get_product_likes/', {\n        params: {\n          product_id: this.id\n        }\n      }).then(response => {\n        console.log(response);\n        this.product_goods = response.data.goods;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      await this.axios.get('get_shop_stars/', {\n        params: {\n          business_id: this.product.fields.product_business\n        }\n      }).then(response => {\n        console.log(response);\n        this.shop_stars = response.data.stars;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async changeGood() {\n      if (this.begood) {\n        this.product_goods -= 1;\n      } else {\n        this.product_goods += 1;\n      }\n      this.begood = !this.begood;\n      await this.axios.get('toggle_user_like_to_product/', {\n        params: {\n          user_id: this.$store.state.userId,\n          product_id: this.id\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async changeStar() {\n      if (this.bestar) {\n        this.shop_stars -= 1;\n      } else {\n        this.shop_stars += 1;\n      }\n      this.bestar = !this.bestar;\n      await this.axios.get('toggle_user_star_to_shop/', {\n        params: {\n          user_id: this.$store.state.userId,\n          business_id: this.product.fields.product_business\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async initUserToProduct() {\n      await this.axios.get('get_user_like_to_product/', {\n        params: {\n          user_id: this.$store.state.userId,\n          product_id: this.id\n        }\n      }).then(response => {\n        console.log(response);\n        //this.list = response.data.list\n        if (response.data.good === 'good') {\n          this.begood = true;\n        } else {\n          this.begood = false;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      await this.axios.get('get_user_star_to_shop/', {\n        params: {\n          user_id: this.$store.state.userId,\n          business_id: this.product.fields.product_business\n        }\n      }).then(response => {\n        console.log(response);\n        //this.list = response.data.list\n        if (response.data.star === 'star') {\n          this.bestar = true;\n        } else {\n          this.bestar = false;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async getProduct(x1) {\n      await this.axios.get('fetch_product/', {\n        params: {\n          product_id: x1\n        }\n      }).then(response => {\n        console.log(response);\n        this.product = response.data.product;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async handleAddCart() {\n      this.$router.push({\n        path: '/business/business_edit_commodity/' + this.id\n      });\n    }\n  },\n  async created() {\n    //初始化数据\n\n    await this.getProduct(this.id);\n    if (this.product.fields.product_status == '上架') {\n      this.isOn = true;\n    } else {\n      this.isOn = false;\n    }\n  },\n  async mounted() {\n    //初始化数据\n\n    await this.getProduct(this.id);\n  }\n};","map":{"version":3,"mappings":";AAoCA;AACA;;AAEA;EACAA;IACA;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA,wCACA;QAAAC;UAAAC;QAAA;MAAA,GACAC;QACAC;MAEA,GACAC;QACAD;MACA;IACA;IAEA;MACA,2CACA;QAAAH;UAAAC;QAAA;MAAA,GACAC;QACAC;QACA;MAEA,GACAC;QACAD;MACA;MAEA,wCACA;QAAAH;UAAAK;QAAA;MAAA,GACAH;QACAC;QACA;MAEA,GACAC;QACAD;MACA;IACA;IACA;MACA;QACA;MACA;QACA;MACA;MACA;MAEA,qDACA;QAAAH;UAAAM;UAAAL;QAAA;MAAA,GACAC;QACAC;MAEA,GACAC;QACAD;MACA;IACA;IACA;MACA;QACA;MACA;QACA;MACA;MACA;MAEA,kDACA;QAAAH;UAAAM;UAAAD;QAAA;MAAA,GACAH;QACAC;MAEA,GACAC;QACAD;MACA;IACA;IACA;MACA,kDACA;QAAAH;UAAAM;UAAAL;QAAA;MAAA,GACAC;QACAC;QACA;QACA;UACA;QACA;UACA;QACA;MAEA,GACAC;QACAD;MACA;MAEA,+CACA;QAAAH;UAAAM;UAAAD;QAAA;MAAA,GACAH;QACAC;QACA;QACA;UACA;QACA;UACA;QACA;MAEA,GACAC;QACAD;MACA;IACA;IAGA;MACA;QAAAH;UAAAC;QAAA;MAAA,GACAC;QACAC;QACA;MACA,GACAC;QACAD;MAEA;IACA;IACA;MACA;QAAAI;MAAA;IAEA;EACA;EACA;IACA;;IAEA;IAEA;MACA;IACA;MACA;IACA;EAEA;EAEA;IACA;;IAEA;EAGA;AACA","names":["data","id","product","product_goods","begood","bestar","shop_stars","isOn","methods","params","product_id","then","console","catch","business_id","user_id","path"],"sourceRoot":"src/components/business","sources":["business_product_view.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"product\">\r\n    <div class=\"product\">\r\n      <!-- 商品图片、名称、价格 -->\r\n      <div class=\"product-image\">\r\n        <img :src=\"`http://127.0.0.1:8000/media/${product.fields.product_image}`\" alt=\"\">\r\n      </div>\r\n      <div class=\"product-info\">\r\n        <h1 class=\"product-name\">商品id：{{product.pk}}</h1>\r\n        <h1 class=\"product-name\">{{product.fields.product_name}}</h1>\r\n        <div class=\"product-cost\">商品库存：{{product.fields.product_stock}}</div>\r\n        <div class=\"product-cost\">商品销量：{{product.fields.product_sales}}</div>\r\n        <div class=\"product-cost\">商品单价：{{product.fields.product_cost}}</div>\r\n        <div class=\"product-cost\">商品品牌：{{product.fields.product_brand}}</div>\r\n        <div class=\"product-cost\">商品颜色：{{product.fields.product_color}}</div>\r\n        <div class=\"product-cost\">商品状态：{{product.fields.product_status}}</div>\r\n\r\n        <div class=\"product-add-cart\" v-if=\"isOn\" @click=\"handleAddCart\">编辑商品</div>\r\n        <div class=\"product-add-cart\" v-if=\"isOn\" @click=\"removePro\">下架商品</div>\r\n        <div class=\"product-add-cart\" v-if=\"!isOn\" @click=\"handleAddCart\">编辑并上架商品</div>\r\n      </div>\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n    <div class=\"product-desc\">\r\n      <h2>产品介绍</h2>\r\n      <img :src=\"`http://127.0.0.1:8000/media/${product.fields.product_imageDetail}`\" alt=\"\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//导入本地数据\r\n//import product_data from './product.js';\r\n\r\nexport default {\r\n  data(){\r\n    return {\r\n      //获取路由中的参数\r\n      id: parseInt(this.$route.params.id),\r\n      product: null,\r\n      product_goods:0,\r\n      begood:true,\r\n      bestar:true,\r\n      shop_stars:0,\r\n      isOn:true,\r\n    }\r\n  },\r\n  methods: {\r\n    async removePro(){\r\n      await this.axios.get('delete_product/',\r\n            {params:{ product_id: this.id}})\r\n        .then((response) => {\r\n            console.log(response);\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    },\r\n\r\n    async getProductLikes(){\r\n      await this.axios.get('get_product_likes/',\r\n            {params:{ product_id: this.id}})\r\n        .then((response) => {\r\n            console.log(response);\r\n           this.product_goods=response.data.goods\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n      await this.axios.get('get_shop_stars/',\r\n            {params:{ business_id: this.product.fields.product_business}})\r\n        .then((response) => {\r\n            console.log(response);\r\n           this.shop_stars=response.data.stars\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    },\r\n    async changeGood(){\r\n      if(this.begood){\r\n        this.product_goods-=1\r\n      }else{\r\n        this.product_goods+=1\r\n      }\r\n      this.begood=!this.begood\r\n\r\n      await this.axios.get('toggle_user_like_to_product/',\r\n            {params:{user_id: this.$store.state.userId, product_id: this.id}})\r\n        .then((response) => {\r\n            console.log(response);\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    },\r\n    async changeStar(){\r\n      if(this.bestar){\r\n        this.shop_stars-=1\r\n      }else{\r\n        this.shop_stars+=1\r\n      }\r\n      this.bestar=!this.bestar\r\n\r\n      await this.axios.get('toggle_user_star_to_shop/',\r\n            {params:{user_id: this.$store.state.userId, business_id: this.product.fields.product_business}})\r\n        .then((response) => {\r\n            console.log(response);\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    },\r\n    async initUserToProduct(){\r\n      await this.axios.get('get_user_like_to_product/',\r\n            {params:{user_id: this.$store.state.userId, product_id: this.id}})\r\n        .then((response) => {\r\n            console.log(response);\r\n            //this.list = response.data.list\r\n          if(response.data.good==='good'){\r\n            this.begood=true\r\n          }else{\r\n            this.begood=false\r\n          }\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n      await this.axios.get('get_user_star_to_shop/',\r\n            {params:{user_id: this.$store.state.userId, business_id: this.product.fields.product_business}})\r\n        .then((response) => {\r\n            console.log(response);\r\n            //this.list = response.data.list\r\n          if(response.data.star==='star'){\r\n            this.bestar=true\r\n          }else{\r\n            this.bestar=false\r\n          }\r\n\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    },\r\n\r\n\r\n    async getProduct(x1){\r\n      await this.axios.get('fetch_product/',{params:{product_id: x1}})\r\n        .then((response) => {\r\n            console.log(response);\r\n            this.product = response.data.product\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n\r\n        });\r\n    },\r\n    async handleAddCart(){\r\n      this.$router.push({path: '/business/business_edit_commodity/'+ this.id})\r\n\r\n    }\r\n  },\r\n  async created(){\r\n    //初始化数据\r\n\r\n    await this.getProduct(this.id)\r\n\r\n    if(this.product.fields.product_status=='上架'){\r\n      this.isOn=true\r\n    }else {\r\n      this.isOn=false\r\n    }\r\n\r\n  },\r\n\r\n  async mounted(){\r\n    //初始化数据\r\n\r\n    await this.getProduct(this.id)\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n<!-- scoped属性表示只对当前组件有效，不影响其他组件 -->\r\n<style scoped>\r\n.word {\r\n  font-size: 24px;\r\n  color: #ad1457;\r\n}\r\n\r\n.fillheart {\r\n  color: #e91e63;\r\n  font-size: 32px;\r\n}\r\n\r\n.heart {\r\n  color: #ccc;\r\n  font-size: 32px;\r\n}\r\n\r\n.fillstar {\r\n  color: #ffeb3b;\r\n  font-size: 32px;\r\n}\r\n\r\n.star {\r\n  color: #ccc;\r\n  font-size: 32px;\r\n}\r\n\r\n.product {\r\n  margin: 20px;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border: 1px solid #f8bbd0;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: box-shadow 0.3s ease-in-out;\r\n}\r\n.product:hover {\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.product-image {\r\n  width: 50%;\r\n  height: auto;\r\n  float: left;\r\n  text-align: center;\r\n}\r\n.product-image img {\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  border-radius: 10px;\r\n}\r\n\r\n.product-info {\r\n  width: 50%;\r\n  padding: 50px 20px;\r\n  float: left;\r\n  text-align: center;\r\n}\r\n\r\n.product-cost {\r\n  color: #e91e63;\r\n  margin: 10px 0;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\n.product-add-cart {\r\n  display: inline-block;\r\n  padding: 10px 30px;\r\n  margin: 10px 0;\r\n  background: #f06292;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background 0.3s ease;\r\n}\r\n.product-add-cart:hover {\r\n  background: #e91e63;\r\n}\r\n\r\n.product-desc {\r\n  background: #fff;\r\n  margin: 20px;\r\n  padding: 20px;\r\n  border: 1px solid #f8bbd0;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.product-desc img {\r\n  display: block;\r\n  width: 70%;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border-bottom: 1px solid #f8bbd0;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}