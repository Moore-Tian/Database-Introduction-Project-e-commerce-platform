{"ast":null,"code":"import Order_cart from \"@/components/business/order_cart\";\nimport { RegionText } from 'v-region';\nexport default {\n  name: 'order_toFetch',\n  components: {\n    Order_cart,\n    RegionText\n  },\n  data: () => ({\n    btn_content: '确定收货',\n    business_orders: [],\n    orderProducts: [],\n    nowProduct: [],\n    userAvatar: []\n  }),\n  props: {\n    tabkey: Object\n  },\n  watch: {\n    tabkey: function () {\n      this.initBusinessOrders();\n    }\n  },\n  methods: {\n    async initBusinessOrders() {\n      await this.axios.get('show_customer_orderProduct_status/', {\n        params: {\n          business_id: this.$store.state.userId,\n          status: '买家未收货'\n        }\n      }).then(response => {\n        console.log(response);\n        this.business_orders = response.data.orders;\n        response.data.nowProduct.forEach(item => {\n          this.nowProduct[item.pk] = item;\n        });\n        response.data.userAvatar.forEach(item => {\n          this.userAvatar[item.pk] = item.fields.user_avatar;\n        });\n        this.business_orders.forEach(item => {\n          item.fields['region'] = {\n            province: item.fields.customer_province,\n            city: item.fields.customer_city,\n            area: item.fields.customer_area,\n            town: ''\n          };\n        });\n        this.orderProducts = response.data.orderProducts;\n        //this.nowProduct = response.data.nowProduct;\n        console.log(this.business_orders);\n        //this.business_orders_ids = response.data.list.map(item => item.pk)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async changeStatus(click_order_id) {\n      await this.axios.get('alterOrderStatus/', {\n        params: {\n          order_id: click_order_id,\n          status: '买家已确认订单'\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      await this.initBusinessOrders();\n    }\n  },\n  async created() {\n    await this.initBusinessOrders();\n  }\n};","map":{"version":3,"mappings":"AAmEA;AACA;AACA;EACAA;EACAC;IAAAC;IAEAC;EACA;EACAC;IACAC;IAGAC;IACAC;IACAC;IACAC;EAGA;EACAC;IACAC;EACA;EACAC;IACAD;MACA;IACA;EACA;EACAE;IAEA;MACA,2DACA;QAAAC;UAAAC;UAAAC;QAAA;MAAA,GACAC;QACAC;QACA;QACAC;UACA;QACA;QAEAA;UACA;QACA;QAEA;UACAC;YACAC;YACAC;YACAC;YACAC;UACA;QAEA;QAIA;QACA;QACAN;QACA;MACA,GACAO;QACAP;MACA;IAEA;IAEA;MACA,0CACA;QAAAJ;UAAAY;UAAAV;QAAA;MAAA,GACAC;QACAC;MACA,GACAO;QACAP;MACA;MACA;IACA;EACA;EACA;IACA;EACA;AACA","names":["name","components","Order_cart","RegionText","data","btn_content","business_orders","orderProducts","nowProduct","userAvatar","props","tabkey","watch","methods","params","business_id","status","then","console","response","item","province","city","area","town","catch","order_id"],"sourceRoot":"src/components/customer/order","sources":["order_toFetch.vue"],"sourcesContent":["<template>\r\n  <v-expansion-panels focusable multiple popout>\r\n    <v-expansion-panel\r\n        v-for=\"item in business_orders\"\r\n        :key=\"item.pk\"\r\n    >\r\n      <v-expansion-panel-header>\r\n        <!--蓝底头像+用户名-->\r\n        <v-col>\r\n          <!--\r\n          <v-avatar\r\n            color=\"#64B5F6\"\r\n            size=\"56\"\r\n            class=\"white--text\"\r\n          >\r\n            {{ item.fields.customer_name }}\r\n          </v-avatar>\r\n          !-->\r\n          <img :src=\"`http://127.0.0.1:8000/media/${userAvatar[item.fields.customer_id]}`\" alt=\"\"\r\n                    height=\"50px\" width=\"50px\">\r\n        </v-col>\r\n        <!--用户名-->\r\n        <v-col>\r\n          <v-list-item-title>{{ item.fields.customer_name }}</v-list-item-title>\r\n        </v-col>\r\n        <!--下单时间-->\r\n        <v-col>\r\n          <v-list-item-title>{{ item.fields.order_createtime | format  }}</v-list-item-title>\r\n        </v-col>\r\n        <!--地址-->\r\n        <v-col>\r\n          <!--<v-list-item-title>{{ item.address }}</v-list-item-title>-->\r\n          <region-text\r\n                  separator=\"-\"\r\n                  :town=\"false\"\r\n                  v-model=\"item.fields.region\"\r\n          />\r\n        </v-col>\r\n        <v-col>\r\n          <v-list-item-title>{{ item.fields.customer_address  }}</v-list-item-title>\r\n\r\n        </v-col>\r\n        <v-col>\r\n          <v-list-item-title>{{ item.fields.customer_mobile  }}</v-list-item-title>\r\n\r\n        </v-col>\r\n\r\n\r\n      </v-expansion-panel-header>\r\n\r\n      <v-expansion-panel-content>\r\n        <Order_cart :info=\"item\" :orderProducts=\"orderProducts\" :productDictList=\"nowProduct\" ></Order_cart>\r\n        <!-- 提醒付款：需要消息系统，后续实现-->\r\n        <v-col>\r\n          <v-btn\r\n            color=\"success\"\r\n            @click=\"changeStatus(item.pk)\"\r\n          >\r\n            {{btn_content}}\r\n          </v-btn>\r\n        </v-col>\r\n      </v-expansion-panel-content>\r\n    </v-expansion-panel>\r\n  </v-expansion-panels>\r\n</template>\r\n\r\n<script>\r\nimport Order_cart from \"@/components/business/order_cart\";\r\nimport {RegionText} from 'v-region'\r\nexport default {\r\n  name: 'order_toFetch',\r\n  components: {Order_cart,\r\n\r\n    RegionText\r\n  },\r\n  data: () => ({\r\n    btn_content: '确定收货',\r\n\r\n\r\n    business_orders:[],\r\n    orderProducts:[],\r\n    nowProduct:[],\r\n    userAvatar:[],\r\n\r\n\r\n  }),\r\n  props:{\r\n    tabkey:Object\r\n  },\r\n    watch: {\r\n  tabkey: function () {\r\n    this.initBusinessOrders()\r\n  }\r\n},\r\n  methods:{\r\n\r\n    async initBusinessOrders(){\r\n      await this.axios.get('show_customer_orderProduct_status/',\r\n          {params:{business_id: this.$store.state.userId,status:'买家未收货'}})\r\n        .then((response) => {\r\n            console.log(response);\r\n            this.business_orders = response.data.orders;\r\n            response.data.nowProduct.forEach(item => {\r\n                    this.nowProduct[item.pk] = item;\r\n                });\r\n\r\n            response.data.userAvatar.forEach(item => {\r\n                    this.userAvatar[item.pk] = item.fields.user_avatar;\r\n                });\r\n\r\n            this.business_orders.forEach(item => {\r\n                    item.fields['region']={\r\n                      province:item.fields.customer_province,\r\n                      city:item.fields.customer_city,\r\n                      area:item.fields.customer_area,\r\n                      town:''\r\n                    }\r\n\r\n                });\r\n\r\n\r\n\r\n            this.orderProducts = response.data.orderProducts;\r\n            //this.nowProduct = response.data.nowProduct;\r\n            console.log(this.business_orders);\r\n            //this.business_orders_ids = response.data.list.map(item => item.pk)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    },\r\n\r\n    async changeStatus(click_order_id) {\r\n      await this.axios.get('alterOrderStatus/',\r\n          {params:{order_id: click_order_id,status:'买家已确认订单'}})\r\n        .then((response) => {\r\n            console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n      await this.initBusinessOrders()\r\n    },\r\n  },\r\n  async created(){\r\n    await this.initBusinessOrders()\r\n  },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}