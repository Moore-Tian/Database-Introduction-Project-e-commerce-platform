{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//import product_data from './product';\nexport default {\n  name: \"customer_cart\",\n  data() {\n    return {\n      promotion: 0,\n      promotionCode: '',\n      userCartList: [],\n      //从cart表取到的原数据\n      cartProductList: [],\n      //cart表里包含的product表的原数据\n      productList: [],\n      productDictList: [] //product_id -> product\n    };\n  },\n\n  computed: {\n    //购物车商品总数\n    countAll() {\n      let count = 0;\n      this.userCartList.forEach(item => {\n        count += item.fields.num;\n      });\n      return count;\n    },\n    //购物车商品总价\n    costAll() {\n      let cost = 0;\n      this.userCartList.forEach(item => {\n        cost += this.productDictList[item.fields.product_id].fields.product_cost * (item.fields.num - 0.0);\n        console.log(this.productDictList[item.fields.product_id].fields.product_cost * (item.fields.num - 0.0));\n        console.log(item.fields.num - 0.0);\n        console.log(this.productDictList[item.fields.product_id].fields.product_cost);\n      });\n      return cost;\n    }\n  },\n  methods: {\n    //通知Vuex,完成下单\n\n    async handleOrder() {\n      let m = [];\n      await this.axios.get('fetch_userInfo', {\n        params: {\n          user_id: this.$store.state.userId\n        }\n      }).then(response => {\n        console.log(response);\n        m = response;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      console.log(m);\n      if (m.data.user_mobile === \"\") {\n        console.log(\"null\");\n        window.alert(\"请完善联系方式\");\n        this.$router.push({\n          path: '/customerPerson'\n        });\n        return;\n      }\n      if (m.data.user_province === \"\" || m.data.user_city === \"\" || m.data.user_area === \"\") {\n        window.alert(\"请完善地址\");\n        this.$router.push({\n          path: '/customerPerson'\n        });\n        return;\n      }\n      if (m.data.user_address === \"\") {\n        window.alert(\"请完善详细地址\");\n        this.$router.push({\n          path: '/customerPerson'\n        });\n        return;\n      }\n      console.log('full');\n      await this.axios.get('add_order/', {\n        params: {\n          user_id: this.$store.state.userId\n        }\n      }).then(response => {\n        console.log(response);\n        //this.list = response.data.list\n      }).catch(function (error) {\n        console.log(error);\n      });\n      console.log(\"this end\");\n      var i = this.userCartList.length;\n      for (; i > 1; i--) {\n        await this.axios.get('delete_item_in_cart/', {\n          params: {\n            user_id: this.$store.state.userId,\n            product_id: this.userCartList[i - 1].fields.product_id\n          }\n        }).then(response => {\n          console.log(response);\n          //this.list = response.data.list\n          //window.alert(\"删除成功\")\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n      await this.handleDelete(0);\n      window.alert('购买成功');\n    },\n    //验证优惠码，使用ccylovehs代替优惠券字符串\n    handleCheckCode() {\n      if (this.promotionCode === '') {\n        window.alert('请输入优惠码');\n        return;\n      }\n      if (this.promotionCode !== 'ccylovehs') {\n        window.alert('优惠码输入错误');\n        return;\n      }\n      this.promotion = 500;\n    },\n    async handleCount(index, count) {\n      await this.axios.get('edit_num_in_cart/', {\n        params: {\n          user_id: this.$store.state.userId,\n          product_id: this.userCartList[index].fields.product_id,\n          num: count\n        }\n      }).then(response => {\n        console.log(\"!!!!!!!!!!!!!!!!!----------\");\n        console.log(response);\n        //this.list = response.data.list\n        console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n      await this.cartList(this.$store.state.userId);\n    },\n    //根据index查找商品id进行删除\n    async handleDelete(index) {\n      await this.axios.get('delete_item_in_cart/', {\n        params: {\n          user_id: this.$store.state.userId,\n          product_id: this.userCartList[index].fields.product_id\n        }\n      }).then(response => {\n        console.log(response);\n        //this.list = response.data.list\n        //window.alert(\"删除成功\")\n      }).catch(function (error) {\n        console.log(error);\n      });\n      await this.cartList(this.$store.state.userId);\n      //this.$store.commit('deleteCart', this.cartList[index].id);\n      //const index = state.cartList.findIndex(item => item.id === id);\n      //state.cartList.splice(index, 1)\n    },\n\n    //购物车数据\n    async cartList(x1) {\n      await this.axios.get('show_cart/', {\n        params: {\n          user_id: x1\n        }\n      }).then(response => {\n        console.log(response);\n        this.userCartList = response.data.list;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      await this.cartProductsList(this.$store.state.userId);\n      this.productDictList = {};\n      await this.cartProductList.forEach(item => {\n        this.productDictList[item.pk] = item;\n      });\n    },\n    async cartProductsList(x1) {\n      await this.axios.get('cartProductsList/', {\n        params: {\n          user_id: x1\n        }\n      }).then(response => {\n        console.log(response);\n        this.cartProductList = response.data.list;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  },\n  async created() {\n    console.log(\"cart-create\");\n    console.log(this.$store.state.userId);\n    await this.cartList(this.$store.state.userId);\n    console.log(\"cart-create-success\");\n    await this.cartProductsList(this.$store.state.userId);\n    console.log(this.productDictList);\n    console.log(this.productDictList[2].fields.product_cost);\n  }\n};","map":{"version":3,"mappings":";AAkEA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;IACA;EACA;;EACAC;IAGA;IACAC;MACA;MACA;QACAC;MACA;MACA;IACA;IAAA;IACAC;MACA;MACA;QACAC;QACAC;QACAA;QACAA;MACA;MACA;IACA;EAEA;EACAC;IACA;;IAEA;MACA;MACA;QAAAC;UAAAC;QAAA;MAAA,GACAC;QACAJ;QACAK;MAGA,GACAC;QACAN;MAEA;MACAA;MAEA;QACAA;QACAO;QACA;UAAAC;QAAA;QACA;MACA;MAEA;QACAD;QACA;UAAAC;QAAA;QACA;MACA;MAGA;QACAD;QACA;UAAAC;QAAA;QACA;MACA;MAEAR;MAEA,mCACA;QAAAE;UAAAC;QAAA;MAAA,GACAC;QACAJ;QACA;MAEA,GACAM;QACAN;MAEA;MACAA;MAEA;MACA;QACA,6CACA;UAAAE;YAAAC;YAAAM;UAAA;QAAA,GACAL;UACAJ;UACA;UACA;QACA,GACAM;UACAN;QACA;MACA;MACA;MAIAO;IAGA;IAMA;IACAG;MACA;QACAH;QACA;MACA;MACA;QACAA;QACA;MACA;MACA;IACA;IAEA;MACA,0CACA;QACAL;UACAC;UACAM;UACAE;QACA;MACA,GACAP;QACAJ;QACAA;QACA;QACAA;MACA,GACAM;QACAN;MACA;MACA;IACA;IAEA;IACA;MACA,6CACA;QAAAE;UAAAC;UAAAM;QAAA;MAAA,GACAL;QACAJ;QACA;QACA;MACA,GACAM;QACAN;MACA;MAEA;MACA;MACA;MACA;IACA;;IACA;IACA;MACA;QAAAE;UAAAC;QAAA;MAAA,GACAC;QACAJ;QACA;MACA,GACAM;QACAN;MACA;MAEA;MAEA;MACA;QACA;MACA;IACA;IACA;MACA;QAAAE;UAAAC;QAAA;MAAA,GACAC;QACAJ;QACA;MACA,GACAM;QACAN;MACA;IAEA;EACA;EAEA;IACAA;IACAA;IACA;IACAA;IACA;IACAA;IACAA;EAGA;AACA","names":["name","data","promotion","promotionCode","userCartList","cartProductList","productList","productDictList","computed","countAll","count","costAll","cost","console","methods","params","user_id","then","m","catch","window","path","product_id","handleCheckCode","num"],"sourceRoot":"src/components/customer","sources":["customer_cart.vue"],"sourcesContent":["<template>\n    <div class=\"cart\">\n        <div class=\"cart-header\">\n            <div class=\"cart-header-title\">购物清单</div>\n            <div class=\"cart-header-main\">\n                <div class=\"cart-info\">商品信息</div>\n                <div class=\"cart-price\">单价</div>\n                <div class=\"cart-count\">数量</div>\n                <div class=\"cart-cost\">小计</div>\n                <div class=\"cart-delete\">删除</div>\n            </div>\n        </div>\n        <div class=\"cart-content\">\n            <!-- 列表显示购物清单 -->\n            <div class=\"cart-content-main\" v-for=\"(item, index)  in userCartList\" :key=\"item.index\">\n                <div class=\"cart-info\">\n                    <img :src=\"`http://127.0.0.1:8000/media/${productDictList[item.fields.product_id].fields.product_image}`\" alt=\"\"\n                    height=\"150px\" width=\"150px\">\n                    <span>{{productDictList[item.fields.product_id].fields.product_name}}</span>\n                </div>\n                <div class=\"cart-price\">\n                    ￥ {{productDictList[item.fields.product_id].fields.product_cost}}\n                </div>\n                <div class=\"cart-count\">\n                    <span class=\"cart-control-minus\"\n                          @click=\"handleCount(index, -1)\">-</span>\n                    {{item.fields.num}}\n                    <span class=\"cart-control-add\"\n                          @click=\"handleCount(index, 1)\">+</span>\n                </div>\n                <div class=\"cart-cost\">\n                    ￥ {{productDictList[item.fields.product_id].fields.product_cost * (item.fields.num-0.0)}}\n                </div>\n                <div class=\"cart-delete\">\n                    <span class=\"cart-control-delete\"\n                          @click=\"handleDelete(index)\">删除</span>\n                </div>\n            </div>\n            <div class=\"cart-empty\" v-if=\"!userCartList.length\">购物车为空</div>\n        </div>\n        <div class=\"cart-promotion\" v-show=\"userCartList.length\">\n            <span>使用优惠券</span>\n            <input type=\"text\" v-model=\"promotionCode\">\n            <span class=\"cart-control-promotion\"\n                  @click=\"handleCheckCode\">验证</span>\n        </div>\n        <div class=\"cart-footer\" v-show=\"userCartList.length\">\n            <div class=\"cart-footer-desc\">\n                共计 <span>{{countAll}}</span>\n            </div>\n            <div class=\"cart-footer-desc\">\n                应付总额 <span>{{costAll - promotion}}</span>\n                <br>\n                <template v-if=\"promotion\">\n                    (优惠<span>￥ {{promotion}} </span>)\n                </template>\n            </div>\n            <div class=\"cart-footer-desc\">\n                <div class=\"cart-control-order\"\n                     @click=\"handleOrder\">现在结算</div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    //import product_data from './product';\n    export default {\n        name: \"customer_cart\",\n        data(){\n            return {\n                promotion: 0,\n                promotionCode: '',\n                userCartList:[],  //从cart表取到的原数据\n                cartProductList:[],  //cart表里包含的product表的原数据\n                productList: [],\n                productDictList:[]  //product_id -> product\n            }\n        },\n        computed: {\n\n\n            //购物车商品总数\n            countAll(){\n                let count = 0;\n                this.userCartList.forEach(item => {\n                    count += item.fields.num;\n                });\n                return count;\n            },//购物车商品总价\n            costAll(){\n                let cost = 0;\n                this.userCartList.forEach(item => {\n                    cost += this.productDictList[item.fields.product_id].fields.product_cost * (item.fields.num-0.0);\n                    console.log(this.productDictList[item.fields.product_id].fields.product_cost * (item.fields.num-0.0));\n                    console.log((item.fields.num-0.0));\n                    console.log(this.productDictList[item.fields.product_id].fields.product_cost);\n                });\n                return cost;\n            }\n\n        },\n        methods: {\n            //通知Vuex,完成下单\n\n            async handleOrder(){\n              let m=[]\n              await this.axios.get('fetch_userInfo',{params:{user_id: this.$store.state.userId}})\n              .then((response) => {\n                  console.log(response);\n                  m=response\n\n\n              })\n              .catch(function (error) {\n                  console.log(error);\n\n              });\n              console.log(m)\n\n              if(m.data.user_mobile===\"\"){\n                console.log(\"null\")\n                window.alert(\"请完善联系方式\")\n                this.$router.push({path: '/customerPerson'})\n                return\n              }\n\n              if((m.data.user_province===\"\")||(m.data.user_city===\"\")||(m.data.user_area===\"\")){\n                window.alert(\"请完善地址\")\n                this.$router.push({path: '/customerPerson'})\n                return\n              }\n\n\n              if(m.data.user_address===\"\"){\n                window.alert(\"请完善详细地址\")\n                this.$router.push({path: '/customerPerson'})\n                return\n              }\n\n              console.log('full')\n\n              await this.axios.get('add_order/',\n                  {params:{user_id: this.$store.state.userId}})\n              .then((response) => {\n                  console.log(response);\n                  //this.list = response.data.list\n\n              })\n              .catch(function (error) {\n                  console.log(error);\n\n              });\n              console.log(\"this end\");\n\n              var i = this.userCartList.length\n              for (; i>1; i--) {\n                await this.axios.get('delete_item_in_cart/',\n                  {params:{user_id: this.$store.state.userId, product_id: this.userCartList[i-1].fields.product_id}})\n              .then((response) => {\n                  console.log(response);\n                  //this.list = response.data.list\n                  //window.alert(\"删除成功\")\n              })\n              .catch(function (error) {\n                  console.log(error);\n              });\n              }\n              await this.handleDelete(0)\n\n\n\n              window.alert('购买成功');\n\n\n            },\n\n\n\n\n\n            //验证优惠码，使用ccylovehs代替优惠券字符串\n            handleCheckCode(){\n                if(this.promotionCode === ''){\n                    window.alert('请输入优惠码');\n                    return;\n                }\n                if(this.promotionCode !== 'ccylovehs'){\n                    window.alert('优惠码输入错误');\n                    return;\n                }\n                this.promotion = 500;\n            },\n\n            async handleCount(index,count) {\n              await this.axios.get('edit_num_in_cart/',\n                  {\n                    params: {\n                      user_id: this.$store.state.userId,\n                      product_id: this.userCartList[index].fields.product_id,\n                      num: count\n                    }\n                  })\n                  .then((response) => {\n                    console.log(\"!!!!!!!!!!!!!!!!!----------\");\n                    console.log(response);\n                    //this.list = response.data.list\n                    console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n                  })\n                  .catch(function (error) {\n                    console.log(error);\n                  });\n              await this.cartList(this.$store.state.userId)\n            },\n\n            //根据index查找商品id进行删除\n            async handleDelete(index){\n              await this.axios.get('delete_item_in_cart/',\n                  {params:{user_id: this.$store.state.userId, product_id: this.userCartList[index].fields.product_id}})\n              .then((response) => {\n                  console.log(response);\n                  //this.list = response.data.list\n                  //window.alert(\"删除成功\")\n              })\n              .catch(function (error) {\n                  console.log(error);\n              });\n\n              await this.cartList(this.$store.state.userId)\n              //this.$store.commit('deleteCart', this.cartList[index].id);\n              //const index = state.cartList.findIndex(item => item.id === id);\n              //state.cartList.splice(index, 1)\n            },\n            //购物车数据\n            async cartList(x1){\n              await this.axios.get('show_cart/',{params:{user_id: x1}})\n              .then((response) => {\n                  console.log(response);\n                  this.userCartList = response.data.list\n              })\n              .catch(function (error) {\n                  console.log(error);\n              });\n\n              await this.cartProductsList(this.$store.state.userId)\n\n              this.productDictList = {};\n              await this.cartProductList.forEach(item => {\n                    this.productDictList[item.pk] = item;\n                });\n            },\n          async cartProductsList(x1){\n              await this.axios.get('cartProductsList/',{params:{user_id: x1}})\n              .then((response) => {\n                  console.log(response);\n                  this.cartProductList = response.data.list\n              })\n              .catch(function (error) {\n                  console.log(error);\n              });\n\n            }\n        },\n\n        async created(){\n          console.log(\"cart-create\");\n          console.log(this.$store.state.userId)\n          await this.cartList(this.$store.state.userId)\n          console.log(\"cart-create-success\");\n          await this.cartProductsList(this.$store.state.userId)\n          console.log(this.productDictList);\n          console.log(this.productDictList[2].fields.product_cost);\n\n\n        }\n    }\n</script>\n\n<style scoped>\n    .cart{\n        margin: 32px;\n        background: #fff;\n        border: 1px solid #dddee1;\n        border-radius: 10px;\n    }\n    .cart-header-title{\n        padding: 16px 32px;\n        border-bottom: 1px solid #dddee1;\n        border-radius: 10px 10px 0 0;\n        background: #f8f8f9;\n    }\n    .cart-header-main{\n        padding: 8px 32px;\n        overflow: hidden;\n        border-bottom: 1px solid #dddee1;\n        background: #eee;\n        overflow: hidden;\n    }\n    .cart-empty{\n        text-align: center;\n        padding: 32px;\n    }\n    .cart-header-main div{\n        text-align: center;\n        float: left;\n        font-size: 14px;\n    }\n    div.cart-info{\n        width: 60%;\n        text-align: left;\n    }\n    .cart-price{\n        width: 10%;\n    }\n    .cart-count{\n        width: 10%;\n    }\n    .cart-cost{\n        width: 10%;\n    }\n    .cart-delete {\n        width: 10%;\n    }\n    .cart-content-main{\n        padding: 0 32px;\n        height: 60px;\n        line-height: 60px;\n        text-align: center;\n        border-bottom: 1px dashed #e9eaec;\n        overflow: hidden;\n    }\n    .cart-content-main div{\n        float: left;\n    }\n    .cart-content-main img{\n        width: 40px;\n        height: 40px;\n        position: relative;\n        top: 10px;\n    }\n    .cart-control-minus,\n    .cart-control-add{\n        display: inline-block;\n        margin: 0 4px;\n        width: 24px;\n        height: 24px;\n        line-height: 22px;\n        text-align: center;\n        background: #f8f8f9;\n        border-radius: 50%;\n        box-shadow: 0 1px 1px rgba(0,0,0,.2);\n        cursor: pointer;\n    }\n    .cart-control-delete{\n        cursor: pointer;\n        color: #2d8cf0;\n    }\n    .cart-promotion{\n        padding: 16px 32px;\n    }\n    .cart-control-promotion,\n    .cart-control-order{\n        display: inline-block;\n        padding: 8px 32px;\n        border-radius: 6px;\n        background: #2d8cf0;\n        color: #fff;\n        cursor: pointer;\n    }\n    .cart-control-promotion{\n        padding: 2px 6px;\n        font-size: 12px;\n        border-radius: 3px;\n    }\n    .cart-footer{\n        padding: 32px;\n        text-align: right;\n    }\n    .cart-footer-desc{\n        display: inline-block;\n        padding: 0 16px;\n    }\n    .cart-footer-desc span{\n        color: #f2352e;\n        font-size: 20px;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}