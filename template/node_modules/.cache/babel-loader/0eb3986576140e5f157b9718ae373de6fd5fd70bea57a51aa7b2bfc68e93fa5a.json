{"ast":null,"code":"import Order_cart from \"@/components/business/order_cart\";\nimport { RegionText } from 'v-region';\nexport default {\n  name: 'order_weifukuan',\n  components: {\n    Order_cart,\n    RegionText\n  },\n  data: () => ({\n    items: [{\n      color: '#2196F3',\n      name: 'lzh',\n      address: '北京',\n      dingdan: '111'\n    }, {\n      color: '#90CAF9',\n      name: 'lyq',\n      address: '山东',\n      dingdan: '222'\n    }, {\n      color: '#64B5F6',\n      name: 'lr',\n      address: '湖南',\n      dingdan: '333'\n    }, {\n      color: '#42A5F5',\n      name: 'lzh',\n      address: '北京',\n      dingdan: '444'\n    }, {\n      color: '#1E88E5',\n      name: 'lyq',\n      address: '山东',\n      dingdan: '555'\n    }, {\n      color: '#1976D2',\n      name: 'lr',\n      address: '湖南',\n      dingdan: '666'\n    }],\n    // 用户头像颜色，此处没有使用图片，后续可以考虑改为用户头像\n    //colors: ['#2196F3', '#90CAF9', '#64B5F6', '#42A5F5', '#1E88E5', '#1976D2', '#1565C0', '#0D47A1', '#82B1FF', '#448AFF', '#2979FF', '#2962FF'],\n\n    /* 可以使用订单类？\n     * 从每个订单类中查找用户名、商品名和对应的商品数量\n     */\n\n    btn_content: '催付款',\n    business_orders: [],\n    orderProducts: [],\n    nowProduct: [],\n    userAvatar: []\n  }),\n  props: {\n    tabkey: Object\n  },\n  watch: {\n    tabkey: function () {\n      this.initBusinessOrders();\n    }\n  },\n  methods: {\n    async initBusinessOrders() {\n      await this.axios.get('show_business_orderProduct_status/', {\n        params: {\n          business_id: this.$store.state.userId,\n          status: '买家未付款'\n        }\n      }).then(response => {\n        console.log(response);\n        this.business_orders = response.data.orders;\n        response.data.nowProduct.forEach(item => {\n          this.nowProduct[item.pk] = item;\n        });\n        response.data.userAvatar.forEach(item => {\n          this.userAvatar[item.pk] = item.fields.user_avatar;\n        });\n        this.business_orders.forEach(item => {\n          item.fields['region'] = {\n            province: item.fields.customer_province,\n            city: item.fields.customer_city,\n            area: item.fields.customer_area,\n            town: ''\n          };\n        });\n        this.orderProducts = response.data.orderProducts;\n        //this.nowProduct = response.data.nowProduct;\n        console.log(this.business_orders);\n        //this.business_orders_ids = response.data.list.map(item => item.pk)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async changeStatus(click_order_id) {\n      window.alert('提醒成功');\n      console.log(click_order_id);\n    }\n  },\n  async created() {\n    await this.initBusinessOrders();\n  }\n};","map":{"version":3,"mappings":"AAmEA;AACA;AACA;EACAA;EACAC;IAAAC;IAEAC;EACA;EACAC;IACAC,QACA;MAAAC;MAAAN;MAAAO;MAAAC;IAAA,GACA;MAAAF;MAAAN;MAAAO;MAAAC;IAAA,GACA;MAAAF;MAAAN;MAAAO;MAAAC;IAAA,GACA;MAAAF;MAAAN;MAAAO;MAAAC;IAAA,GACA;MAAAF;MAAAN;MAAAO;MAAAC;IAAA,GACA;MAAAF;MAAAN;MAAAO;MAAAC;IAAA,EACA;IACA;IACA;;IAEA;AACA;AACA;;IAEAC;IAGAC;IACAC;IACAC;IACAC;EAGA;EACAC;IACAC;EACA;EACAC;IACAD;MACA;IACA;EACA;EACAE;IAEA;MACA,2DACA;QAAAC;UAAAC;UAAAC;QAAA;MAAA,GACAC;QACAC;QACA;QACAC;UACA;QACA;QAEAA;UACA;QACA;QAEA;UACAC;YACAC;YACAC;YACAC;YACAC;UACA;QAEA;QACA;QACA;QACAN;QACA;MACA,GACAO;QACAP;MACA;IAEA;IAEA;MACAQ;MACAR;IACA;EACA;EACA;IACA;EACA;AACA","names":["name","components","Order_cart","RegionText","data","items","color","address","dingdan","btn_content","business_orders","orderProducts","nowProduct","userAvatar","props","tabkey","watch","methods","params","business_id","status","then","console","response","item","province","city","area","town","catch","window"],"sourceRoot":"src/components/business","sources":["order_weifukuan.vue"],"sourcesContent":["<template>\n  <v-expansion-panels focusable popout>\n    <v-expansion-panel\n        v-for=\"item in business_orders\"\n        :key=\"item.pk\"\n    >\n      <v-expansion-panel-header>\n        <!--蓝底头像+用户名-->\n        <v-col>\n          <!--\n          <v-avatar\n            color=\"#64B5F6\"\n            size=\"56\"\n            class=\"white--text\"\n          >\n            {{ item.fields.customer_name }}\n          </v-avatar>\n          !-->\n          <img :src=\"`http://127.0.0.1:8000/media/${userAvatar[item.fields.customer_id]}`\" alt=\"\"\n                    height=\"50px\" width=\"50px\">\n        </v-col>\n        <!--用户名-->\n        <v-col>\n          <v-list-item-title>{{ item.fields.customer_name }}</v-list-item-title>\n        </v-col>\n        <!--下单时间-->\n        <v-col>\n          <v-list-item-title>{{ item.fields.order_createtime | format  }}</v-list-item-title>\n        </v-col>\n        <!--地址-->\n        <v-col>\n          <!--<v-list-item-title>{{ item.address }}</v-list-item-title>-->\n          <region-text\n                  separator=\"-\"\n                  :town=\"false\"\n                  v-model=\"item.fields.region\"\n          />\n        </v-col>\n        <v-col>\n          <v-list-item-title>{{ item.fields.customer_address  }}</v-list-item-title>\n\n        </v-col>\n        <v-col>\n          <v-list-item-title>{{ item.fields.customer_mobile  }}</v-list-item-title>\n\n        </v-col>\n\n\n      </v-expansion-panel-header>\n\n      <v-expansion-panel-content>\n        <Order_cart :info=\"item\" :orderProducts=\"orderProducts\" :productDictList=\"nowProduct\" ></Order_cart>\n        <!-- 提醒付款：需要消息系统，后续实现-->\n        <v-col>\n          <v-btn\n            color=\"success\"\n            @click=\"changeStatus(item.pk)\"\n          >\n            {{btn_content}}\n          </v-btn>\n        </v-col>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n  </v-expansion-panels>\n</template>\n\n<script>\nimport Order_cart from \"@/components/business/order_cart\";\nimport {RegionText} from 'v-region'\nexport default {\n  name: 'order_weifukuan',\n  components: {Order_cart,\n\n    RegionText\n  },\n  data: () => ({\n    items: [\n      {color: '#2196F3', name: 'lzh', address: '北京', dingdan:'111'},\n      {color: '#90CAF9', name: 'lyq', address: '山东', dingdan:'222'},\n      {color: '#64B5F6', name: 'lr', address: '湖南', dingdan:'333'},\n      {color: '#42A5F5', name: 'lzh', address: '北京', dingdan:'444'},\n      {color: '#1E88E5', name: 'lyq', address: '山东', dingdan:'555'},\n      {color: '#1976D2', name: 'lr', address: '湖南', dingdan:'666'},\n    ],\n    // 用户头像颜色，此处没有使用图片，后续可以考虑改为用户头像\n    //colors: ['#2196F3', '#90CAF9', '#64B5F6', '#42A5F5', '#1E88E5', '#1976D2', '#1565C0', '#0D47A1', '#82B1FF', '#448AFF', '#2979FF', '#2962FF'],\n\n    /* 可以使用订单类？\n     * 从每个订单类中查找用户名、商品名和对应的商品数量\n     */\n\n    btn_content: '催付款',\n\n\n    business_orders:[],\n    orderProducts:[],\n    nowProduct:[],\n    userAvatar:[],\n\n\n  }),\n  props:{\n    tabkey:Object\n  },\n    watch: {\n  tabkey: function () {\n    this.initBusinessOrders()\n  }\n},\n  methods:{\n\n    async initBusinessOrders(){\n      await this.axios.get('show_business_orderProduct_status/',\n          {params:{business_id: this.$store.state.userId,status:'买家未付款'}})\n        .then((response) => {\n            console.log(response);\n            this.business_orders = response.data.orders;\n            response.data.nowProduct.forEach(item => {\n                    this.nowProduct[item.pk] = item;\n                });\n\n            response.data.userAvatar.forEach(item => {\n                    this.userAvatar[item.pk] = item.fields.user_avatar;\n                });\n\n            this.business_orders.forEach(item => {\n                    item.fields['region']={\n                      province:item.fields.customer_province,\n                      city:item.fields.customer_city,\n                      area:item.fields.customer_area,\n                      town:''\n                    }\n\n                });\n            this.orderProducts = response.data.orderProducts;\n            //this.nowProduct = response.data.nowProduct;\n            console.log(this.business_orders);\n            //this.business_orders_ids = response.data.list.map(item => item.pk)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    },\n\n    async changeStatus(click_order_id) {\n      window.alert('提醒成功')\n      console.log(click_order_id)\n    },\n  },\n  async created(){\n    await this.initBusinessOrders()\n  },\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}