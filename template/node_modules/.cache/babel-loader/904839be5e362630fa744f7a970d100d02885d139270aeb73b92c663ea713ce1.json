{"ast":null,"code":"import GeoPattern from \"geopattern\";\nimport { required } from \"@/utils/widget\";\nimport { RegionSelects, RegionText } from 'v-region';\nexport default {\n  name: \"business_information\",\n  components: {\n    RegionSelects,\n    RegionText\n  },\n  data() {\n    return {\n      showImage: \"\",\n      region: {\n        province: '350000',\n        city: '350100',\n        area: '350104',\n        town: ''\n      },\n      cardlines: [],\n      tabItems: [{\n        tab: \"profile\",\n        content: \"个人设置\"\n      }, {\n        tab: \"password\",\n        content: \"修改密码\"\n      }],\n      usercard: \"\",\n      userInfo: {\n        user_name: \"\",\n        user_mobile: \"\",\n        user_selectAddress: {\n          province: '',\n          city: '',\n          area: '',\n          town: ''\n        },\n        user_address: \"\",\n        user_avatar: \"\",\n        user_createtime: \"\"\n      },\n      profileForm: {\n        user_name: \"\",\n        user_mobile: \"\",\n        user_address: \"\",\n        user_avatar: \"\"\n      },\n      profileRules: {\n        user_name: [required(\"用户名\")],\n        user_mobile: [required(\"手机号码\"), function (v) {\n          return /^1[3456789]\\d{9}$/.test(v) || `手机号码格式错误`;\n        }],\n        user_email: [required(\"地址\")]\n      },\n      passwordForm: {\n        oldPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\"\n      },\n      passwordRules: {\n        oldPassword: [required(\"密码\")],\n        newPassword: [required(\"密码\")],\n        confirmPassword: [required(\"密码\")]\n      }\n    };\n  },\n  async created() {\n    await this.initBaseInfo();\n    this.initPasswordRules();\n  },\n  methods: {\n    async fetchUserInfo() {\n      await this.axios.get('fetch_userInfo/', {\n        params: {\n          user_id: this.$store.state.userId\n        }\n      }).then(response => {\n        var ttt = response.data.user_avatar.fields.user_avatar;\n        this.userInfo = {\n          user_name: response.data.user_name,\n          user_mobile: response.data.user_mobile,\n          user_address: response.data.user_address,\n          user_avatar: ttt !== \"\" ? 'http://127.0.0.1:8000/media/' + ttt : '',\n          user_createtime: response.data.user_createtime,\n          user_selectAddress: {\n            province: response.data.user_province,\n            city: response.data.user_city,\n            area: response.data.user_area,\n            town: ''\n          }\n        };\n        this.showImage = ttt !== \"\" ? 'http://127.0.0.1:8000/media/' + ttt : '';\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    resetProfile() {\n      this.region = this.userInfo.user_selectAddress;\n      this.profileForm = {\n        user_name: this.userInfo.user_name,\n        user_mobile: this.userInfo.user_mobile,\n        user_address: this.userInfo.user_address,\n        user_avatar: this.userInfo.user_avatar\n      };\n    },\n    async initBaseInfo() {\n      await this.fetchUserInfo();\n      this.usercard = GeoPattern.generate(this.userInfo.user_name, {}).toDataUrl();\n      this.resetProfile();\n      this.cardlines = [{\n        icon: \"mdi-account\",\n        text: this.userInfo.user_name\n      }, {\n        icon: \"mdi-cellphone\",\n        text: this.userInfo.user_mobile\n      }, {\n        icon: \"mdi-update\",\n        text: `加入于 ${this.userInfo.user_createtime}`\n      }, {\n        icon: \"mdi-email\",\n        text: this.userInfo.user_address\n      }];\n    },\n    selectLogs: async function (e) {\n      console.log(e);\n      console.log(this.region.city);\n      await this.checkSelectAddr();\n    },\n    getImageFile: function (e) {\n      this.profileForm.user_avatar = e.target.files[0];\n      let img = new FileReader();\n      img.readAsDataURL(this.profileForm.user_avatar);\n      img.onload = ({\n        target\n      }) => {\n        this.showImage = target.result;\n      };\n    },\n    async saveProfile() {\n      if (this.$refs.form.validate()) {\n        let formData = new FormData();\n        formData.append('user_image', this.profileForm.user_avatar);\n        const json = JSON.stringify(this.profileForm);\n        const blob = new Blob([json], {\n          type: 'application/json'\n        });\n        formData.append('forms', blob);\n        const json2 = JSON.stringify(this.$store.state.userId);\n        const blob2 = new Blob([json2], {\n          type: 'application/json'\n        });\n        formData.append('user_id', blob2);\n        const json3 = JSON.stringify(this.region);\n        const blob3 = new Blob([json3], {\n          type: 'application/json'\n        });\n        formData.append('selectAddr', blob3);\n        var configs = {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n        await this.axios.post('edit_userInfo/', formData, configs).then(response => {\n          if (response.data.msg === \"success\") {\n            this.userInfo.user_avatar = 'http://127.0.0.1:8000/media/' + response.data.image;\n            this.showImage = 'http://127.0.0.1:8000/media/' + response.data.image;\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n        await this.initBaseInfo();\n      }\n    },\n    async passwordUpdate() {\n      if (this.passwordForm.newPassword !== this.passwordForm.confirmPassword) {\n        window.alert('请保持密码一致');\n      } else if (this.passwordForm.newPassword === \"\") {\n        window.alert('密码不能为空');\n      } else {\n        await this.axios.get('edit_password/', {\n          params: {\n            old_password: this.passwordForm.oldPassword,\n            new_password: this.passwordForm.newPassword,\n            user_id: this.$store.state.userId\n          }\n        }).then(response => {\n          if (response.data.error_num !== 0) {\n            window.alert('请重新确认原密码');\n          } else {\n            window.alert('密码修改成功');\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n    checkaddr() {\n      if (!this.region.area) return \"下拉选择省市区\";\n      return true;\n    },\n    checkNewPassword(passwordFormfield) {\n      const _this = this;\n      const getField = function () {\n        return _this.passwordForm[passwordFormfield];\n      };\n      return function (v) {\n        const field = getField();\n        const checkResult = !field || v === field;\n        if (_this.$refs.passwordForm) {\n          const targetInput = _this.$refs.passwordForm.inputs.filter(input => input.id === passwordFormfield)[0];\n          if (v === field && !targetInput.valid) {\n            targetInput.resetValidation();\n          }\n        }\n        return checkResult || `两次输入的密码不一致`;\n      };\n    },\n    async checkSelectAddr() {\n      this.profileRules = {\n        user_name: [required(\"用户名\")],\n        user_mobile: [required(\"手机号码\"), function (v) {\n          return /^1[3456789]\\d{9}$/.test(v) || `手机号码格式错误`;\n        }],\n        user_email: [required(\"地址\"), this.checkaddr()]\n      };\n    },\n    initPasswordRules() {\n      this.profileRules = {\n        user_name: [required(\"用户名\")],\n        user_mobile: [required(\"手机号码\"), function (v) {\n          return /^1[3456789]\\d{9}$/.test(v) || `手机号码格式错误`;\n        }],\n        user_email: [required(\"地址\"), this.checkaddr()]\n      };\n      this.passwordRules.newPassword = [required(\"新密码\"), this.checkNewPassword(\"confirmPassword\")];\n      this.passwordRules.confirmPassword = [required(\"确认密码\"), this.checkNewPassword(\"newPassword\")];\n    }\n  }\n};","map":{"version":3,"mappings":"AAmNA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC,WACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC;MACAC;QACAC;QACAC;QACAC;UACAZ;UACAC;UACAC;UACAC;QACA;QACAU;QACAC;QACAC;MACA;MACAC;QACAN;QACAC;QACAE;QACAC;MACA;MACAG;QACAP;QACAC,cACAO,kBACA;UACA;QACA,EACA;QACAC;MACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAH;QACAC;QACAC;MACA;IACA;EACA;EACA;IACA;IACA;EACA;EACAE;IACA;MACA;QAAAC;UAAAC;QAAA;MAAA,GACAC;QACA;QACA;UACAlB;UACAC;UACAE;UACAC;UACAC;UACAH;YACAZ;YACAC;YACAC;YACAC;UACA;QACA;QACA;MACA,GACA0B;QACAC;MACA;IACA;IACAC;MACA;MACA;QACArB;QACAC;QACAE;QACAC;MACA;IACA;IACA;MACA;MACA;MACA;MACA,kBACA;QAAAkB;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;IACA;IACAC;MACAJ;MACAA;MACA;IACA;IACAK;MACA;MACA;MACAC;MACAA;QAAAC;MAAA;QACA;MACA;IACA;IACA;MACA;QACA;QACAC;QACA;QACA;UAAAC;QAAA;QACAD;QACA;QACA;UAAAC;QAAA;QACAD;QACA;QACA;UAAAC;QAAA;QACAD;QACA;UACAE;YAAA;UAAA;QACA;QACA;UACA;YACA;YACA;UACA;QACA;UACAV;QACA;QACA;MACA;IACA;IACA;MACA;QACAW;MACA;QACAA;MACA;QACA;UACAf;YACAgB;YACAC;YACAhB;UACA;QACA;UACA;YACAc;UACA;YACAA;UACA;QACA;UACAX;QACA;MACA;IACA;IACAc;MACA;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;MACA;QACA;QACA;QACA;UACA,2DACAC,wCACA;UACA;YACAC;UACA;QACA;QACA;MACA;IACA;IACA;MACA;QACArC;QACAC,cACAO,kBACA;UACA;QACA,EACA;QACAC;MACA;IACA;IACA6B;MACA;QACAtC;QACAC,cACAO,kBACA;UACA;QACA,EACA;QACAC;MACA;MACA,kCACAD,iBACA,yCACA;MACA,sCACAA,kBACA,qCACA;IACA;EACA;AACA","names":["name","components","RegionSelects","RegionText","data","showImage","region","province","city","area","town","cardlines","tabItems","tab","content","usercard","userInfo","user_name","user_mobile","user_selectAddress","user_address","user_avatar","user_createtime","profileForm","profileRules","required","user_email","passwordForm","oldPassword","newPassword","confirmPassword","passwordRules","methods","params","user_id","then","catch","console","resetProfile","icon","text","selectLogs","getImageFile","img","target","formData","type","headers","window","old_password","new_password","checkaddr","checkNewPassword","input","targetInput","initPasswordRules"],"sourceRoot":"src/view/business","sources":["business_information.vue"],"sourcesContent":["<template>\n  <div class=\"py-2 px-2 height-100pc user-center pink-theme\" elevation=\"1\">\n    <v-row no-gutters justify=\"space-between\">\n      <v-col class=\"mr-3\" md=\"3\">\n        <v-card shaped class=\"pink-card\">\n          <v-img\n              :style=\"{ 'background-image': usercard }\"\n              height=\"250\"\n              class=\"user-card-img\"\n          >\n            <div class=\"text-center mt-2\">\n              <img\n                  class=\"avatar-img\"\n                  v-if=\"userInfo.user_avatar\"\n                  :src=\"userInfo.user_avatar\"\n                  alt=\"\"/>\n              <v-icon v-else size=\"190\" color=\"#fff\">mdi-account-circle</v-icon>\n            </div>\n            <div class=\"my-2 text-center font-weight-bold\">\n              {{ userInfo.user_name }}\n            </div>\n          </v-img>\n\n          <v-card-text>\n            <div v-for=\"(line, index) in cardlines\" :key=\"index\">\n              <div class=\"py-2\">\n                <v-icon small left class=\"pink-icon\">{{ line.icon }}</v-icon>\n                {{ line.text }}\n              </div>\n              <v-divider/>\n            </div>\n\n            <div class=\"py-2\">\n                <v-icon small left class=\"pink-icon\">mdi-email</v-icon>\n                <region-text\n                  separator=\"-\"\n                  :town=\"false\"\n                  v-model=\"userInfo.user_selectAddress\"\n                />\n              </div>\n              <v-divider/>\n\n            <div class=\"mb-3\"></div>\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <v-col class=\"ml-3\">\n        <v-card>\n          <v-tabs>\n            <v-tab class=\"pink-tab\">个人设置</v-tab>\n            <v-tab class=\"pink-tab\">修改密码</v-tab>\n\n            <!-- 个人设置 -->\n            <v-tab-item>\n              <v-card flat class=\"pa-3\">\n                <v-row>\n                  <v-col md=\"6\">\n                    <v-form ref=\"form\">\n                      <!-- 字段渲染 -->\n                      <v-container>\n                        <v-row>\n                          <v-col md=\"12\">\n                            <v-text-field\n                                label=\"用户名\"\n                                :rules=\"profileRules.user_name\"\n                                v-model=\"profileForm.user_name\"\n                                clearable\n                            />\n                          </v-col>\n                        </v-row>\n                        <v-row>\n                          <v-col md=\"12\">\n                            <v-text-field\n                                label=\"手机号码\"\n                                :rules=\"profileRules.user_mobile\"\n                                v-model=\"profileForm.user_mobile\"\n                                clearable\n                            />\n                          </v-col>\n                        </v-row>\n                        <v-row>\n                          <v-card>\n                            <v-col>\n                              详细地址\n                              <region-selects\n                                v-model=\"region\"\n                                :town=\"false\"\n                                @change=\"selectLogs\"\n                                clearable\n                              />\n                            </v-col>\n                            <v-col>\n                              <v-text-field\n                                label=\"详细地址\"\n                                :rules=\"profileRules.user_email\"\n                                v-model=\"profileForm.user_address\"\n                                clearable\n                              />\n                            </v-col>\n                          </v-card>\n                        </v-row>\n                      </v-container>\n                    </v-form>\n                  </v-col>\n                  <v-col md=\"6\">\n                    <el-form ref=\"form\" :model=\"profileForm\" label-width=\"80px\">\n                      <el-form-item label=\"头像\">\n                        <input type=\"file\" @change=\"getImageFile\" id=\"img\">\n                        <img :src=\"showImage\" height=\"150px\" width=\"150px\">\n                      </el-form-item>\n                      <el-form-item>\n                        <el-button type=\"primary\" @click=\"onSubmit\">确认添加</el-button>\n                      </el-form-item>\n                    </el-form>\n                  </v-col>\n                </v-row>\n                <v-divider/>\n                <v-row justify=\"end\">\n                  <v-col md=\"4\" align=\"end\">\n                    <v-btn\n                        small\n                        outlined\n                        tile\n                        class=\"mr-2 pink-button\"\n                        @click=\"resetProfile\"\n                    >\n                      重置\n                    </v-btn>\n                    <v-btn\n                        small\n                        tile\n                        class=\"mr-2 pink-button\"\n                        @click=\"saveProfile\"\n                    >\n                      保存\n                    </v-btn>\n                  </v-col>\n                </v-row>\n              </v-card>\n            </v-tab-item>\n\n            <!-- 修改密码 -->\n            <v-tab-item>\n              <v-card flat class=\"pa-3\">\n                <v-row justify=\"center\" align=\"center\">\n                  <v-col md=\"6\">\n                    <v-form ref=\"passwordForm\">\n                      <!-- 字段渲染 -->\n                      <v-container>\n                        <v-row>\n                          <v-col md=\"12\">\n                            <v-text-field\n                                label=\"旧密码\"\n                                :rules=\"passwordRules.oldPassword\"\n                                v-model=\"passwordForm.oldPassword\"\n                                type=\"password\"\n                                clearable\n                            />\n                          </v-col>\n                        </v-row>\n                        <v-row>\n                          <v-col md=\"12\">\n                            <v-text-field\n                                label=\"新密码\"\n                                :rules=\"passwordRules.newPassword\"\n                                v-model=\"passwordForm.newPassword\"\n                                id=\"newPassword\"\n                                type=\"password\"\n                                clearable\n                            />\n                          </v-col>\n                        </v-row>\n                        <v-row>\n                          <v-col md=\"12\">\n                            <v-text-field\n                                label=\"确认密码\"\n                                :rules=\"passwordRules.confirmPassword\"\n                                v-model=\"passwordForm.confirmPassword\"\n                                id=\"confirmPassword\"\n                                type=\"password\"\n                                clearable\n                            />\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-form>\n                  </v-col>\n                </v-row>\n                <v-row justify=\"end\">\n                  <v-col md=\"4\" align=\"end\">\n                    <v-btn\n                        small\n                        tile\n                        class=\"mr-2 pink-button\"\n                        @click=\"passwordUpdate\"\n                    >\n                      保存\n                    </v-btn>\n                  </v-col>\n                </v-row>\n              </v-card>\n            </v-tab-item>\n          </v-tabs>\n        </v-card>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport GeoPattern from \"geopattern\";\nimport { required } from \"@/utils/widget\";\nimport { RegionSelects, RegionText } from 'v-region'\n\nexport default {\n  name: \"business_information\",\n  components: {\n    RegionSelects,\n    RegionText\n  },\n  data() {\n    return {\n      showImage: \"\",\n      region: {\n        province: '350000',\n        city: '350100',\n        area: '350104',\n        town: ''\n      },\n      cardlines: [],\n      tabItems: [\n        { tab: \"profile\", content: \"个人设置\" },\n        { tab: \"password\", content: \"修改密码\" },\n      ],\n      usercard: \"\",\n      userInfo: {\n        user_name: \"\",\n        user_mobile: \"\",\n        user_selectAddress: {\n          province: '',\n          city: '',\n          area: '',\n          town: ''\n        },\n        user_address: \"\",\n        user_avatar: \"\",\n        user_createtime: \"\"\n      },\n      profileForm: {\n        user_name: \"\",\n        user_mobile: \"\",\n        user_address: \"\",\n        user_avatar: \"\",\n      },\n      profileRules: {\n        user_name: [required(\"用户名\")],\n        user_mobile: [\n          required(\"手机号码\"),\n          function (v) {\n            return /^1[3456789]\\d{9}$/.test(v) || `手机号码格式错误`;\n          },\n        ],\n        user_email: [required(\"地址\")],\n      },\n      passwordForm: {\n        oldPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\",\n      },\n      passwordRules: {\n        oldPassword: [required(\"密码\")],\n        newPassword: [required(\"密码\")],\n        confirmPassword: [required(\"密码\")],\n      }\n    };\n  },\n  async created() {\n    await this.initBaseInfo();\n    this.initPasswordRules();\n  },\n  methods: {\n    async fetchUserInfo() {\n      await this.axios.get('fetch_userInfo/', { params: { user_id: this.$store.state.userId } })\n        .then((response) => {\n          var ttt = response.data.user_avatar.fields.user_avatar;\n          this.userInfo = {\n            user_name: response.data.user_name,\n            user_mobile: response.data.user_mobile,\n            user_address: response.data.user_address,\n            user_avatar: (ttt !== \"\") ? 'http://127.0.0.1:8000/media/' + ttt : '',\n            user_createtime: response.data.user_createtime,\n            user_selectAddress: {\n              province: response.data.user_province,\n              city: response.data.user_city,\n              area: response.data.user_area,\n              town: ''\n            },\n          };\n          this.showImage = (ttt !== \"\") ? 'http://127.0.0.1:8000/media/' + ttt : '';\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    resetProfile() {\n      this.region = this.userInfo.user_selectAddress;\n      this.profileForm = {\n        user_name: this.userInfo.user_name,\n        user_mobile: this.userInfo.user_mobile,\n        user_address: this.userInfo.user_address,\n        user_avatar: this.userInfo.user_avatar,\n      };\n    },\n    async initBaseInfo() {\n      await this.fetchUserInfo();\n      this.usercard = GeoPattern.generate(this.userInfo.user_name, {}).toDataUrl();\n      this.resetProfile();\n      this.cardlines = [\n        { icon: \"mdi-account\", text: this.userInfo.user_name },\n        { icon: \"mdi-cellphone\", text: this.userInfo.user_mobile },\n        { icon: \"mdi-update\", text: `加入于 ${this.userInfo.user_createtime}` },\n        { icon: \"mdi-email\", text: this.userInfo.user_address },\n      ];\n    },\n    selectLogs: async function (e) {\n      console.log(e);\n      console.log(this.region.city);\n      await this.checkSelectAddr();\n    },\n    getImageFile: function (e) {\n      this.profileForm.user_avatar = e.target.files[0];\n      let img = new FileReader();\n      img.readAsDataURL(this.profileForm.user_avatar);\n      img.onload = ({ target }) => {\n        this.showImage = target.result;\n      };\n    },\n    async saveProfile() {\n      if (this.$refs.form.validate()) {\n        let formData = new FormData();\n        formData.append('user_image', this.profileForm.user_avatar);\n        const json = JSON.stringify(this.profileForm);\n        const blob = new Blob([json], { type: 'application/json' });\n        formData.append('forms', blob);\n        const json2 = JSON.stringify(this.$store.state.userId);\n        const blob2 = new Blob([json2], { type: 'application/json' });\n        formData.append('user_id', blob2);\n        const json3 = JSON.stringify(this.region);\n        const blob3 = new Blob([json3], { type: 'application/json' });\n        formData.append('selectAddr', blob3);\n        var configs = {\n          headers: { 'Content-Type': 'multipart/form-data' }\n        };\n        await this.axios.post('edit_userInfo/', formData, configs).then(response => {\n          if (response.data.msg === \"success\") {\n            this.userInfo.user_avatar = 'http://127.0.0.1:8000/media/' + response.data.image;\n            this.showImage = 'http://127.0.0.1:8000/media/' + response.data.image;\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n        await this.initBaseInfo();\n      }\n    },\n    async passwordUpdate() {\n      if (this.passwordForm.newPassword !== this.passwordForm.confirmPassword) {\n        window.alert('请保持密码一致');\n      } else if (this.passwordForm.newPassword === \"\") {\n        window.alert('密码不能为空');\n      } else {\n        await this.axios.get('edit_password/', {\n          params: {\n            old_password: this.passwordForm.oldPassword,\n            new_password: this.passwordForm.newPassword,\n            user_id: this.$store.state.userId\n          }\n        }).then((response) => {\n          if (response.data.error_num !== 0) {\n            window.alert('请重新确认原密码');\n          } else {\n            window.alert('密码修改成功');\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n    checkaddr() {\n      if (!this.region.area) return \"下拉选择省市区\";\n      return true;\n    },\n    checkNewPassword(passwordFormfield) {\n      const _this = this;\n      const getField = function () {\n        return _this.passwordForm[passwordFormfield];\n      };\n      return function (v) {\n        const field = getField();\n        const checkResult = !field || v === field;\n        if (_this.$refs.passwordForm) {\n          const targetInput = _this.$refs.passwordForm.inputs.filter(\n            (input) => input.id === passwordFormfield\n          )[0];\n          if (v === field && !targetInput.valid) {\n            targetInput.resetValidation();\n          }\n        }\n        return checkResult || `两次输入的密码不一致`;\n      };\n    },\n    async checkSelectAddr() {\n      this.profileRules = {\n        user_name: [required(\"用户名\")],\n        user_mobile: [\n          required(\"手机号码\"),\n          function (v) {\n            return /^1[3456789]\\d{9}$/.test(v) || `手机号码格式错误`;\n          },\n        ],\n        user_email: [required(\"地址\"), this.checkaddr()],\n      };\n    },\n    initPasswordRules() {\n      this.profileRules = {\n        user_name: [required(\"用户名\")],\n        user_mobile: [\n          required(\"手机号码\"),\n          function (v) {\n            return /^1[3456789]\\d{9}$/.test(v) || `手机号码格式错误`;\n          },\n        ],\n        user_email: [required(\"地址\"), this.checkaddr()],\n      };\n      this.passwordRules.newPassword = [\n        required(\"新密码\"),\n        this.checkNewPassword(\"confirmPassword\"),\n      ];\n      this.passwordRules.confirmPassword = [\n        required(\"确认密码\"),\n        this.checkNewPassword(\"newPassword\"),\n      ];\n    },\n  },\n};\n</script>\n\n<style>\n.pink-theme {\n  background-color: #ffe6f2;\n}\n.pink-card {\n  background-color: #ffcce6;\n  color: #ff99cc;\n}\n.pink-icon {\n  color: #ff66b2;\n}\n.pink-tab {\n  background-color: #ff99cc;\n  color: white;\n}\n.pink-button {\n  background-color: #ff66b2;\n  color: white;\n}\n.user-card-img {\n  opacity: 0.8 !important;\n  background-size: 100%;\n}\n.avatar-img {\n  width: 170px;\n  border-radius: 50%;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}