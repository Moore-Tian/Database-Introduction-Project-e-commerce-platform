{"ast":null,"code":"import util from './util';\nexport default {\n  name: \"login_View\",\n  data() {\n    return {\n      login: false,\n      radioVal: '用户',\n      register: true,\n      username: '',\n      password: '',\n      confirmPassword: '',\n      res: false,\n      //数据库操作返回值\n      userId: 0 //当前登录的用户\n    };\n  },\n\n  methods: {\n    getRadioVal() {},\n    async goLogin() {\n      if (!util.trim(this.username) || !util.trim(this.password)) {\n        //TODO 111\n        window.alert('账号或密码不能为空');\n        return;\n      }\n      if (this.password !== this.confirmPassword) {\n        window.alert('密码不一致，请重新输入');\n        this.password = '';\n        this.confirmPassword = '';\n      } else {\n        //把注册信息写进数据库\n        await this.addUserInfo(this.username, this.password);\n\n        //res返回值 标志是否有重名\n        if (this.res) {\n          this.register = false;\n\n          //设置当前登陆状态；用于下次打开页面的默认登录\n          window.localStorage.setItem('loginStatus', 'login');\n\n          //把用户【id】保存在vuex，便于home页面使用\n          //this.$store.commit('getUser', this.username);\n          await window.localStorage.setItem('userId', this.userId);\n          this.$store.commit('editUserId', this.userId);\n          window.alert('注册成功，确定进入网站首页');\n          await this.add_log();\n          if (this.radioVal === '用户') {\n            window.location.href = '/#/customerHome';\n          } else {\n            window.location.href = '/#/business';\n          }\n        } else {\n          window.alert('用户名重复，请再次尝试');\n          this.username = '';\n          this.password = '';\n          this.confirmPassword = '';\n        }\n      }\n    },\n    changeLogin(b1, b2) {\n      this.login = b1;\n      this.register = b2;\n    },\n    async goHome() {\n      if (!util.trim(this.username) || !util.trim(this.password)) {\n        window.alert('账号或密码不能为空');\n        return;\n      }\n      await this.searchUserInfo(this.username, this.password);\n      if (this.res) {\n        this.login = false;\n        window.localStorage.setItem('loginStatus', 'login');\n        await window.localStorage.setItem('userId', this.userId);\n        this.$store.commit('editUserId', this.userId);\n        console.log(this.userId);\n        //console.log(error);\n        await this.add_log();\n        window.alert('登录成功，进入网站首页');\n        if (this.radioVal === '用户') {\n          window.location.href = '/#/customerHome';\n        } else if (this.radioVal === '商家') {\n          window.location.href = '/#/business';\n        } else {\n          window.location.href = '/#/manager';\n        }\n      } else {\n        window.alert('账号或密码错误');\n      }\n    },\n    async addUserInfo(x1, x2) {\n      await this.axios.get('add_userInfo/', {\n        params: {\n          user_name: x1,\n          user_password: x2,\n          user_type: this.radioVal\n        }\n      }).catch(function (error) {\n        console.log(error);\n        this.res = false;\n      }).then(response => {\n        if (response.data.error_num !== 0) {\n          this.res = false;\n          console.log(response.data.msg);\n          return;\n        }\n        console.log(response.data.msg);\n        this.userId = response.data.userId;\n        this.res = true;\n      });\n    },\n    async getType() {\n      await this.axios.get('search_usertype/', {\n        params: {\n          user_id: this.$store.state.userId\n        }\n      }).catch(function (error) {\n        console.log(error);\n      }).then(response => {\n        this.radioVal = response.data.user_type;\n      });\n    },\n    async add_log() {\n      await this.axios.get('add_log/', {\n        params: {\n          user_id: this.$store.state.userId\n        }\n      }).catch(function (error) {\n        console.log(error);\n      }).then(response => {\n        console.log(response);\n      });\n    },\n    async searchUserInfo(x1, x2) {\n      await this.axios.get('search_userInfo/', {\n        params: {\n          user_name: x1,\n          user_password: x2\n        }\n      }).catch(function (error) {\n        console.log(error);\n        console.log(x1);\n        console.log(x2);\n        this.res = false;\n      }).then(response => {\n        if (response.data.error_num !== 0) {\n          this.res = false;\n          console.log(response.data.msg);\n          return;\n        }\n        this.res = true;\n        console.log(response.data);\n        this.userId = response.data.userId;\n        this.radioVal = response.data.user_type;\n      });\n    }\n  },\n  async created() {\n    //获取路由中的参数\n    if (this.$route.params.loginStatus === 'logout') {\n      window.localStorage.removeItem('loginStatus');\n      this.$store.commit('getLoginStatus', false);\n      return;\n    }\n    const loginStatus = this.$store.state.loginStatus;\n    if (loginStatus) {\n      this.login = false;\n      this.register = false;\n      await this.getType();\n      await this.add_log();\n      window.alert('您已经是登录状态');\n      if (this.radioVal === '用户') {\n        window.location.href = '/#/customerHome';\n      } else if (this.radioVal === '商家') {\n        window.location.href = '/#/business';\n      } else {\n        window.location.href = '/#/manager';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA2CA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MAAA;MACAC;IAEA;EACA;;EACAC;IACAC;IACA;MAEA;QAAA;QACAC;QACA;MACA;MACA;QACAA;QACA;QACA;MACA;QACA;QACA;;QAEA;QACA;UACA;;UAEA;UACAA;;UAEA;UACA;UACA;UACA;UACAA;UACA;UACA;YACAA;UACA;YACAA;UAAA;QACA;UACAA;UACA;UACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA;QACAD;QACA;MACA;MAEA;MAEA;QACA;QACAA;QACA;QACA;QACAE;QACA;QACA;QACAF;QAEA;UACAA;QACA;UACAA;QACA;UACAA;QAAA;MAEA;QACAA;MACA;IACA;IAEA;MACA,sCACA;QAAAG;UAAAC;UAAAC;UAAAC;QAAA;MAAA,GACAC;QACAL;QACA;MACA,GACAM;QACA;UACA;UACAN;UACA;QACA;QACAA;QACA;QACA;MACA;IAEA;IAEA;MACA;QAAAC;UAAAM;QAAA;MAAA,GACAF;QACAL;MAEA,GACAM;QAEA;MAEA;IAEA;IAGA;MACA;QAAAL;UAAAM;QAAA;MAAA,GACAF;QACAL;MAEA,GACAM;QAEAN;MAEA;IAEA;IAGA;MACA;QAAAC;UAAAC;UAAAC;QAAA;MAAA,GACAE;QACAL;QACAA;QACAA;QAIA;MACA,GACAM;QACA;UACA;UACAN;UACA;QACA;QACA;QAEAA;QACA;QACA;MAEA;IAEA;EACA;EACA;IACA;IACA;MACAF;MAEA;MACA;IACA;IAEA;IAEA;MAEA;MACA;MACA;MACA;MACAA;MACA;QACAA;MACA;QACAA;MACA;QACAA;MACA;IACA;EACA;AACA","names":["name","data","login","radioVal","register","username","password","confirmPassword","res","userId","methods","getRadioVal","window","changeLogin","console","params","user_name","user_password","user_type","catch","then","user_id"],"sourceRoot":"src/components/customer","sources":["login.vue"],"sourcesContent":["<template>\n  <v-app id=\"main_page\">\n    <div class=\"login-info\">\n        <template v-if=\"login\">\n            <form class=\"login-info-form\">\n                <p>登录界面</p><br>\n                <span>用户账号: </span><input type=\"text\" v-model=\"username\" placeholder=\"\"/><br>\n                <span>用户密码: </span><input type=\"password\" v-model=\"password\"/><br><br>\n                <input class=\"submit\" type=\"button\" @click=\"goHome\" value=\"提交\">\n                <input class=\"submit\" type=\"button\" @click=\"changeLogin(false, true)\" value=\"前往注册\">\n            </form>\n\n        </template>\n        <template v-if=\"register\">\n            <form class=\"login-info-form\">\n                <p>注册界面</p><br>\n                <span>用户账号: </span><input type=\"text\" v-model=\"username\" placeholder=\"\"/><br>\n                <span>用户密码: </span><input type=\"password\" v-model=\"password\"/><br>\n                <span>确认密码: </span><input type=\"password\" v-model=\"confirmPassword\"/><br><br>\n              <v-row justify=\"center\">\n\n    <label><input v-model=\"radioVal\" type=\"radio\" value=\"用户\" @change=\"getRadioVal\">用户</label>\n    <label><input v-model=\"radioVal\" type=\"radio\" value=\"商家\" @change=\"getRadioVal\">商家</label>\n\n\n\n                <!--\n                <v-radio-group class=\"choose\" justify=\"center\" v-model=\"row\"  row :mandatory=\"false\" @change=\"selectID\">\n                  <v-radio label=\"用户\" value=\"radio-1\" v-model=\"register_type1\"></v-radio>\n                  <v-radio label=\"商家\" value=\"radio-2\" v-model=\"register_type2\"></v-radio>\n                  <v-radio label=\"管理员\" value=\"radio-3\" v-model=\"register_type3\"></v-radio>\n                </v-radio-group>\n                -->\n              </v-row><br><br>\n                <input class=\"submit\" type=\"button\" @click=\"goLogin\" value=\"提交\">\n                <input class=\"submit\" type=\"button\" @click=\"changeLogin(true, false)\" value=\"已有账号\">\n            </form>\n        </template>\n    </div>\n    </v-app>\n</template>\n\n<script>\n    import util from './util';\n    export default {\n        name: \"login_View\",\n        data(){\n            return {\n                login: false,\n              radioVal:'用户',\n                register: true,\n                username: '',\n                password: '',\n                confirmPassword: '',\n                res: false,  //数据库操作返回值\n                userId: 0  //当前登录的用户\n\n            }\n        },\n        methods: {\n          getRadioVal(){},\n           async  goLogin(){\n\n                if(!util.trim(this.username) || !util.trim(this.password) ){ //TODO 111\n                    window.alert('账号或密码不能为空');\n                    return;\n                }\n                if(this.password !== this.confirmPassword){\n                    window.alert('密码不一致，请重新输入');\n                    this.password = '';\n                    this.confirmPassword = '';\n                }else{\n                  //把注册信息写进数据库\n                  await this.addUserInfo(this.username,this.password)\n\n                  //res返回值 标志是否有重名\n                  if(this.res) {\n                    this.register = false;\n\n                    //设置当前登陆状态；用于下次打开页面的默认登录\n                    window.localStorage.setItem('loginStatus', 'login');\n\n                    //把用户【id】保存在vuex，便于home页面使用\n                    //this.$store.commit('getUser', this.username);\n                    await window.localStorage.setItem('userId', this.userId);\n                    this.$store.commit('editUserId', this.userId);\n                    window.alert('注册成功，确定进入网站首页');\n                    await this.add_log()\n                    if(this.radioVal==='用户'){\n                    window.location.href = '/#/customerHome';\n                  }else {\n                  window.location.href = '/#/business';}\n                  } else {\n                    window.alert('用户名重复，请再次尝试');\n                    this.username = '';\n                    this.password = '';\n                    this.confirmPassword = ''\n                  }\n                }\n          },\n          changeLogin(b1, b2){\n              this.login = b1;\n              this.register = b2;\n          },\n          async goHome(){\n              if(!util.trim(this.username) || !util.trim(this.password) ){\n                  window.alert('账号或密码不能为空');\n                  return;\n              }\n\n              await this.searchUserInfo(this.username,this.password)\n\n              if(this.res){\n                  this.login = false;\n                  window.localStorage.setItem('loginStatus', 'login');\n                  await window.localStorage.setItem('userId', this.userId);\n                  this.$store.commit('editUserId', this.userId);\n                  console.log(this.userId);\n                  //console.log(error);\n                await this.add_log()\n                  window.alert('登录成功，进入网站首页');\n\n                  if(this.radioVal==='用户'){\n                    window.location.href = '/#/customerHome';\n                  }else if(this.radioVal==='商家'){\n                    window.location.href = '/#/business';\n                  }else {\n                  window.location.href = '/#/manager';}\n\n              }else{\n                  window.alert('账号或密码错误');\n              }\n          },\n\n          async addUserInfo (x1,x2) {\n            await this.axios.get('add_userInfo/',\n                {params:{user_name: x1,user_password: x2,user_type:this.radioVal}})\n              .catch(function (error) {\n                  console.log(error);\n                  this.res=false\n              })\n              .then((response) => {\n                if(response.data.error_num!==0){\n                  this.res=false\n                  console.log(response.data.msg);\n                  return\n                }\n                  console.log(response.data.msg);\n                  this.userId = response.data.userId\n                this.res=true\n              })\n              ;\n          },\n\n          async getType(){\n            await this.axios.get('search_usertype/',{params:{user_id:this.$store.state.userId }})\n              .catch(function (error) {\n                  console.log(error);\n\n              })\n              .then((response) => {\n\n                this.radioVal=response.data.user_type\n\n              })\n              ;\n          }\n          ,\n\n          async add_log(){\n            await this.axios.get('add_log/',{params:{user_id:this.$store.state.userId }})\n              .catch(function (error) {\n                  console.log(error);\n\n              })\n              .then((response) => {\n\n                console.log(response);\n\n              })\n              ;\n          }\n          ,\n\n          async searchUserInfo (x1,x2) {\n            await this.axios.get('search_userInfo/',{params:{user_name: x1,user_password: x2}})\n              .catch(function (error) {\n                  console.log(error);\n                  console.log(x1);\n                  console.log(x2);\n\n\n\n                  this.res=false\n              })\n              .then((response) => {\n                if(response.data.error_num!==0){\n                  this.res=false\n                  console.log(response.data.msg);\n                  return\n                }\n                this.res=true\n\n                console.log(response.data);\n                this.userId = response.data.userId\n                this.radioVal=response.data.user_type\n\n              })\n              ;\n          }\n        },\n        async created(){\n            //获取路由中的参数\n            if(this.$route.params.loginStatus === 'logout'){\n                window.localStorage.removeItem('loginStatus')\n\n                this.$store.commit('getLoginStatus', false);\n                return;\n            }\n\n            const loginStatus = this.$store.state.loginStatus;\n\n            if(loginStatus){\n\n                this.login = false;\n                this.register = false;\n                await this.getType()\n              await this.add_log()\n                window.alert('您已经是登录状态')\n                if(this.radioVal==='用户'){\n                    window.location.href = '/#/customerHome';\n                  }else if(this.radioVal==='商家'){\n                    window.location.href = '/#/business';\n                  }else {\n                  window.location.href = '/#/manager';\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n.choose{\n  margin: auto;\n  position: absolute;\n}\n\n.textinput{\n  outline-style: none ;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  padding: 6px;\n  width: 300px;\n  font-size: 14px;\n}\n\n.login-info{\n  height: 100%;\n  width: 100%;\n  text-align: center;\n}\n\n.login-info-form{\n  position: relative;\n  top: 100px;\n}\n\np{\n  font-size: 26px;\n  color: #ff69b4; /* Pink color */\n}\n\n.submit{\n  width: 200px; /* 设置按钮宽度 */\n  height: 30px; /* 设置按钮高度 */\n  color: white; /* 字体颜色 */\n  background-color: #ff69b4; /* Pink color */\n  border-radius: 3px; /* 让按钮变得圆滑一点 */\n  border-width: 0; /* 消去按钮丑的边框 */\n  margin: 0;\n  outline: none; /* 取消轮廓 */\n  font-size: 17px; /* 设置字体大小 */\n  text-align: center; /* 字体居中 */\n  cursor: pointer; /* 设置鼠标箭头手势 */\n}\n\nspan{\n  font-size: 16px;\n  color: #ff69b4; /* Pink color */\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}