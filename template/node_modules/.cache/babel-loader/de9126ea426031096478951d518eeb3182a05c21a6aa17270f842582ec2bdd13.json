{"ast":null,"code":"import { getHomePanels, getWeekAnalysis } from \"@/api/goods\";\nimport LineChart from \"@/components/business/LineChart\";\nimport htmlToPdf from \"@/components/business/echartstopdf\";\nimport { RegionSelects } from \"v-region\";\nimport util from \"@/components/customer/util\";\nimport { read, utils } from \"xlsx\";\nvar lineChartData = {\n  purchases: [100, 120, 161, 134, 105, 160, 165],\n  sales: [120, 82, 91, 154, 162, 140, 145],\n  expenses: [110, 70, 150, 50, 46, 80, 111],\n  profits: [99, 55, 110, 67, 88, 44, 76]\n}; //todo\n\nvar DEFAULT_PANELS = [{\n  icon: \"mdi-dolly\",\n  color: \"pink\",\n  title: \"商品\",\n  text: \"4(件)\"\n}, {\n  icon: \"mdi-cart-arrow-up\",\n  color: \"pink\",\n  title: \"总销售额\",\n  text: \"1100.00（元）\"\n}, {\n  icon: \"mdi-cash-refund\",\n  color: \"pink\",\n  title: \"支出\",\n  text: \"568.20（元）\"\n}, {\n  icon: \"mdi-currency-cny\",\n  color: \"pink\",\n  title: \"利润\",\n  text: \"-368.20（元）\"\n}];\nvar now = new Date(); //当前日期\nvar nowDayOfWeek = now.getDay() == 0 ? 7 : now.getDay(); //今天本周的第几天\nvar nowDay = now.getDate(); //当前日\nvar nowMonth = now.getMonth(); //当前月\nvar nowYear = now.getFullYear(); //当前年\n\n//获得本周的开端日期\nfunction getWeekStartDate(offset, weekday) {\n  let weekStartDate = new Date(nowYear, nowMonth, nowDay - nowDayOfWeek + weekday + 7 * offset);\n  return weekStartDate;\n}\nfunction formatDate(date) {\n  let myyear = date.getFullYear();\n  let mymonth = date.getMonth() + 1;\n  let myweekday = date.getDate();\n  if (mymonth < 10) {\n    mymonth = \"0\" + mymonth;\n  }\n  if (myweekday < 10) {\n    myweekday = \"0\" + myweekday;\n  }\n  return myyear + \"\" + mymonth + \"\" + myweekday;\n}\nfunction sum(arr) {\n  return arr.reduce(function (total, value) {\n    return total + value;\n  });\n}\n//导入商品简介组件\n\nexport default {\n  name: \"business_saledata\",\n  components: {\n    LineChart,\n    RegionSelects\n  },\n  data: () => ({\n    Title: \"导出本周数据\",\n    json_fields: {\n      采购额: \"purchases\",\n      销售额: \"sales\",\n      支出: \"expenses\",\n      利润: \"profit\"\n    },\n    DetailsForm: [{\n      purchases: lineChartData.purchases[0],\n      sales: lineChartData.sales[0],\n      expenses: lineChartData.expenses[0],\n      profit: lineChartData.profits[0]\n    }, {\n      purchases: lineChartData.purchases[1],\n      sales: lineChartData.sales[1],\n      expenses: lineChartData.expenses[1],\n      profit: lineChartData.profits[1]\n    }],\n    business_name: \"商家lll\",\n    lineChartData,\n    indicators: DEFAULT_PANELS,\n    offset: 0,\n    lineChartIndicators: [\"采购额\", \"销售额\", \"支出\", \"利润\"],\n    dimension: [\"周一\\n\" + formatDate(getWeekStartDate(0, 1)), \"周二\\n\" + formatDate(getWeekStartDate(0, 2)), \"周三\\n\" + formatDate(getWeekStartDate(0, 3)), \"周四\\n\" + formatDate(getWeekStartDate(0, 4)), \"周五\\n\" + formatDate(getWeekStartDate(0, 5)), \"周六\\n\" + formatDate(getWeekStartDate(0, 6)), \"周日\\n\" + formatDate(getWeekStartDate(0, 7))],\n    chooseRegion: [],\n    list: [],\n    page: 1,\n    size: 20,\n    chartLoaded: false,\n    brands: [],\n    colors: [],\n    filterBrand: null,\n    filterColor: null,\n    order: \"\"\n  }),\n  computed: {\n    filteredAndOrderedList() {\n      let filteredList = this.list.filter(item => {\n        let brandMatch = this.filterBrand === null || item.fields.product_brand === this.filterBrand;\n        let colorMatch = this.filterColor === null || item.fields.product_color === this.filterColor;\n        return brandMatch && colorMatch;\n      });\n      if (this.order === \"sales\") {\n        filteredList.sort((a, b) => b.fields.product_sales - a.fields.product_sales);\n      } else if (this.order === \"cost-asc\") {\n        filteredList.sort((a, b) => a.fields.product_cost - b.fields.product_cost);\n      } else if (this.order === \"cost-desc\") {\n        filteredList.sort((a, b) => b.fields.product_cost - a.fields.product_cost);\n      }\n      return filteredList;\n    }\n  },\n  methods: {\n    getPanelData() {\n      return {\n        总销售额: sum(this.lineChartData.sales).toFixed(2) + \"（元）\",\n        支出: sum(this.lineChartData.expenses).toFixed(2) + \"（元）\",\n        利润: sum(this.lineChartData.profits).toFixed(2) + \"（元）\"\n      };\n    },\n    getIndicators() {\n      let panels = this.getPanelData();\n      this.indicators.forEach(item => {\n        let key = item.title;\n        if (panels[key]) item.text = panels[key];\n      });\n    },\n    rightPage() {\n      this.offset++;\n      this.changePage();\n    },\n    leftPage() {\n      this.offset--;\n      this.changePage();\n    },\n    async changePage() {\n      this.chartLoaded = false;\n      let res = await getWeekAnalysis(this.offset);\n      let result = res.data.data;\n      this.lineChartData.purchases = result.purchases;\n      this.lineChartData.sales = result.sales;\n      this.lineChartData.expenses = result.expenses;\n      this.lineChartData.profits = result.profits;\n      this.dimension = result.dimension;\n      this.getIndicators();\n      this.chartLoaded = true;\n    },\n    printOut() {\n      var element = document.getElementById(\"xxx\");\n      htmlToPdf.getPdf(element);\n    },\n    async selectLogs(val) {\n      if (!val.length) return;\n      this.list = await this.getlist();\n      let brandSet = new Set();\n      let colorSet = new Set();\n      this.list.forEach(item => {\n        brandSet.add(item.fields.product_brand);\n        colorSet.add(item.fields.product_color);\n      });\n      this.brands = Array.from(brandSet);\n      this.colors = Array.from(colorSet);\n    },\n    async getlist() {\n      let res = await getHomePanels({\n        region: this.chooseRegion\n      });\n      return res.data.results;\n    },\n    handleFilterBrand(brand) {\n      this.filterBrand = this.filterBrand === brand ? null : brand;\n    },\n    handleFilterColor(color) {\n      this.filterColor = this.filterColor === color ? null : color;\n    },\n    handleOrderDefault() {\n      this.order = \"\";\n    },\n    handleOrderSales() {\n      this.order = this.order === \"sales\" ? \"\" : \"sales\";\n    },\n    handleOrderCost() {\n      if (this.order === \"cost-desc\") {\n        this.order = \"cost-asc\";\n      } else if (this.order === \"cost-asc\") {\n        this.order = \"\";\n      } else {\n        this.order = \"cost-desc\";\n      }\n    },\n    async ttt(pk) {\n      await this.selectLogs(this.chooseRegion);\n      this.list = this.list.filter(item => item.pk === pk);\n    }\n  },\n  created() {\n    this.selectLogs([]);\n    this.getIndicators();\n    this.changePage();\n  }\n};","map":{"version":3,"mappings":"AA0JA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;EACAC;EACAC;AACA;;AAEA,sBACA;EAAAC;EAAAC;EAAAC;EAAAC;AAAA,GACA;EACAH;EACAC;EACAC;EACAC;AACA,GACA;EACAH;EACAC;EACAC;EACAC;AACA,GACA;EACAH;EACAC;EACAC;EACAC;AACA,EACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;EACA,6BACAC,SACAC,UACAC,6CACA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;IACAC;EACA;EACA;IACAC;EACA;EACA;AACA;AAEA;EACA;IACA;EACA;AACA;AACA;;AAEA;EACAC;EACAC;IACAC;IACAC;EACA;EACAC;IACAC;IAEAC;MACAC;MACAC;MACAC;MACAC;IACA;IACAC,cACA;MACAxB;MACAC;MACAC;MACAuB;IACA,GACA;MACAzB;MACAC;MACAC;MACAuB;IACA,EACA;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,YACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,4CACA;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACAC;MACA;QACA,iBACA;QACA,iBACA;QACA;MACA;MAEA;QACAC;MACA;QACAA;MACA;QACAA;MACA;MACA;IACA;EACA;EACAC;IACAC;MACA;QACAC;QACAzB;QACAC;MACA;IACA;IACAyB;MACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACAC;IACA;IACA;MACA;MACA;MACA;MACA;MACA;QACAC;QACAC;MACA;MACA;MACA;IACA;IACA;MACA;QAAAC;MAAA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACA;MACA;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;AACA","names":["purchases","sales","expenses","profits","icon","color","title","text","nowYear","nowMonth","nowDay","mymonth","myweekday","name","components","LineChart","RegionSelects","data","Title","json_fields","采购额","销售额","支出","利润","DetailsForm","profit","business_name","lineChartData","indicators","offset","lineChartIndicators","dimension","chooseRegion","list","page","size","chartLoaded","brands","colors","filterBrand","filterColor","order","computed","filteredAndOrderedList","filteredList","methods","getPanelData","总销售额","getIndicators","rightPage","leftPage","printOut","htmlToPdf","brandSet","colorSet","region","handleFilterBrand","handleFilterColor","handleOrderDefault","handleOrderSales","handleOrderCost","created"],"sourceRoot":"src/view/business","sources":["business_saledata.vue"],"sourcesContent":["<template>\n  <div class=\"height-100pc mx-3 goods-home\">\n    <v-row justify=\"center\" class=\"my-3\">\n      <template v-for=\"(item, itemIndex) in indicators\">\n        <v-col :key=\"itemIndex\" cols=\"12\" md=\"3\">\n          <v-hover v-slot=\"{ hover }\">\n            <v-card\n              class=\"item-card pink-theme-card\"\n              :elevation=\"hover ? 12 : 2\"\n              :class=\"{ 'on-hover': hover }\"\n            >\n              <v-row class=\"mx-3\">\n                <v-col md=\"6\" class=\"align-center\">\n                  <v-icon :color=\"item.color\" size=\"100\">{{ item.icon }}</v-icon>\n                </v-col>\n                <v-col md=\"6\" class=\"align-center justify-center flex-column\">\n                  <div class=\"text-h5 text-center\">{{ item.title }}</div>\n                  <div class=\"text-h7 text-center\">{{ item.text }}</div>\n                </v-col>\n              </v-row>\n            </v-card>\n          </v-hover>\n        </v-col>\n      </template>\n    </v-row>\n\n    <v-btn class=\"ma-2 pink-theme-btn\" @click=\"printOut\">导出pdf</v-btn>\n    <template>\n      <download-excel\n        class=\"export-excel-wrapper\"\n        :data=\"DetailsForm\"\n        :fields=\"json_fields\"\n        :header=\"Title\"\n        name=\"导出销量.xls\"\n      >\n        <el-button type=\"success\">导出excel</el-button>\n      </download-excel>\n    </template>\n    <br><br>\n    <div>\n      <region-selects\n        v-model=\"chooseRegion\"\n        :town=\"false\"\n        @change=\"selectLogs\"\n        clearable\n      />\n    </div>\n\n    <div>\n      <v-card class=\"mt-9 pink-theme-card\" v-if=\"chartLoaded\">\n        <v-row>\n          <v-btn class=\"ma-2 pink-theme-btn\" @click=\"leftPage\">\n            <v-icon color=\"white\">mdi-arrow-left</v-icon>\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn class=\"ma-2 pink-theme-btn\" @click=\"rightPage\">\n            <v-icon color=\"white\">mdi-arrow-right</v-icon>\n          </v-btn>\n        </v-row>\n        <v-row class=\"ml-3\">\n          周业务量\n        </v-row>\n        <line-chart\n          id=\"xxx\"\n          width=\"98%\"\n          :chart-data=\"lineChartData\"\n          :indicators=\"lineChartIndicators\"\n          :dimension=\"dimension\"\n        ></line-chart>\n      </v-card>\n    </div>\n\n    <div v-show=\"list.length\">\n      <div class=\"list-control\">\n        <div class=\"list-control-filter\">\n          <span>品牌:</span>\n          <span\n            class=\"list-control-filter-item\"\n            :class=\"{ on: item === filterBrand }\"\n            v-for=\"item in brands\"\n            :key=\"item.index\"\n            @click=\"handleFilterBrand(item)\"\n            >{{ item }}</span\n          >\n        </div>\n        <div class=\"list-control-filter\">\n          <span>颜色:</span>\n          <span\n            class=\"list-control-filter-item\"\n            :class=\"{ on: item === filterColor }\"\n            v-for=\"item in colors\"\n            :key=\"item.index\"\n            @click=\"handleFilterColor(item)\"\n            >{{ item }}</span\n          >\n        </div>\n\n        <div class=\"list-control-order\">\n          <span>排序:</span>\n          <span\n            class=\"list-control-order-item\"\n            :class=\"{ on: order === '' }\"\n            @click=\"handleOrderDefault\"\n            >默认</span\n          >\n          <span\n            class=\"list-control-order-item\"\n            :class=\"{ on: order === 'sales' }\"\n            @click=\"handleOrderSales\"\n            >\n            销量\n            <template v-if=\"order === 'sales'\">↓</template>\n          </span>\n          <span\n            class=\"list-control-order-item\"\n            :class=\"{ on: order.indexOf('cost') > -1 }\"\n            @click=\"handleOrderCost\"\n            >\n            价格\n            <template v-if=\"order === 'cost-desc'\">↓</template>\n            <template v-if=\"order === 'cost-asc'\">↑</template>\n          </span>\n        </div>\n      </div>\n      <div class=\"productsList\">\n        <div\n          class=\"product\"\n          v-for=\"item in filteredAndOrderedList\"\n          :key=\"item.fields.id\"\n        >\n          <img\n            :src=\"`http://127.0.0.1:8000/media/${item.fields.product_image}`\"\n            alt=\"\"\n            height=\"200px\"\n          />\n          <h4>{{ item.fields.product_name }}</h4>\n          <v-btn @click=\"ttt(item.pk)\">{{ 筛选显示 }}</v-btn>\n          <h4>销量{{ item.fields.product_sales }}</h4>\n          <div\n            class=\"product-color\"\n            :style=\"{ background: ccolors[item.fields.product_color] }\"\n          ></div>\n          <div class=\"product-cost\">￥ {{ item.fields.product_cost }}</div>\n        </div>\n      </div>\n\n      <div class=\"product-not-found\" v-show=\"!filteredAndOrderedList.length\">\n        暂无相关商品\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getHomePanels, getWeekAnalysis } from \"@/api/goods\";\nimport LineChart from \"@/components/business/LineChart\";\nimport htmlToPdf from \"@/components/business/echartstopdf\";\nimport { RegionSelects } from \"v-region\";\nimport util from \"@/components/customer/util\";\nimport { read, utils } from \"xlsx\";\n\nvar lineChartData = {\n  purchases: [100, 120, 161, 134, 105, 160, 165],\n  sales: [120, 82, 91, 154, 162, 140, 145],\n  expenses: [110, 70, 150, 50, 46, 80, 111],\n  profits: [99, 55, 110, 67, 88, 44, 76],\n}; //todo\n\nvar DEFAULT_PANELS = [\n  { icon: \"mdi-dolly\", color: \"pink\", title: \"商品\", text: \"4(件)\" },\n  {\n    icon: \"mdi-cart-arrow-up\",\n    color: \"pink\",\n    title: \"总销售额\",\n    text: \"1100.00（元）\",\n  },\n  {\n    icon: \"mdi-cash-refund\",\n    color: \"pink\",\n    title: \"支出\",\n    text: \"568.20（元）\",\n  },\n  {\n    icon: \"mdi-currency-cny\",\n    color: \"pink\",\n    title: \"利润\",\n    text: \"-368.20（元）\",\n  },\n];\n\nvar now = new Date(); //当前日期\nvar nowDayOfWeek = now.getDay() == 0 ? 7 : now.getDay(); //今天本周的第几天\nvar nowDay = now.getDate(); //当前日\nvar nowMonth = now.getMonth(); //当前月\nvar nowYear = now.getFullYear(); //当前年\n\n//获得本周的开端日期\nfunction getWeekStartDate(offset, weekday) {\n  let weekStartDate = new Date(\n    nowYear,\n    nowMonth,\n    nowDay - nowDayOfWeek + weekday + 7 * offset\n  );\n  return weekStartDate;\n}\n\nfunction formatDate(date) {\n  let myyear = date.getFullYear();\n  let mymonth = date.getMonth() + 1;\n  let myweekday = date.getDate();\n  if (mymonth < 10) {\n    mymonth = \"0\" + mymonth;\n  }\n  if (myweekday < 10) {\n    myweekday = \"0\" + myweekday;\n  }\n  return myyear + \"\" + mymonth + \"\" + myweekday;\n}\n\nfunction sum(arr) {\n  return arr.reduce(function (total, value) {\n    return total + value;\n  });\n}\n//导入商品简介组件\n\nexport default {\n  name: \"business_saledata\",\n  components: {\n    LineChart,\n    RegionSelects,\n  },\n  data: () => ({\n    Title: \"导出本周数据\",\n\n    json_fields: {\n      采购额: \"purchases\",\n      销售额: \"sales\",\n      支出: \"expenses\",\n      利润: \"profit\",\n    },\n    DetailsForm: [\n      {\n        purchases: lineChartData.purchases[0],\n        sales: lineChartData.sales[0],\n        expenses: lineChartData.expenses[0],\n        profit: lineChartData.profits[0],\n      },\n      {\n        purchases: lineChartData.purchases[1],\n        sales: lineChartData.sales[1],\n        expenses: lineChartData.expenses[1],\n        profit: lineChartData.profits[1],\n      },\n    ],\n    business_name: \"商家lll\",\n    lineChartData,\n    indicators: DEFAULT_PANELS,\n    offset: 0,\n    lineChartIndicators: [\"采购额\", \"销售额\", \"支出\", \"利润\"],\n    dimension: [\n      \"周一\\n\" + formatDate(getWeekStartDate(0, 1)),\n      \"周二\\n\" + formatDate(getWeekStartDate(0, 2)),\n      \"周三\\n\" + formatDate(getWeekStartDate(0, 3)),\n      \"周四\\n\" + formatDate(getWeekStartDate(0, 4)),\n      \"周五\\n\" + formatDate(getWeekStartDate(0, 5)),\n      \"周六\\n\" + formatDate(getWeekStartDate(0, 6)),\n      \"周日\\n\" + formatDate(getWeekStartDate(0, 7)),\n    ],\n    chooseRegion: [],\n    list: [],\n    page: 1,\n    size: 20,\n    chartLoaded: false,\n    brands: [],\n    colors: [],\n    filterBrand: null,\n    filterColor: null,\n    order: \"\",\n  }),\n  computed: {\n    filteredAndOrderedList() {\n      let filteredList = this.list.filter((item) => {\n        let brandMatch =\n          this.filterBrand === null || item.fields.product_brand === this.filterBrand;\n        let colorMatch =\n          this.filterColor === null || item.fields.product_color === this.filterColor;\n        return brandMatch && colorMatch;\n      });\n\n      if (this.order === \"sales\") {\n        filteredList.sort((a, b) => b.fields.product_sales - a.fields.product_sales);\n      } else if (this.order === \"cost-asc\") {\n        filteredList.sort((a, b) => a.fields.product_cost - b.fields.product_cost);\n      } else if (this.order === \"cost-desc\") {\n        filteredList.sort((a, b) => b.fields.product_cost - a.fields.product_cost);\n      }\n      return filteredList;\n    },\n  },\n  methods: {\n    getPanelData() {\n      return {\n        总销售额: sum(this.lineChartData.sales).toFixed(2) + \"（元）\",\n        支出: sum(this.lineChartData.expenses).toFixed(2) + \"（元）\",\n        利润: sum(this.lineChartData.profits).toFixed(2) + \"（元）\",\n      };\n    },\n    getIndicators() {\n      let panels = this.getPanelData();\n      this.indicators.forEach((item) => {\n        let key = item.title;\n        if (panels[key]) item.text = panels[key];\n      });\n    },\n    rightPage() {\n      this.offset++;\n      this.changePage();\n    },\n    leftPage() {\n      this.offset--;\n      this.changePage();\n    },\n    async changePage() {\n      this.chartLoaded = false;\n      let res = await getWeekAnalysis(this.offset);\n      let result = res.data.data;\n      this.lineChartData.purchases = result.purchases;\n      this.lineChartData.sales = result.sales;\n      this.lineChartData.expenses = result.expenses;\n      this.lineChartData.profits = result.profits;\n      this.dimension = result.dimension;\n      this.getIndicators();\n      this.chartLoaded = true;\n    },\n    printOut() {\n      var element = document.getElementById(\"xxx\");\n      htmlToPdf.getPdf(element);\n    },\n    async selectLogs(val) {\n      if (!val.length) return;\n      this.list = await this.getlist();\n      let brandSet = new Set();\n      let colorSet = new Set();\n      this.list.forEach((item) => {\n        brandSet.add(item.fields.product_brand);\n        colorSet.add(item.fields.product_color);\n      });\n      this.brands = Array.from(brandSet);\n      this.colors = Array.from(colorSet);\n    },\n    async getlist() {\n      let res = await getHomePanels({ region: this.chooseRegion });\n      return res.data.results;\n    },\n    handleFilterBrand(brand) {\n      this.filterBrand = this.filterBrand === brand ? null : brand;\n    },\n    handleFilterColor(color) {\n      this.filterColor = this.filterColor === color ? null : color;\n    },\n    handleOrderDefault() {\n      this.order = \"\";\n    },\n    handleOrderSales() {\n      this.order = this.order === \"sales\" ? \"\" : \"sales\";\n    },\n    handleOrderCost() {\n      if (this.order === \"cost-desc\") {\n        this.order = \"cost-asc\";\n      } else if (this.order === \"cost-asc\") {\n        this.order = \"\";\n      } else {\n        this.order = \"cost-desc\";\n      }\n    },\n    async ttt(pk) {\n      await this.selectLogs(this.chooseRegion);\n      this.list = this.list.filter((item) => item.pk === pk);\n    },\n  },\n  created() {\n    this.selectLogs([]);\n    this.getIndicators();\n    this.changePage();\n  },\n};\n</script>\n\n<style scoped>\n.height-100pc {\n  height: 100%;\n}\n\n.goods-home {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.item-card {\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.on-hover {\n  transform: scale(1.05);\n}\n\n.text-h5 {\n  font-size: 1.25rem;\n  font-weight: bold;\n}\n\n.text-h7 {\n  font-size: 1rem;\n  color: gray;\n}\n\n.pink-theme-card {\n  background-color: #fce4ec;\n  color: #880e4f;\n}\n\n.pink-theme-btn {\n  background-color: #f48fb1;\n  color: white;\n}\n\n.list-control {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.list-control-filter,\n.list-control-order {\n  display: flex;\n  align-items: center;\n}\n\n.list-control-filter-item,\n.list-control-order-item {\n  cursor: pointer;\n  margin-left: 10px;\n  padding: 5px;\n  border: 1px solid transparent;\n  transition: all 0.2s ease;\n}\n\n.list-control-filter-item.on,\n.list-control-order-item.on {\n  border-color: #f48fb1;\n  color: #f48fb1;\n}\n\n.productsList {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n}\n\n.product {\n  background-color: #fff;\n  border: 1px solid #f0f0f0;\n  padding: 20px;\n  border-radius: 5px;\n  width: calc(25% - 20px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  text-align: center;\n}\n\n.product h4 {\n  margin: 10px 0;\n}\n\n.product img {\n  max-width: 100%;\n  margin-bottom: 10px;\n}\n\n.product-color {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin: 0 auto 10px;\n}\n\n.product-cost {\n  font-size: 1.2rem;\n  font-weight: bold;\n}\n\n.product-not-found {\n  text-align: center;\n  font-size: 1.5rem;\n  color: gray;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}