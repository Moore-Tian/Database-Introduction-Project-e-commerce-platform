{"ast":null,"code":"//导入本地数据\n//import product_data from './product.js';\n\nexport default {\n  data() {\n    return {\n      //获取路由中的参数\n      id: parseInt(this.$route.params.id),\n      product: null,\n      product_goods: 0,\n      begood: true,\n      bestar: true,\n      shop_stars: 0\n    };\n  },\n  methods: {\n    async getProductLikes() {\n      await this.axios.get('get_product_likes/', {\n        params: {\n          product_id: this.id\n        }\n      }).then(response => {\n        console.log(response);\n        this.product_goods = response.data.goods;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      await this.axios.get('get_shop_stars/', {\n        params: {\n          business_id: this.product.fields.product_business\n        }\n      }).then(response => {\n        console.log(response);\n        this.shop_stars = response.data.stars;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async changeGood() {\n      if (this.begood) {\n        this.product_goods -= 1;\n      } else {\n        this.product_goods += 1;\n      }\n      this.begood = !this.begood;\n      await this.axios.get('toggle_user_like_to_product/', {\n        params: {\n          user_id: this.$store.state.userId,\n          product_id: this.id\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async changeStar() {\n      if (this.bestar) {\n        this.shop_stars -= 1;\n      } else {\n        this.shop_stars += 1;\n      }\n      this.bestar = !this.bestar;\n      await this.axios.get('toggle_user_star_to_shop/', {\n        params: {\n          user_id: this.$store.state.userId,\n          business_id: this.product.fields.product_business\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async initUserToProduct() {\n      await this.axios.get('get_user_like_to_product/', {\n        params: {\n          user_id: this.$store.state.userId,\n          product_id: this.id\n        }\n      }).then(response => {\n        console.log(response);\n        //this.list = response.data.list\n        if (response.data.good === 'good') {\n          this.begood = true;\n        } else {\n          this.begood = false;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      await this.axios.get('get_user_star_to_shop/', {\n        params: {\n          user_id: this.$store.state.userId,\n          business_id: this.product.fields.product_business\n        }\n      }).then(response => {\n        console.log(response);\n        //this.list = response.data.list\n        if (response.data.star === 'star') {\n          this.bestar = true;\n        } else {\n          this.bestar = false;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async getProduct(x1) {\n      await this.axios.get('fetch_product/', {\n        params: {\n          product_id: x1\n        }\n      }).then(response => {\n        console.log(response);\n        this.product = response.data.product;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    async handleAddCart() {\n      await this.axios.get('add_to_cart/', {\n        params: {\n          user_id: this.$store.state.userId,\n          product_id: this.id\n        }\n      }).then(response => {\n        console.log(response);\n        //this.list = response.data.list\n        window.alert(\"添加成功\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  },\n  async created() {\n    //初始化数据\n    console.log(\"detailview\");\n    console.log(this.id);\n    await this.getProduct(this.id);\n    console.log(\"detailviewend\");\n    console.log(this.product);\n    await this.initUserToProduct();\n    await this.getProductLikes();\n  },\n  async mounted() {\n    //初始化数据\n    console.log(\"11detailview\");\n    console.log(this.id);\n    await this.getProduct(this.id);\n    console.log(\"11detailviewend\");\n    console.log(this.product);\n  }\n};","map":{"version":3,"mappings":"AA8DA;AACA;;AAEA;EACAA;IACA;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA,2CACA;QAAAC;UAAAC;QAAA;MAAA,GACAC;QACAC;QACA;MAEA,GACAC;QACAD;MACA;MAEA,wCACA;QAAAH;UAAAK;QAAA;MAAA,GACAH;QACAC;QACA;MAEA,GACAC;QACAD;MACA;IACA;IACA;MACA;QACA;MACA;QACA;MACA;MACA;MAEA,qDACA;QAAAH;UAAAM;UAAAL;QAAA;MAAA,GACAC;QACAC;MAEA,GACAC;QACAD;MACA;IACA;IACA;MACA;QACA;MACA;QACA;MACA;MACA;MAEA,kDACA;QAAAH;UAAAM;UAAAD;QAAA;MAAA,GACAH;QACAC;MAEA,GACAC;QACAD;MACA;IACA;IACA;MACA,kDACA;QAAAH;UAAAM;UAAAL;QAAA;MAAA,GACAC;QACAC;QACA;QACA;UACA;QACA;UACA;QACA;MAEA,GACAC;QACAD;MACA;MAEA,+CACA;QAAAH;UAAAM;UAAAD;QAAA;MAAA,GACAH;QACAC;QACA;QACA;UACA;QACA;UACA;QACA;MAEA,GACAC;QACAD;MACA;IACA;IAGA;MACA;QAAAH;UAAAC;QAAA;MAAA,GACAC;QACAC;QACA;MACA,GACAC;QACAD;MAEA;IACA;IACA;MAEA,qCACA;QAAAH;UAAAM;UAAAL;QAAA;MAAA,GACAC;QACAC;QACA;QACAI;MACA,GACAH;QACAD;MACA;IACA;EACA;EACA;IACA;IACAA;IACAA;IACA;IACAA;IACAA;IACA;IACA;EAEA;EAEA;IACA;IACAA;IACAA;IACA;IACAA;IACAA;EAEA;AACA","names":["data","id","product","product_goods","begood","bestar","shop_stars","methods","params","product_id","then","console","catch","business_id","user_id","window"],"sourceRoot":"src/components/customer","sources":["customer_product_view.vue"],"sourcesContent":["<template>\n  <div v-if=\"product\">\n    <div class=\"product\">\n      <!-- 商品图片、名称、价格 -->\n      <div class=\"product-image\">\n        <img :src=\"`http://127.0.0.1:8000/media/${product.fields.product_image}`\" alt=\"\">\n      </div>\n      <div class=\"product-info\">\n        <h1 class=\"product-name\">{{product.fields.product_name}}</h1>\n        <div class=\"product-cost\">商品库存：{{product.fields.product_stock}}</div>\n        <div class=\"product-cost\">商品销量：{{product.fields.product_sales}}</div>\n        <div class=\"product-cost\">商品单价：{{product.fields.product_cost}}</div>\n        <div class=\"product-cost\">商品品牌：{{product.fields.product_brand}}</div>\n        <div class=\"product-cost\">商品颜色：{{product.fields.product_color}}</div>\n\n        <div class=\"product-add-cart\" @click=\"handleAddCart\">加入购物车</div>\n         <div>\n        <span class=\"fillheart\" v-if=\"begood\" @click=\"changeGood\">\n            <font-awesome-icon :icon=\"['fas', 'heart']\" class=\"icon righticon\" ></font-awesome-icon>\n        </span>\n        <span class=\"heart\" v-if=\"!begood\" @click=\"changeGood\">\n            <font-awesome-icon :icon=\"['fas', 'heart']\" class=\"icon righticon\" ></font-awesome-icon>\n\n        </span>\n\n        <span class=\"word\">{{product_goods}}</span>\n    </div>\n      </div>\n\n\n\n\n\n      </div>\n    <div class=\"product-desc\">\n      <h2>商家详情</h2>\n      <router-link :to=\"'/shop/' + product.fields.product_business\">\n        点击进入商家主页\n\n      </router-link>\n       <div>\n        <span class=\"fillstar\" v-if=\"bestar\" @click=\"changeStar\">\n            <font-awesome-icon :icon=\"['fas', 'star']\" class=\"icon righticon\" ></font-awesome-icon>\n        </span>\n        <span class=\"star\" v-if=\"!bestar\" @click=\"changeStar\">\n            <font-awesome-icon :icon=\"['fas', 'star']\" class=\"icon righticon\" ></font-awesome-icon>\n\n        </span>\n\n        <span class=\"word\">{{shop_stars}}</span>\n    </div>\n    </div>\n\n\n    <div class=\"product-desc\">\n      <h2>产品介绍</h2>\n      <img :src=\"`http://127.0.0.1:8000/media/${product.fields.product_imageDetail}`\" alt=\"\">\n    </div>\n  </div>\n</template>\n\n<script>\n//导入本地数据\n//import product_data from './product.js';\n\nexport default {\n  data(){\n    return {\n      //获取路由中的参数\n      id: parseInt(this.$route.params.id),\n      product: null,\n      product_goods:0,\n      begood:true,\n      bestar:true,\n      shop_stars:0,\n    }\n  },\n  methods: {\n    async getProductLikes(){\n      await this.axios.get('get_product_likes/',\n            {params:{ product_id: this.id}})\n        .then((response) => {\n            console.log(response);\n           this.product_goods=response.data.goods\n\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n      await this.axios.get('get_shop_stars/',\n            {params:{ business_id: this.product.fields.product_business}})\n        .then((response) => {\n            console.log(response);\n           this.shop_stars=response.data.stars\n\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    },\n    async changeGood(){\n      if(this.begood){\n        this.product_goods-=1\n      }else{\n        this.product_goods+=1\n      }\n      this.begood=!this.begood\n\n      await this.axios.get('toggle_user_like_to_product/',\n            {params:{user_id: this.$store.state.userId, product_id: this.id}})\n        .then((response) => {\n            console.log(response);\n\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    },\n    async changeStar(){\n      if(this.bestar){\n        this.shop_stars-=1\n      }else{\n        this.shop_stars+=1\n      }\n      this.bestar=!this.bestar\n\n      await this.axios.get('toggle_user_star_to_shop/',\n            {params:{user_id: this.$store.state.userId, business_id: this.product.fields.product_business}})\n        .then((response) => {\n            console.log(response);\n\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    },\n    async initUserToProduct(){\n      await this.axios.get('get_user_like_to_product/',\n            {params:{user_id: this.$store.state.userId, product_id: this.id}})\n        .then((response) => {\n            console.log(response);\n            //this.list = response.data.list\n          if(response.data.good==='good'){\n            this.begood=true\n          }else{\n            this.begood=false\n          }\n\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n      await this.axios.get('get_user_star_to_shop/',\n            {params:{user_id: this.$store.state.userId, business_id: this.product.fields.product_business}})\n        .then((response) => {\n            console.log(response);\n            //this.list = response.data.list\n          if(response.data.star==='star'){\n            this.bestar=true\n          }else{\n            this.bestar=false\n          }\n\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    },\n\n\n    async getProduct(x1){\n      await this.axios.get('fetch_product/',{params:{product_id: x1}})\n        .then((response) => {\n            console.log(response);\n            this.product = response.data.product\n        })\n        .catch(function (error) {\n            console.log(error);\n\n        });\n    },\n    async handleAddCart(){\n\n      await this.axios.get('add_to_cart/',\n            {params:{user_id: this.$store.state.userId, product_id: this.id}})\n        .then((response) => {\n            console.log(response);\n            //this.list = response.data.list\n            window.alert(\"添加成功\")\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n  },\n  async created(){\n    //初始化数据\n    console.log(\"detailview\");\n    console.log(this.id);\n    await this.getProduct(this.id)\n    console.log(\"detailviewend\");\n    console.log(this.product)\n    await this.initUserToProduct()\n    await this.getProductLikes()\n\n  },\n\n  async mounted(){\n    //初始化数据\n    console.log(\"11detailview\");\n    console.log(this.id);\n    await this.getProduct(this.id)\n    console.log(\"11detailviewend\");\n    console.log(this.product)\n\n  }\n}\n</script>\n\n\n<style scoped>\n.word {\n  font-size: 32px;\n  color: #ff69b4; /* Pink color */\n}\n\n.fillheart {\n  color: red;\n  font-size: 32px;\n}\n\n.heart {\n  color: gray;\n  font-size: 32px;\n}\n\n.fillstar {\n  color: yellow;\n  font-size: 32px;\n}\n\n.star {\n  color: gray;\n  font-size: 32px;\n}\n\n.product {\n  margin: 32px;\n  padding: 32px;\n  background: #fff;\n  border: 1px solid #ffc0cb; /* Pink border */\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */\n}\n\n.product-image {\n  width: 50%;\n  height: 550px;\n  float: left;\n  text-align: center;\n}\n\n.product-image img {\n  height: 100%;\n  border-radius: 10px; /* Rounded corners for images */\n}\n\n.product-info {\n  width: 50%;\n  padding: 100px 0; /* Reduced padding for a cleaner look */\n  float: left;\n  text-align: center;\n}\n\n.product-cost {\n  color: #ff69b4; /* Pink color */\n  font-size: 24px; /* Increased font size for emphasis */\n  margin: 8px 0;\n}\n\n.product-add-cart {\n  display: inline-block;\n  padding: 12px 64px; /* Increased padding for better touch target */\n  margin: 16px 0; /* Increased margin for spacing */\n  background: #ff69b4; /* Pink background */\n  color: #fff;\n  border-radius: 20px; /* More rounded corners */\n  cursor: pointer;\n  font-size: 16px; /* Larger font size */\n  transition: background 0.3s ease; /* Smooth transition effect */\n}\n\n.product-add-cart:hover {\n  background: #ff1493; /* Darker pink on hover */\n}\n\n.product-desc {\n  background: #fff;\n  margin: 32px;\n  padding: 32px;\n  border: 1px solid #ffc0cb; /* Pink border */\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */\n}\n\n.product-desc img {\n  display: block;\n  width: 50%;\n  margin: 32px auto;\n  padding: 32px;\n  border-bottom: 1px solid #ffc0cb; /* Pink border */\n  border-radius: 10px; /* Rounded corners for images */\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}