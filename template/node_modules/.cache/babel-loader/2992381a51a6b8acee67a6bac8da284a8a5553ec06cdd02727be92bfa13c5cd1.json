{"ast":null,"code":"import util from \"@/components/customer/util\";\nimport product_data from \"@/components/customer/product\";\nimport Vue from \"vue\";\nimport Vuex from 'vuex';\n\n//import customer_cart from \"@/components/customer/customer_cart\";\n\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nVue.use(VueAxios, axios);\n\n//1.安装插件\nVue.use(Vuex);\nconst store = new Vuex.Store({\n  state: {\n    //商品列表信息\n    productList: [],\n    //购物车数据，数组形式，数据元素为对象（商品id，购买数量count）\n    cartList: [],\n    //当前用户账号\n    username: window.localStorage.getItem('username'),\n    userId: parseInt(window.localStorage.getItem('userId')),\n    //登录状态\n    loginStatus: !!window.localStorage.getItem('loginStatus'),\n    searchText: '',\n    chooseProductId: -1\n  },\n  getters: {\n    //品牌、颜色筛选\n    brands: state => {\n      const brands = state.productList.map(item => item.brand);\n      return util.getFilterArray(brands);\n    },\n    colors: state => {\n      const colors = state.productList.map(item => item.color);\n      return util.getFilterArray(colors);\n    }\n  },\n  //mutations只能以同步方式\n  mutations: {\n    //添加商品列表\n    setProductList(state, data) {\n      state.productList = data;\n    },\n    //添加购物车\n\n    //修改购物车商品数量\n    editCartCount(state, payload) {\n      const product = state.cartList.find(item => item.id === payload.id);\n      product.count += payload.count;\n    },\n    //删除购物车商品\n    deleteCart(state, id) {\n      const index = state.cartList.findIndex(item => item.id === id);\n      state.cartList.splice(index, 1);\n    },\n    //清空购物车\n    emptyCart(state) {\n      state.cartList = [];\n    },\n    getUser(state, username) {\n      console.log('username', username);\n      state.username = username;\n    },\n    getLoginStatus(state, flag) {\n      state.loginStatus = flag;\n    },\n    editUserId(state, id) {\n      state.userId = id;\n      console.log('useridinjs', state.userId);\n    }\n  },\n  actions: {\n    //异步请求商品列表，暂且使用setTimeout\n    getProductList(context) {\n      setTimeout(() => {\n        context.commit('setProductList', product_data);\n      }, 500);\n    },\n    addCart(state, id) {\n      this.axios.get('add_to_cart/', {\n        params: {\n          user_id: this.$store.state.userId,\n          product_id: id\n        }\n      }).then(response => {\n        console.log(response);\n        //this.list = response.data.list\n        window.alert(\"添加成功\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n      /*const isAdded = state.cartList.find(item => item.id === id);\n      //如果不存在设置购物车为1，存在count++\n      if(isAdded){\n          isAdded.count++;\n      }else{\n          state.cartList.push({\n              id: id,\n              count: 1\n          })\n      }*/\n    },\n\n    //购买\n    buy(context) {\n      //生产环境使用ajax请求服务端响应后再清空购物车\n      return new Promise(resolve => {\n        setTimeout(() => {\n          context.commit('emptyCart');\n          resolve();\n        }, 500);\n      });\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["util","product_data","Vue","Vuex","axios","VueAxios","use","store","Store","state","productList","cartList","username","window","localStorage","getItem","userId","parseInt","loginStatus","searchText","chooseProductId","getters","brands","map","item","brand","getFilterArray","colors","color","mutations","setProductList","data","editCartCount","payload","product","find","id","count","deleteCart","index","findIndex","splice","emptyCart","getUser","console","log","getLoginStatus","flag","editUserId","actions","getProductList","context","setTimeout","commit","addCart","get","params","user_id","$store","product_id","then","response","alert","catch","error","buy","Promise","resolve"],"sources":["C:/Users/lenovo/Desktop/File/数据库引论/Shopping-Center-master/template/src/components/customer/store/index.js"],"sourcesContent":["import util from \"@/components/customer/util\";\nimport product_data from \"@/components/customer/product\";\nimport Vue from \"vue\"\nimport Vuex from 'vuex'\n\n//import customer_cart from \"@/components/customer/customer_cart\";\n\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\n\nVue.use(VueAxios, axios)\n\n//1.安装插件\nVue.use(Vuex)\nconst store = new Vuex.Store({\n    state: {\n        //商品列表信息\n        productList: [],\n        //购物车数据，数组形式，数据元素为对象（商品id，购买数量count）\n        cartList: [],\n        //当前用户账号\n        username: window.localStorage.getItem('username'),\n        userId: parseInt(window.localStorage.getItem('userId')),\n        //登录状态\n        loginStatus: !!window.localStorage.getItem('loginStatus'),\n        searchText:'',\n        chooseProductId:-1,\n    },\n    getters: {\n        //品牌、颜色筛选\n        brands: state => {\n            const brands = state.productList.map(item => item.brand);\n            return util.getFilterArray(brands);\n        },\n        colors: state => {\n            const colors = state.productList.map(item => item.color);\n            return util.getFilterArray(colors);\n        }\n    },\n    //mutations只能以同步方式\n    mutations: {\n        //添加商品列表\n        setProductList(state, data){\n            state.productList = data;\n        },\n        //添加购物车\n\n        //修改购物车商品数量\n        editCartCount(state, payload){\n            const product = state.cartList.find(item => item.id === payload.id);\n            product.count += payload.count;\n        },\n        //删除购物车商品\n        deleteCart(state, id){\n            const index = state.cartList.findIndex(item => item.id === id);\n            state.cartList.splice(index, 1)\n        },\n        //清空购物车\n        emptyCart(state){\n            state.cartList = [];\n        },\n        getUser(state, username){\n            console.log('username',username)\n            state.username = username;\n        },\n        getLoginStatus(state, flag){\n            state.loginStatus = flag;\n        },\n        editUserId(state,id){\n            state.userId=id\n            console.log('useridinjs',state.userId)\n        }\n    },\n    actions: {\n        //异步请求商品列表，暂且使用setTimeout\n        getProductList(context){\n            setTimeout(() => {\n                context.commit('setProductList', product_data)\n            }, 500);\n        },\n        addCart(state, id){\n            this.axios.get('add_to_cart/',\n                  {params:{user_id: this.$store.state.userId, product_id: id}})\n              .then((response) => {\n                  console.log(response);\n                  //this.list = response.data.list\n                  window.alert(\"添加成功\")\n              })\n              .catch(function (error) {\n                  console.log(error);\n              });\n            /*const isAdded = state.cartList.find(item => item.id === id);\n            //如果不存在设置购物车为1，存在count++\n            if(isAdded){\n                isAdded.count++;\n            }else{\n                state.cartList.push({\n                    id: id,\n                    count: 1\n                })\n            }*/\n        },\n        //购买\n        buy(context){\n            //生产环境使用ajax请求服务端响应后再清空购物车\n            return new Promise(resolve => {\n                setTimeout(() => {\n                    context.commit('emptyCart');\n                    resolve();\n                }, 500);\n            });\n        },\n    }\n});\nexport default store"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}